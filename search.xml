<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>月落日升</title>
      <link href="/2022/essay/%E6%9D%82%E8%AE%B0/%E6%9C%88%E8%90%BD%E6%97%A5%E5%8D%87/"/>
      <url>/2022/essay/%E6%9D%82%E8%AE%B0/%E6%9C%88%E8%90%BD%E6%97%A5%E5%8D%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　我看这里的雪渐渐地化了。这也只有一周的时间。在刚到这里的时候，才有一种冬天的气息，地上铺着雪，十分安静。过道两旁的绿化带里也积满了雪，很干净，上面有一些鞋印子。走过大桥，桥下远远的一条道上面是米黄色的雪，从这里延伸到更远的地方。</p><a id="more"></a><p>　　然而雪终于是要化的。这些堆积着的白色的东西，渐渐地就消失在了视线里，要等很久再能再见到它们。因为雪的消失，这个地方又一次热闹了起来。车轮碾压在马路上的声音，和一些拖着行李的声音，一些相谈甚欢的声音。然而冬天还没有完全地离去，一阵风把我的衣领子吹了起来。</p><p>　　食堂有一种令人感到厌恶的味道，浓稠的肉的味道混杂着各种说话的声音弥漫在这里。亮黄色和土褐色的食物装在一列并排放着的铁缸里，一些挥舞着的勺柄和一些翻转着的铁盘。密密麻麻的人坐在被分割成四个的方桌上。一股突然的眩晕和恶心的感觉从下往上涌出，下一秒。扶着楼梯离开了食堂的二楼，我看着这上面漂浮着的云。于是我走进了旁边的面包店，同样的反胃的感觉从里面出现。于是我提了袋看起来最容易接受的葡萄干面包片，离开了这里。这里没有柠檬水。</p><p>　　风的声音有点大。这种时候朝天上一看，到处都是星星。我从里面发现了北斗星，它比我上一次看到它的时候更暗。远处的天空的红边。国科大的钟楼在这个奇妙的场景下格外的清晰，我从来没有把它看得这么清晰过。这时我不考虑桥下雪化的问题。有一种冷的感觉，并且满足。但是桥下的雪化了，留下一滩橙色的道路。</p><p>　　电梯口感觉后面有什么人跟过来，进了电梯我发现跟着的是室友。我愣了一下应该怎么回复，他说好，我不知道我回答了些什么，但我回答了。电梯到了三楼，室友离开了电梯。我继续往上。没有比电梯更加尴尬的交通工具，它没有窗户和景色，只能看着变化的电梯数字面板。这个时候我怀念一些电梯里打着广告的小电视，和一些烂大街的轻音乐。</p><p>　　早上我醒来的时候，我觉得我做了五个梦，我觉得我醒了六次。但或许一次也没有醒，也只做了一两个梦。梦里有一些令人恐惧的东西，为什么“梦想”要带着“梦”这个字呢。我想在我没有意识的时候，月亮和星星从一个方向落下去，太阳从另一个方向升起来。这种红橙色的光将远处山的轮廓照亮，让夜呈现出更加绚烂的紫色，像是琥珀一样斑斓。我错过了这样的景色，我每天都错过这样的景色。一些瑰丽的东西发生在各个角落，在脑后面，在闭眼的时候。这个颜色出现得如此的生动，我以为这是梦，但我发现我已经醒了，一些东西从弧面滑落。一些时刻更近了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian插件使用</title>
      <link href="/2022/tech/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/tech/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这里记录了一些 Obsidan 插件的使用方法。</p><a id="more"></a><h2 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h2><h3 id="如何设定任务？"><a href="#如何设定任务？" class="headerlink" title="如何设定任务？"></a>如何设定任务？</h3><p>　　按下两次回车键，或者输入 <code>-[]</code>。会在位置生成一个空的任务。也可以使用快捷键创建或者编辑任务。编辑任务可以设定任务的开始时间、结束时间、计划时间以及循环周期。设定结束后，该行任务后会跟随一个标记和时间，这个是 Tasks 插件自动生成的。</p><p>　　完成任务时，使用命令面板调出完成任务，或者设定相应的快捷键。则这个任务被标记为已完成，并在其后添加一个完成的时间。注意：直接点击勾选框完成任务，同样可以完成任务，但不能自动增加完成任务的时间。</p><h3 id="如何聚合任务？"><a href="#如何聚合任务？" class="headerlink" title="如何聚合任务？"></a>如何聚合任务？</h3><p>　　聚合任务是通过下述结构完成的。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\`</span><span class="symbol">\`</span><span class="symbol">\`</span>tasks</span><br><span class="line"></span><br><span class="line"><span class="symbol">\`</span><span class="symbol">\`</span><span class="symbol">\`</span></span><br></pre></td></tr></table></figure><p>　　这个结构可以有很多行：</p><ol><li>第一行描述任务的状态，例如 <code>not done</code>，<code>done</code>，<code>done on yesterday</code>等。</li><li>第二行描述任务的时间限制，例如 <code>due on tomorrow</code>，<code>due after today</code>等。</li><li>第三行等描述更多的约束，例如 <code>is not recurring</code> 表示非循环任务。</li><li>此外可以对任务的描述进行筛选等等，例如包含“阅读”两字描述的任务。</li></ol><p>　　一个完整的聚合如下。其代表没有设定截止时间的、非循环的、描述中不含“阅读”两字的未完成任务。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\`</span><span class="symbol">\｀</span><span class="symbol">\`</span>tasks</span><br><span class="line">not done</span><br><span class="line">no due date</span><br><span class="line">is not recurring</span><br><span class="line">description does not include 阅读</span><br><span class="line"><span class="symbol">\`</span><span class="symbol">\`</span><span class="symbol">\`</span></span><br></pre></td></tr></table></figure><h2 id="Templater"><a href="#Templater" class="headerlink" title="Templater"></a>Templater</h2><h3 id="如何插入模板"><a href="#如何插入模板" class="headerlink" title="如何插入模板"></a>如何插入模板</h3><p>　　在插件目录中选择一个文件夹作为模板文件夹，模板文件夹下下的所有<code>md</code>文件都被视为模板，可以通过命令面板调用。例如下面的模板：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">creation date:</span> &lt;%<span class="ruby"> tp.file.creation_date() </span>%&gt;</span><br><span class="line"><span class="attr">modification date:</span> &lt;%<span class="ruby"> tp.file.last_modified_date(<span class="string">"dddd Do MMMM YYYY HH:mm:ss"</span>) </span>%&gt;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;&lt;</span> <span class="string">[[&lt;%</span> <span class="string">tp.date.now("YYYY-MM-DD",</span> <span class="number">-1</span><span class="string">)</span> <span class="string">%&gt;]]</span> <span class="string">|</span> <span class="string">[[&lt;%</span> <span class="string">tp.date.now("YYYY-MM-DD",</span> <span class="number">1</span><span class="string">)</span> <span class="string">%&gt;]]</span> <span class="string">&gt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;% tp.file.title %&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%<span class="ruby"> tp.web.daily_quote() </span>%&gt;</span><br></pre></td></tr></table></figure><p>　　其调用结果为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">creation date:</span> <span class="number">2021</span><span class="number">-01</span><span class="number">-07</span> <span class="number">17</span><span class="string">:20</span></span><br><span class="line"><span class="attr">modification date:</span> <span class="string">Thursday</span> <span class="string">7th</span> <span class="string">January</span> <span class="number">2021</span> <span class="number">17</span><span class="string">:20:43</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;&lt;</span> <span class="string">[[2021-04-08]]</span> <span class="string">|</span> <span class="string">[[2021-04-10]]</span> <span class="string">&gt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Test Test</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;</span> <span class="string">Do</span> <span class="string">the</span> <span class="string">best</span> <span class="string">you</span> <span class="string">can</span> <span class="string">until</span> <span class="string">you</span> <span class="string">know</span> <span class="string">better.</span> <span class="string">Then</span> <span class="string">when</span> <span class="string">you</span> <span class="string">know</span> <span class="string">better,</span> <span class="string">do</span> <span class="string">better.</span></span><br><span class="line"><span class="string">&gt;</span> <span class="string">&amp;mdash;</span> <span class="string">&lt;cite&gt;Maya</span> <span class="string">Angelou&lt;/cite&gt;</span></span><br></pre></td></tr></table></figure><p>　　这个插件使用 <code>&lt;% %&gt;</code> 来描述需要插入的信息。</p><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><p>　　<code>&lt;% %&gt;</code>这样的结构被称为命令，命令中包含的是变量或者函数。当在命令被执行的时候，这些变量会被带入、函数会被计算。一些内置的函数如下：</p><ul><li><code>tp.web.daily_quote()</code>：今日格言</li><li><code>tp.date</code><ul><li><code>tp.date.now()</code>：日期</li><li><code>tp.date.tomorrow()</code>：明天日期</li><li><code>tp.date.weekday()</code>：指定当周某一个天</li></ul></li><li><code>tp.file</code><ul><li><code>tp.file.content()</code>：文章内容</li><li><code>tp.file.create_new(template: TFile ⎮ string, filename?: string, open_new: boolean = false, folder?: TFolder)</code>：使用一个设定的模板创建一个新文件</li><li><code>tp.file.creation_date()</code>：文件创建时间</li><li><code>tp.file.cursor(order?: number)</code>：文件指针的访问顺序</li><li><code>tp.file.last_modified_date()</code>：最后更改时间</li></ul></li><li><code>tp.frontmatter.&lt;frontmatter_variable_name&gt;</code>：调用笔记的 frontmatter。</li></ul><h2 id="Dataview"><a href="#Dataview" class="headerlink" title="Dataview"></a>Dataview</h2><p>　　Dataview 以页面作为单位整合数据。字段有三种定义方式：</p><ol><li>frontmatter</li><li>内联字段：<code>Name:: Value</code>。</li><li>隐含字段：Dataview 自带的元数据，例如文件创建日期等。</li></ol><h3 id="常用隐含字段"><a href="#常用隐含字段" class="headerlink" title="常用隐含字段"></a>常用隐含字段</h3><ul><li>file.name: 该文件标题(字符串)。</li><li>file.folder: 该文件所在的文件夹的路径(字符串)。</li><li>file.ctime: 该文件的创建日期(日期和时间)。</li><li>file.cday: 该文件的创建日期(仅日期)。</li><li>file.mtime: 该文件最后编辑日期(日期和时间)。</li><li>file.mday: 该文件最后编辑日期(仅日期)。</li><li>file.tags: 笔记中所有标签组成的数组。子标签按每个级别进行细分，所以#Tag/1/A将会在数组中储存为[#Tag, #Tag/1, #Tag/1/A]。</li><li>file.etags: 笔记中所有显式标签组成的数组；不同于file.tags，不包含子标签。</li></ul><h3 id="查询语言"><a href="#查询语言" class="headerlink" title="查询语言"></a>查询语言</h3><p>　　查询语言有三种类别：表格、列表和任务列表。通用格式如下：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\`\`\`dataview</span><br><span class="line"><span class="meta">TABLE</span>|<span class="meta">LIST</span>|TASK &lt;field&gt; [<span class="meta">AS</span> <span class="string">"Column Name"</span>], &lt;field&gt;, ..., &lt;field&gt; </span><br><span class="line"><span class="meta">FROM</span> &lt;source&gt; (<span class="meta">like</span> #tag <span class="meta">or</span> <span class="string">"folder"</span>)</span><br><span class="line"><span class="meta">WHERE</span> &lt;expression&gt; (<span class="meta">like</span> <span class="string">'field = value'</span>)</span><br><span class="line">SORT &lt;expression&gt; [ASC/DESC] (<span class="meta">like</span> <span class="string">'field ASC'</span>)</span><br><span class="line">\`\`\`</span><br></pre></td></tr></table></figure><ol><li><code>or</code>，<code>and</code> 等语言是可以使用的。From 有三种选择：<ol><li>标签：<code>From #tag</code></li><li>文件夹：<code>From &quot;folder&quot;</code></li><li>链接：选择链接到该文件的所有文件（<code>From [[note]]</code>），或者从该文件连接的所有文件（<code>From outgoing([[note]])</code>）。</li></ol></li><li><code>SORT date [ASCENDING/DESCENDING/ASC/DESC]</code></li><li><code>WHERE file.mtime &gt;= date(today) - dur(1 day)</code></li><li><code>flatten</code> 强制将结果显示在一行之内</li></ol><h2 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h2><p>　　创建按钮。例如下述代码在 Readings 文件夹下使用 Template-Book 作为模板，生成一篇名为 NewBook 的笔记。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\`\`\`button</span><br><span class="line">name <span class="builtin-name">Add</span> a new book</span><br><span class="line">type note(/Readings/NewBook) template</span><br><span class="line">action Template-Book</span><br><span class="line">\`\`\`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian使用指南</title>
      <link href="/2022/tech/Obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2022/tech/Obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　和 Logseq 十分像的一个笔记软件，但功能有些许不同。经过考虑，从 Logseq 系统迁移到了 Obsidian。这里初步整理一下 Obsidian 的使用方法。</p><a id="more"></a><h2 id="和-Logseq-异同"><a href="#和-Logseq-异同" class="headerlink" title="和 Logseq 异同"></a>和 Logseq 异同</h2><div class="table-container"><table><thead><tr><th>功能</th><th>Obsidian</th><th>Logseq</th></tr></thead><tbody><tr><td>文件</td><td>markdown</td><td>markdown</td></tr><tr><td>git</td><td>不支持</td><td>原生支持</td></tr><tr><td>PDF 批注</td><td>BookNote等插件支持，效果略强于 Logseq</td><td>原生支持</td></tr><tr><td>任务管理</td><td>Tasks等插件支持</td><td>原生支持</td></tr><tr><td>查询块</td><td>不支持</td><td>原生支持</td></tr><tr><td>模板使用</td><td>插件支持</td><td>原生支持</td></tr><tr><td>多Tab</td><td>原生支持</td><td>不支持</td></tr><tr><td>MindMap</td><td>插件支持</td><td>插件支持</td></tr><tr><td>文段逻辑</td><td>Doc风格</td><td>大纲风格</td></tr><tr><td>所见即所得</td><td>插件支持</td><td>原生支持</td></tr></tbody></table></div><p>总而言之，Logseq的功能，大多Obsidian无法原生实现，但是具有对应的插件可以使用。Logseq 更加开箱即用。</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="官方插件"><a href="#官方插件" class="headerlink" title="官方插件"></a>官方插件</h3><ol><li>GraphView，关系图谱。</li><li>Command palette，命令面板（如VSCode）。</li><li>Workspaces，工作空间。可以记录和载入工作空间。该工作空间可以记录当前打开的所有文档以及各个工具栏的位置和摆放。在载入工作空间后，应用上述所有设置。</li><li>File recovery，增量式地记录修改的内容，形成闪照。</li><li>……</li></ol><h3 id="社区插件"><a href="#社区插件" class="headerlink" title="社区插件"></a>社区插件</h3><ol><li>Admonition：增加块风格的标注。例如带电灯泡的表示灵感的段落。</li><li>Advanced tables：更好的表格，可以简单地后加一行，下加一行等等。</li><li>BookNote：笔记插件，可以打开PDF，标注PDF，并在文内应用这些标注。在点击文内相关标注时，会打开对应的文档。和 Logseq 的 PDF 标注功能基本相同，但功能更多，使用体验更好。</li><li>Buttons：在文中增加按钮，点击这些按钮可以实现一些自定义的功能，例如在当前文件夹下使用模板生成一篇新的笔记，等等。</li><li>Calendar：生成一个日历，对每日生成日志，对每周生成周志，都可以使用模板。</li><li>Copy Block Link：右键块可以复制该块的链接。</li><li>Dataview：信息整合插件，用以收集具有相同标签等信息的文件。</li><li>Mind Map：增加脑图功能，对不同等级的标题和列表进行脑图生成。</li><li>Ozan’s Image in Editor Plugin：实现所见即所得，实时渲染图片公式等。</li><li>Tasks：增加任务设定，并且可以根据时间等信息聚合任务。</li><li>Templater：快速插入模板的插件。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>烟花</title>
      <link href="/2022/essay/%E6%89%8B%E8%AE%B0/%E7%83%9F%E8%8A%B1/"/>
      <url>/2022/essay/%E6%89%8B%E8%AE%B0/%E7%83%9F%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-jJIbZLAL" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="31738245" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>　　每次看着烟花的时候，就会不自主地在脑子里构想出一群在地面上站立着的小孩。这些小孩一边指着烟花燃尽的尾巴，一边问着，“这烟花是放完了吗？”烟花这个事情，被自己在了我曾经的某个突发奇想的日记本的第一页，然而再没有第二页，这个本子也就如同烟花一样。</p><a id="more"></a><p>　　我给三弟发了张烟花的照片，但已经是接近凌晨两点了。更早些的时候，他说自己还在做导师布置的工作，还喝着茶。现在没有信息过来，大概是睡下了。我本以为所谓1月1日没有那么多的想法，但这种人为的变化，还是象征了一些什么。室友也都睡下了，但我一点困的意思都没有。窗外球场的灯全都关着，在一片黑暗中。像那个等流星雨的夜晚。总有一些不能想象的东西，视野以外的一切、过去和黑的天空。</p><p>　　在 MC 里面放烟花是筹划了已久的事情，但基本是对去年新年的一个致敬。一些奇形怪状的烟花飞在空中裂开来，接近两箱的烟花和各种纷繁的颜色，还是和去年一样四个人，但人换了几个。想起去年跨年时突发奇想地像开启了服务器，已经一年了。我离本科的寝室、本科的生活和本科的人都很远了。</p><p>　　就在我离开歌唱的队伍的时候，L 发现了我和 X，她从手里取出四个纪念币，给了我们一人两个，说是冬奥会的纪念币。我说，“冬奥会志愿者？”但只是在银行里兑换的。四周除了路灯外没有什么别的光源，我看不清楚纪念币上面刻的内容，只是立刻想到了纪念币是很容易被空气腐蚀的东西。</p><p>　　在回去的途中，看见围成一团的人，这团人中间站着几个正在唱歌的人。围着的人纷纷掏出手机录像，唱歌的人唱的大概是什么曲子的合唱。从钟楼回去的所有人都会经过这里，桥上也站着不少的人。一曲结束了，他们整顿了一下形式，然后又开始了新的一首歌。我们就这样往回走了，后面还很热闹。我突然想把口琴带过来吹一首国际歌，但又不想被任何人看见。离开这里吧。</p><p>　　倒数的声音从二十到十，又到了零。不甘心地，下面仰望着钟楼的人又从十数到零。然而很失望的，没有声音从上面传来，下面站着的人高呼着新年快乐来缓解这种尴尬，然后细细簌簌地都开始离开这个地方。教学楼上的灯黑了，不会有人来敲钟了。大概没有人被安排来敲这个钟吧，我这么想。又有多少人在意这个钟呢。</p><p>　　学校里已经没有多少人了。许多人已经结束了自己的考试离开了这里，在接近十二点的时候，更显得如此。没有什么人在路上行走——正走的人，大概都是朝着钟楼走。十二点后回到寝室要被记过，据说是这样的。但大概守门的阿姨是不想记过的，今天晚归的人会很多，不大醉还带着酒气已经很不错了。没有月亮，没有星星。</p><p>　　我认为我大概适应了这个地方，但我绝对不喜欢它。在这里时间流逝的速度很快，人容易碌碌无为。在新加坡的时光就出奇的缓慢，现在想起来，像是在那里度过了一年的时间，在离开那里的时候却不一定如此认为。这里容纳了太多离群的内容，山上盘亘的长城总是让我在看向窗外的时候多看几眼。</p><p>　　想要抓住一些什么东西是困难的，想要产生要抓住一些什么东西的想法是困难的。这大概不被称之为无所事事。烟花被放置在地面，然后燃起了火星，从下方往上面行进，到了一个高的位置绽放开来，带着迅速蔓延的烟火味，光芒也随之消散了。这就是一个烟花。人究竟是为了什么想看这个烟花，是因为它美吗？或许对于古人来说，火的原理尚不清晰，烟花就更像是一种精巧又奇迹的东西，现代人从烟花中寻找什么呢。现代人从现代寻找些什么。PPLRDLL。</p><p>　　Run rabbit run. </p><p>　　Dig that hole forget the sun. </p><p>　　And when at last the work is done. </p><p>　　Don’t sit down it’s time to dig another one.</p><p>　　Run rabbit run. Leave，but don’t leave me．</p><p>　　Run rabbit run. And the General sat and the lines on the map moved from side to side。</p><p>　　Run rabbit run. Far away, across the field. The tolling of the iron bell.</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜游记</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/%E5%A4%9C%E6%B8%B8%E8%AE%B0/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/%E5%A4%9C%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　在我推开门的时候，我突然听见人的声音从里面传来，从凌晨三点三刻的一间亮着灯的教室里。通往这栋楼的挡着风的门和实际发挥作用的门开着，从内里闪烁着昏黄的光，暖气的气息扑过来，脸慢慢恢复了知觉。看着闪过的一切文明的标记，觉得自己从什么外星回到了名为地球的世界。来到最近的一个房间，我推开了一扇门。</p><a id="more"></a><p>　　我看着一颗流星从山上的一个位置向下滑去，在我还来不及发出任何声响的时候，就消失在了视线中。流星和普通的星光颜色是一样的，像电光一样的纯白色。和彗星不同，流星出现的时候顶着巨大的光点，中间则更加窄，到了最末的时候竟然又膨大起来。一些短的流星，就像是一个横亘在天空中的哑铃，但一瞬间就没有了。我看见的这一颗十分的明亮，像数截拼在一起的线，被我的眼睛捕捉到。每当这种时候，就会想起一片呼叫声，“我看见了，我看见了！”“我也是。”</p><p>　　北斗七星挂在天空中的一面，猎户座挂在另一面。拍摄流星未成的几个摄影爱好者掉过头去拍摄静止的北斗七星，北斗七星的明亮不比往日特殊，但比瞬间消散的流星给人给多的安稳。北斗七星的尾巴沉在光污染和纯粹的交界处上，勺头放在漆黑的天空中，勺尾则在一片粉红色的边缘里。正当我们关注着这个硕大的结构的时候，一颗细微的流星从它的旁边擦过，但可惜没有人抓到。</p><p>　　当我刚来到这片空地的时候，上面已经聚起了三三两两的人，我听见远处传来X的声音，在更远的地方传来吉他的声音。吉他声音的旁边堆叠着一些哄笑声，不一会歌声起来了，合着琴声。X的声音也很大，在辨别着天上的星座，周围围了一大串人。七八个三脚架错落地放在人群空着的地方，一些人躺在铺在地面上的垫子上，一些人躺在地面上。歌声又一阵响了起来，“真好啊”我说，我走近了三脚架的区域。真好啊，我想。X说他带了一瓶酒，我说我带了1.5升热水。</p><p>　　我已经习惯性地盯着那边天空的时候，一道白色的刀刃一样的东西，将天空从中间划开，刀刃的末端闪烁着绿色的电光一样的色彩。大概只在半秒之间，这道刀刃隐去了形状，留下了一片片此起彼伏的呼喊。“是什么东西，那个？”我看见它的时候愣住了，一个宽阔又闪烁着奇特光彩的流星，果断地不像一个流星，也不果断地不像一个流星。其他众人纷纷冲到相机的前面，检查着拍摄的记录。然后不得不垂头丧气，喊着只抓住了个尾巴。更遗憾的是那些眼睛都未抓住这个刀刃的人。</p><p>　　后面天突然亮了起来，从猎户座开始，白色的星星占据的空间大幅度地皱缩着，蓝粉色的光芒从四面八方涌起来。这时没有什么明显的流星了，于是我们商量着离开，卷起地上的东西，装上垃圾，收起三脚架。就在收着的时候，零零星星的几个人喊着，一颗。我抬头望去，心知这将什么也看不见，于是很快继续收拾我的东西，在我低头的时候，又是几声，又是一颗。这些流星不属于我。</p><p>　　天空黑得像墨水一样，偏偏是这样扁平的画面上放置的这些忽明忽暗的白色物体，让整个天空变得无比深邃，仿佛攀着这些不同亮度的光点，我能抵达不同距离的远方。当我看到这些亮光的时候，它们在空间中传递了多少年。时不时地从空中拉过一些细线，时不时地响起一些惊呼。我说，放点音乐吧，于是这周围响起了微弱的音乐声。是万青的专辑，前半首是民谣的风格，后半首就呈现出了摇滚的腔调。万青的声音从电脑出来，并不能抵达很远的地方，我围着它四处移动的时候，我感觉像是一个画着椭圆的行星。</p><p>　　于是我们聊起了第谷，聊起了流星的成因，聊起了双子座的位置和流星的朝向，聊起了拍摄的曝光时间和拍摄速度。一些人放弃了拍流星，开始尝试画出一条星轨，然而不断出现在天空中的飞机带着三个光点让这些尝试不能成功。慢慢的，有人开始离开这里，一些人来到了这里。有的人会过来攀谈几句，说要不要一起吃自热火锅；有的人会过来问几句摄影相关的事情；有的人大声聊起明天要翘的课。</p><p>　　到最后，我也没看见多少流星，除开像绿色闪电的那一株，还有好几个令我绝对忘不掉。漆黑的深邃的富有魅力的星空，我凝视了它如此之久，第一次。一小时又是一小时。在我们分别后，我回到了住宿楼前，这个时候外面的大门锁了，我进不去。他们都说给宿管打电话叫开门，但我不想这么做。这是一个充满了浪漫味道的夜晚，而这是一个绝对不浪漫的行为。绝不能将梦中的人拖到现实里来，于是我提着我的水壶朝着教学区的方向前进。夜里的校园很安静，所有的店铺都关着门，宿舍楼的厕所间映射出灯光，一些人的房间映射出灯光，食堂的转角映射出灯光。一些星星还在头上，但已经暗淡了许多，北斗七星仍旧明亮，并也已升到了很高的空中。我不认为这是单调的工作，相反因为它的单调而丰富了起来。最后站在那里的，都是些浪漫的人。这样想着，我走到了教学楼前。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>食堂二楼</title>
      <link href="/2021/essay/%E9%A3%9F%E5%A0%82%E4%BA%8C%E6%A5%BC/"/>
      <url>/2021/essay/%E9%A3%9F%E5%A0%82%E4%BA%8C%E6%A5%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　这个学校没有几个食堂。平日课程能有的选择也屈指可数，很快每个食堂的脾气都摸得一清二楚。这种情况下就会形成一些 routine，比如周二下午的课下了去哪里。同样的，选择的座位也渐渐形成了类似的 routine。有一些座位一般都是空着的，而我一般会去那里。</p><a id="more"></a><p>　　选择这些座位没有什么别的缘由，只是因为清净，鲜有人在旁边，即使是隔着那个十字型的纸隔板也没有人。对于那个称为第一食堂的建筑，也存在这样的类似 routine 的座位，是二楼右转一直走到底的一排座位。很少有人会一直走到底；那边既不卖什么东西，也不方便离开，但对我而言却很理想。在将要入冬前的时候，在这个位置的附近多了一辆卖糖葫芦的小车，看起来煞有介事的，而且还确实运营过两天。但当时我就很清楚，它运营不下去，这里压根就没有人来，除了我。果然一周后，那辆车还在那里，却没有人卖糖葫芦了。这个地方的清净由是可见。</p><p>　　然而有一天，事情突然有些出乎意料。正当我坐下的时候，我的旁边经过了一位学生。没有多久，又是一个。我觉得诧异，仿佛前往这个噪声的绿洲的人突然间多了起来，我不禁开始四下探寻这是为什么。然后我发现了一些奇怪的迹象：在我座位的正右手边大概五米的距离，刚好一个走廊的宽度，中间没有任何遮拦的，是一个卫生间。难道我在这里坐了这么多时间，却从来没有注意到这个卫生间吗？在此之前，都没有人注意到这个卫生间，然后突然大家都发现了它的存在，将它使用了起来。</p><p>　　它就像是突然蹦出来的，并且所有人都觉得理所应当。其后很多天，我隔着几个位置观察着这个凭空出现的卫生间。一切都很正常，进去的人出来了。盥洗台上的镜子折射着整个大厅。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 怪事记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我开始明白我自己，我不存在</title>
      <link href="/2021/essay/%E8%AF%97%E6%AD%8C/%E6%88%91%E5%BC%80%E5%A7%8B%E6%98%8E%E7%99%BD%E6%88%91%E8%87%AA%E5%B7%B1%EF%BC%8C%E6%88%91%E4%B8%8D%E5%AD%98%E5%9C%A8/"/>
      <url>/2021/essay/%E8%AF%97%E6%AD%8C/%E6%88%91%E5%BC%80%E5%A7%8B%E6%98%8E%E7%99%BD%E6%88%91%E8%87%AA%E5%B7%B1%EF%BC%8C%E6%88%91%E4%B8%8D%E5%AD%98%E5%9C%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　随便看见的一首诗歌。为了避免忘记，放在这里。原文看不懂，不然可以来一个翻译。但大概，不太需要翻译…直白。</p><a id="more"></a><h1 id="我开始明白我自己，我不存在"><a href="#我开始明白我自己，我不存在" class="headerlink" title="我开始明白我自己，我不存在"></a>我开始明白我自己，我不存在</h1><p>【葡】佩索阿</p><p>杨铁军译</p><p>我开始明白我自己。我不存在。</p><p>我是我想成为的那个人和别人把我塑造成的那个人之间的裂缝。</p><p>或半个裂缝，因为还有生活……</p><p>这就是我。没有了。</p><p>关灯，闭户，把走廊里的拖鞋声隔绝。</p><p>让我一个人呆在屋里，和我自己巨大的平静呆在一起。</p><p>这是一个冒牌的宇宙。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ha(r)sh dreams</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/Ha(r)sh%20dreams/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/Ha(r)sh%20dreams/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　有些人没有做梦的才能，当躺在一张窄小的床上刚刚把手机放下的时候，就来到了第二天睁眼的时刻。这中间的时间是一片空白；现代科学说，这些人不是没有做梦的才能，而是缺乏将梦记下来的才能。这些没有做梦才能的人的梦，要么是过分抽象的，要么是令人恐惧的，仿佛清醒的时刻太阳照见的角落里隐藏的污渍纠缠在一起，躲在了这些被忘记的梦境中。然而这些没有做梦才能的人，也会突然记起一两个梦，并为之感到毛骨悚然。</p><a id="more"></a><p>　　说这些人可以刚刚靠在枕头上就进入没有梦的梦乡，并不是那么贴切。比如我，有一次朦朦胧胧间，我回想起了一两年前，坐在新加坡的前往樟宜机场的地铁上的场景，当时我拖着我的箱子，背着我的琴。在这个地方呆了一学期，觉得一切都正常，仿佛从来生活就是这个样子。于是突然对回国即将面对的一切陌生了起来，看着这个架在地面上的地铁，便觉得地铁从来是这个样子；在地铁上看着窗外流逝的风景，仿佛下一个学期才是真正交换的时候，现在只是过来摸了个底。</p><p>　　这一切真切的感受都从那个即将跌入梦境的时刻回到了我的脑海里，就当我意识到我现在正清醒着，正思考着这一切的时候，像断了的唱针，我的思考滑入了不知道颜色的空间，然后就来到了第二天的早晨。</p><p>　　人如果没有梦连接起一天又一天，是不是在夜晚到来的时候就被杀死了一遍，等到第二天又被赋予了新的生命。没有梦的睡眠，是不是就是死亡的样子。我想起的那个新加坡地铁的一切，细腻又生动，仿佛一切的色彩和声音都凌空出现。这样的回忆是不是艺术作品认为的走马灯。那死亡真是宁静。</p><p>　　突然某一次，这些人记住了自己的梦，但却不敢记下来。有些时候，等到时间流逝一点点时间，就永远丧失了记下的机会。或许只是寻找纸笔的时间，灵感就走丢了。但更多的时候，他们清晰地记得一切，记得自己梦中背负的人影和沉重又富有希望的呼吸，像是记得那个新加坡地铁一样记得清晰，但是却不敢记下来。这样的梦辜负了自己，还辜负了一些可能存在的人影，它们就这样被记了下来。就像那个卧在枯萎的土地上的凄惨的火车车厢，在我现在看来藏着可怕的欲望。梦里藏着比醒着的时候更加悲切而难以洞察的邪念；或许不做梦的人，真像科学那样忘记了自己的梦，作为某种自我保护的措施，将这些欲望藏得更深一些。</p><p>　　有一天我从课上离开，路过了一个卫生间。卫生间的门前一侧，站着一个紧张的男生。他全身紧紧地贴着墙壁，两只手掌心朝墙，粘在墙壁上，眼睛不住地盯着卫生间的出口。他等待着。我离开了那里，希望他完成了他的目标，这样他当天或者以后的梦里就藏着更多的温情。本科的时候，我的室友说他每天都做梦，他记得他的每一个梦。在第二天早晨我们刚好能一起去食堂寻找早餐的小道上，他会讲这样的梦境。我记得他讲过有一次他和同学去游乐园，在过山车下降的时候冲出了轨道，掉到了校园里，开学了。我想我喜欢这样的梦，他们快乐又简单。能记得这一切温馨，或许是另一个角度的自我保护。还有一些人梦里藏着团聚，一些人梦里藏着成功。他们清晰地记得这一切，永远不会忘记。</p><p>　　有这样的时候，这些记不住梦的人，突然从梦境中找到了快乐，被阳光照醒了眼睛。他们哀嚎着，想要回到那一些梦境中。他们假装睡过去，希望继续刚才的故事；有的时候这些故事接上了，却变了味。这些半梦半醒的人继续哀嚎着，追寻着刚才的梦境。等到又一次醒来，或许连做过梦这样的事情都忘记了。有的人醒的时候脸上沾着些清泪，嗓子发干，像是一点都没有睡醒。我们不把这样的梦境叫噩梦。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吃葡萄不吐葡萄皮</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E5%90%83%E8%91%A1%E8%90%84%E4%B8%8D%E5%90%90%E8%91%A1%E8%90%84%E7%9A%AE/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E5%90%83%E8%91%A1%E8%90%84%E4%B8%8D%E5%90%90%E8%91%A1%E8%90%84%E7%9A%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　从我的窗户往下看，可以看到一条通往篮球场的路，和远处一片篮球场和更远的网球场。没到晚上的时候，灯火辉煌，灯光下的人影起起伏伏，团抱着灯光聚聚散散。有一天傍晚的时候，天空突然阴沉了起来，于是球场上的人们突然发出了一些声响，从那边逃蹿出来。沿着道走的人都抱着头快速移动着。很快地面从灰扑扑的颜色变成了墨绿色。</p><a id="more"></a><h2 id="聊天室"><a href="#聊天室" class="headerlink" title="聊天室"></a>聊天室</h2><p>　　有一个这样的聊天室，本来是成员之一 L 突然想起来想要想要重启一个古老的游戏，我也饶有兴趣，时不时旁观一下。后面我告诉了 H，于是这个聊天室就建立了起来。后面聊天室里面会谈各种问题，学术的或者政治的。我们见这样的谈话氛围是好的，就也想着扩大这个队伍。后面扩了几圈人，人数到了七八个，反而都噤了声。于是我们最初的三个人合计了一下，一个新的聊天室成立了。</p><h2 id="飞跃而下"><a href="#飞跃而下" class="headerlink" title="飞跃而下"></a>飞跃而下</h2><p>　　跳楼看起来成了一种非常受欢迎的自杀方法。记得大一的时候回寝室，路过一栋五六楼高的小宿舍楼，看见下面停着辆急救车。后面知道是发生了什么，但人还苟且地活着。大概也是同一年，三弟有天晚上给我发了张照片，雪地里有个深陷的人影。他说是有人跳楼了，我说你把图片撤回去再删除了吧，这样并不尊敬死者。在后面听见南京大学跳楼的事情，仿佛如同惯例一般，隔三岔五就会有一个。再后面我知道了高中隔壁班的一个同学也选择了这样一条道路。之后不久，我见到了 X，聊到这个事情。他说他当时参加了葬礼。参加同龄人的葬礼，比预想的来得还快。</p><h2 id="几首诗"><a href="#几首诗" class="headerlink" title="几首诗"></a>几首诗</h2><h3 id="太阳"><a href="#太阳" class="headerlink" title="太阳"></a>太阳</h3><p>隐隐作痛地笼罩。雪热。护国。<br>领带绑住天的手，轻抚她的韵脚。</p><p>须鲸则在大家的骨灰里游泳，<br>人和其他人被头发丝连起来，<br>头发很脏，但大是大非之前，没有人去清理。</p><p>世界亮得很快，因为太阳很猛。<br>灰尘清晰可见。灰尘之间的空间<br>允许距离存在，允许主义存在。<br>允许热量存在。</p><p>下雪的时候，世界是颠倒过来的；<br>地在上，天在下，浮沉在中，<br>东亚御乱，赘婿丈人。<br>都是冰。冰到伏特加闻起来像汽油。<br>有一根冰柱子，从地上到天下</p><p>任何眼睛，在任何地方，都看得见<br>任何耳朵，在任何时间，都听得见<br>冰柱子串起鼓膜和肚脐。</p><p>黄河水倒流进吊瓶。<br>太阳从胃酸中，涌现，<br>脓液的雨修复意志。</p><p>海有许多滴水，<br>路有许多分岔，<br>树有许多树叶。<br>树叶有一棵树，天空，和泥土，<br>在下雪的时候，还有自怨自艾的资本。</p><p>袭人的热浪…… 在衣物外面传播。<br>肉馅既然已经是肉馅，那<br>肝脏也被允许。<br>东亚御乱，赘婿丈人，都是冰。</p><p>太阳出来咯，嘿，<br>喜洋洋咯。<br>意志被烤得酥脆。<br>意志被冻得起泡。</p><h3 id="红酒之对瓶吹"><a href="#红酒之对瓶吹" class="headerlink" title="红酒之对瓶吹"></a>红酒之对瓶吹</h3><p>Exivious 的第二张专辑比第一张差了好多啊<br>虽然都很好听<br>边听边喝一瓶红酒：<br>The Great Bonza Reserve Shiraz Cabernet 2019<br>14.5 八仙的酒精浓度，七百五十毫升，澳洲产。<br>拿了一个什么金奖和什么银奖。<br>很幸运地，是有瓶盖的。<br>可惜剩下三瓶都是有木塞的<br>which means 在我搞到一个螺旋起子之前喝不了</p><p>这批红酒是我用公司的午饭钱买的<br>因为最近瘟疫肆虐，不让去办公室<br>所以我也花不了每天的外卖钱<br>索性攒一周然后买点酒喝</p><p>现在这一瓶大约喝了五分之一？<br>当然因为瓶子上方是窄的，所以估计得可能不准确<br>我酒量不好，现在已经有点晕了<br>正在我写完上一句话以后<br>我又来了一口<br>对瓶吹<br>然后因为手不稳，洒出来了一点<br>用纸巾擦一下<br>纸巾是纸盒装的，很软，比我以前买的塑料包装的质量好一些<br>价格应该也差不多<br>所以是很划算的<br>但我喝多了所以我可能记不清楚</p><p>现在是礼拜日凌晨，我的安排大概是：<br>尽量不要睡觉，但如果实在太困，就稍微睡一下<br>可能要稍微补一下工作上的事情，因为下周五就离职，还有一点屁股要擦<br>还有我下载了好几部电影<br>我看完了金陵十三钗，觉得很不错<br>看完了一代宗师，章子怡真的美烂了<br>看了一半狗镇，觉得特别好，Lars von Trier 拍的应该都不差<br>还稍微看了下吴宇森的赤壁，完全是垃圾，看不下去<br>所以接下来的计划是把狗镇看完<br>如果有空练琴的话可以弹一弹，最近刚学了一个新定弦，还不大熟悉</p><p>前几天去朋友家玩，路上他问我，<br>骞哥有什么梦想吗？<br>我脱口而出，<br>去加拿大吸毒。<br>他立刻不安。问我：<br>你要去的话，现在一张机票去不行？<br>我说：<br>我要天天吸。去一次不行。<br>他说：<br>你试一试就好了，别把自己玩没了。<br>我说：<br>不是那种吸毒。就大麻之类的致幻剂。<br>他很踌躇。我们沉默了一会儿就换了话题<br>很明显他是一个很好的朋友，我非常感激他陪我</p><p>认真想一想的话其实红酒很贵<br>因为要飘的话，两口 Jägermeister 就飘了<br>但是红酒得喝四分之一瓶<br>一个人喝的话，喝不完一整瓶<br>不管再怎么猛喝也会剩下三成<br>试了很多种办法，放到第二天还是会变味<br>我不爱喝变味的所以只好扔了<br>这么算下来飘一次就得消耗一瓶红酒<br>比烈酒贵多了<br>不过可能多几个人一起喝的话比较好<br>说到底红酒不适合一个人对瓶吹</p><p>我的 to-listen list 已经有 574 张专辑了⋯⋯<br>现在认真听一下 iwrestledabearonce<br>毕竟是 Courtney LaPlante 以前待过的乐队<br>我是真的很喜欢 Courtney LaPlante<br>基本上跟喜欢 Candice Clot 和 Haley Dahl 一样喜欢<br>比喜欢令晴、Carah Faye 和 Julia Kiss 稍微多一点<br>Actually 其实也不一定，可能跟喜欢令晴差不多吧？<br>令晴真的很让人喜欢啊</p><p>除了看电影还得收拾一下家里<br>算了，天亮了再说，我先把狗镇看完</p><p>我看完狗镇了<br>操，这电影看得我想纵火<br>红酒大概还剩四分之一<br>我电影看得少，以下列举五部我评满分的电影：<br>Dogville<br>Nymphomaniac Volume 1<br>Nymphomaniac Volume 2<br>大象席地而坐<br>卧虎藏龙<br>目前暂时就这五个<br>看完狗镇我就去找简体中文影评<br>他们说 Grace 代表基督？我觉得有道理<br>然后字面意义上地我跪下来拜<br>那种老人们教小孩的拜佛<br>下跪<br>额头触地<br>双手摊开，手心朝下，同样伏在地上<br>双手反转过来，手心朝天，接住佛菩萨的庇佑，<br>捏紧，握拳，收于心<br>直起腰，回归跪姿<br>亲爱的读者，你信我这么跪拜了吗？你信我这么跪拜了许多次吗？<br>没办法，电影拍的太好了</p><p>刚刚醒。最后还是睡觉去了<br>现在有点宿醉，后脑勺阵痛<br>写不了诗了</p><h3 id="崛起"><a href="#崛起" class="headerlink" title="崛起"></a>崛起</h3><p>有的人说彩虹有六种颜色<br>有的人说有八种<br>在夜里摘掉眼镜后<br>期待已久的 vision 仍缺席<br>奥丁已经府鼎了他的荣光<br>丹川截流、苦蜜交咄<br>腐烂中兴！！<br>在现在这个世界，高山景行耸展，<br>直！厚的雪层，编织。<br>白悬崖<br>白峭壁</p><p>爬升骨钩沉。撬棒</p><p>朋友们，战友们，同事们，<br>我肯定得再研究一下<br>人<br>fluffy 的<br>血的，凝固的血块，血块里的金属<br>这不是战争<br>这是 tomorrowland<br>不锈钢微屈 红核心力量与力量<br>光束<br>过关还得请虎爷<br>有人要来。<br>来了，就给他机会。</p><p>我失眠的爬行的<br>我知道有几个不失眠的<br>要找到他<br>世界白 轻松的宴会，多甩甩头<br>焦油啊煤渣 怎么没有他们的河<br>武掣文德</p><h2 id="丰收之后荒凉的大地"><a href="#丰收之后荒凉的大地" class="headerlink" title="丰收之后荒凉的大地"></a>丰收之后荒凉的大地</h2><p>　　这些诗出自一名我不知姓名的业余诗人，这位诗人在他的朋友圈里放着这些诗歌。聊天室里的 H 提到了这样的事情，说是这位一个月前和自己游玩聚会的朋友，前段时间选择了飞跃而下，这是他从这位诗人女朋友的朋友圈中看见的。我找 H 要来了几首诗，并希望这位天上的不曾谋面的诗人不责怪我，恬不知耻地放了几首进来。这样这个文字才完整，这些文字。H 给我发来了很多很多首，按时间顺序，从简体到繁体，最早追溯到 2017。这首《崛起》是最后的一篇。</p><p>　　我说，海子的诗有很多死亡的意向，poetry 大概和死亡存在相关性。这既是最开不得玩笑的事情，也是最开得玩笑的事情。诚如其言，轻如鸿毛，重于泰山。</p><p>　　这几首诗像是一个收集过程的开始，收集所有即将黯淡的眼睛中看见的风景。这大概是对死者最大的不敬了，我这样想，但还是不加犹豫地记了下来。或许为人便有这样的贪婪。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春江花朝秋月夜</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E6%98%A5%E6%B1%9F%E8%8A%B1%E6%9C%9D%E7%A7%8B%E6%9C%88%E5%A4%9C/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E6%98%A5%E6%B1%9F%E8%8A%B1%E6%9C%9D%E7%A7%8B%E6%9C%88%E5%A4%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　月亮是哪里都有的景致，所以在任何地方看来都不特殊；但也是因为它是哪里都有的景致，才具有某些特殊的含义。有些时候，月亮悬挂在一把光污染的红色薄雾中，但大多数时候是在哪里的。于是人养成了在晚上抬头看看月亮的习惯；就如平常，我在这里抬起头时，月亮却不见了踪影。</p><a id="more"></a><p>　　月亮并不是一直不在这里的。在刚刚搬进这里的时候，在傍晚，天空还荡漾着青蓝色的时候，在那边的山上面还会悬着这样一股白色的月亮。这不是常见的水墨画里描述的那种山高月小的场面，相反，月亮大得出奇，显得周围的几堆山都小了。</p><p>　　不知道是不是还未到冬天的缘故，这些山上长着茂密的绿色树子。顺着两堆山中间形成的沟凹处，能看见尽头的山上蜿蜒着一条长城。在最开始我没有注意到山上的景致，直到某一天我跨国横跨大道的天桥的时候，顺着车流往那边看去，我才看清那是什么，像奶黄色的溪流从山顶上漫下。后面我发现这条长城出现在了我床头的窗前，奔腾的溪流就静止了，丧失了神秘的美感。</p><p>　　切开整盘校区的是一缕河流。说是河流，已经干涸得不成样子，在我四年前造访这里的时候，这河流就干涸了。现在里面长着茂盛的杂草，只在一些低洼的地方蓄着几片斑驳的水塘。有人说这是防洪的渠，这样说也不无道理。有些渠在更高更远的地方，在到处闲逛的时候会遇到一二。渠的假说就更真实了。</p><p>　　这是一块适合闲逛的地方。在最开始见到小学的老友的时候，就是在这些地方闲逛。友人 C 据说是很早就想联系上我，但一直没有机会。这倏忽间，竟然都聚到了这个地方来，自然地要约上一局饭。吃饭完，这三人，便顺着这些渠走，慢慢走到了离校园的建筑相当远的地方。蜿蜒的像国道一样的柏油路通向山里。路边陈列着各式废弃的军工物品。想起最开始 C 在这个新地方的食堂看见我的时候，我向他招了招手，他看见了我，但没敢过来；我又招了招手，他将信将疑；我招了招手，他终于来到了我的面前。“请问你是…？”C 看起来没怎么变，但我想这十年后想要再认出我来应该还是颇有难度。算不上尴尬。这路走到尽头，是一尊三岔路口，路口中央镇着个杰出大爷，他拦住了所有企图通往剩下两扇路口的行人。在大爷的身后是一位驴。</p><p>　　在没什么人的在校园里乱窜的时候，一块又一块的草地，和天空中凝聚的几滩云，映射得山有一些奇异的光彩。像是国画中用的山青色，透着静谧的蓝色。有一次，我看见了同学拍摄的天空，那是紫色的云彩和橙色的光线。怪异的组合遥远又真实，可惜我没能亲眼见到它。“这是苏格兰高地吧。” 远在新加坡的 H 看了我的照片这样回复。确实，在没有什么人的时候，这种远远的，没有城市的地方，太不像中国了。从中氤氲出的陌生感和泥土的清香，知了的声音。四处散漫地走着几束学生，有的盘根错节。</p><p>　　两位室友和我经常构成其中的一束，和大学时代的室友不同，此两位目前看来尤其喜爱群体活动。哪怕是早饭也总是叫着一起去。一种古怪的、被扯住手脚的感觉隐隐地从四面八方扑过来。但盛情总难却，开学以后这样的情况应该就少了吧。一堆水果总是熟的更快一些，换句话说，坏得也更快一些；封闭的气味染上每一位苹果，苹果便很快要爬上果蛆。这样包里背着的口琴没有使用的时候，对着那藏起来的月亮。</p><p>　　窗台对面的房间，一面窗户突然翻转，反射出升起的太阳的光芒，正好射在了我的眼睛里。我顺着光线的方向看过去，一面被射成难以描述的白色的窗户立在最高的一层。于是我拉上了窗帘，将那条长城也堵在了外面。希望升起漫山的雨，填满每一个防洪的渠，澄澈的小溪从每一顶山尖呼啸而下，云聚到一起变成月亮的形象，遮住光灿灿的宏伟的太阳。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Loqseq 胡乱使用手册</title>
      <link href="/2021/tech/Loqseq%20%E8%83%A1%E4%B9%B1%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/tech/Loqseq%20%E8%83%A1%E4%B9%B1%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　近日发现了一个好用的笔记工具 Loqseq，然而这个工具缺乏直观的指引，所有的功能大多藏在特殊的写法中。这里做一个简单的整理。由于使用的Markdown，后续所有解释的语法都是Markdown形式的。</p><a id="more"></a><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>　　有几个重要的快捷键，默认的触发并不方便，这里列出来。</p><ul><li>在当前页面搜索，默认是 <code>Ctrl+u</code>，可以改成<code>Ctrl+f</code>，并没有冲突。</li><li>向上移动块，可以改为<code>Alt+Up</code>。</li><li>向下移动块，可以改为<code>Alt+Down</code>。</li><li>和<code>Alt</code>相关的操作大多是控制文本的，例如<code>Alt+l</code>删除当前块。<code>Alt+a</code>移动到块头，<code>Alt+e</code>移动到块尾。</li><li><code>Ctrl+Alt+p</code>，类似VSC自带的快捷命令，目前还没有多少功能，可以调整总体设置。</li><li><code>Alt+Right</code>，进入聚焦，效果等价于点击每一个块前的小点，从而进入对于块的编辑。<code>Alt+Left</code>可以退出这一层。</li><li><code>Ctrl+Shift+1</code>，快捷键列表中没有，打开git指令。</li></ul><h2 id="输入操作"><a href="#输入操作" class="headerlink" title="输入操作"></a>输入操作</h2><ul><li><code>/</code> 可以调起菜单，选择下面创建的块类别，包括引用等。</li><li><code>[[]]</code>可以创建一个引用到以框内名字为名的文章上，如果这个文章不存在，则会创建一篇新文章。</li><li><code>(())</code>可以创建一个引用到以框内名字为名的块上。</li><li>可以对选中的文本使用两次<code>Alt+(</code>或者<code>Alt+[</code>，可以直接包围选中文字并达到上述效果。</li><li><code>#</code>可以创建一个标签，并在该页面中得到所有使用了该标签的页面，这个功能和在块或者页面性质中标注的<code>tags</code>是等价的。</li><li><code>Ctrl+Enter</code>可以创建一个TODO标签，在其后写入内容之后回车，会创建一个新的的任务。所有创建的任务可以在页面<code>TODO</code>中找到。可以使用<code>/A</code>来表示优先级。可以使用命令<code>/Deadline</code>来创造一个DDL。或者为任务创造一个计划的时间：<code>/Scheduled</code>。上述两个命令都可以在创建后选择是否重复。对于任务，可以打开计时选项。</li><li>Markdown的语法是完全的，即公式、引用等语法都是可用的。</li><li><code>[A]([[B]])</code>可以为页面B创造一个名为A的链接，并显示A中的文本。对于块则为<code>[A](((B)))</code>。</li><li>高级指令：除了使用<code>/</code>打开命令，也可以使用高级命令：<code>&lt;</code>。这个功能更多补齐了Markdown在Logseq中缺失的部分。例如：<ul><li>Quote</li><li>Src，展示多行代码</li><li>Query，后面解释</li><li>大型标记<ul><li>Note</li><li>Tip</li><li>Important</li><li>Caution</li><li>Warning</li></ul></li><li>Example （类似于多行注释，但会以文本形式展示）</li><li>Center（居中显示）</li><li>Verse （这个看起来没什么用）</li><li>Comment （注释，只会在编辑当前块的时候出现）</li><li>……</li></ul></li></ul><h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><ul><li>对每一个块的点都可以右击打开功能选项。其中可以更改该块的背景色、获得该块的引用、或者在右侧栏打开该块。每一个块都可以生成一张卡片（但卡片看起来没什么用的样子）。</li><li>别名（Alias）：一个替用的标题名字，可以在页面属性中增加<code>alias:: another_name1, another_name2</code>。</li><li>性质<ul><li>性质被用来标注一个页面或者一个块</li><li>页性质是通过在页面的第一个块写入内容作为标注</li><li>块性质是在块之外的另一个块标注完成的</li><li>当一个性质的内容和一个已有标题的名字相同时，会生成一个到该页面的链接</li><li>语法：<code>property:: value</code>（一定需要这个空格，并通过<code>Shift+Enter</code>制造的同块之内添加。）</li><li>用途<ul><li>选择特殊的块或者页面</li><li>为事务提供相同的主题</li></ul></li><li>特殊性质<ul><li>tags</li><li>template：声明这是一个模板页/块</li><li>collapsed：声明这个块需不需要折叠</li><li>alias：创造一个别名</li><li>title：创造一个覆盖文件名的标题名</li><li>created-at 及 updated-at</li><li>parent：指向父节点</li><li>public：在导出为Pages时的时候是否显示</li></ul></li></ul></li></ul><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><ul><li>页面和块都可以做成模板<ul><li>右击块的生成模板，并命名</li><li>或者在Properties中加上<code>template:: name</code></li></ul></li><li>为了使用模板<ul><li>输入<code>/template</code></li></ul></li><li>可使用变量<ul><li>使用   <code>&lt;%sth%&gt;</code> 语法调用</li><li>today：引向近日的日记</li><li>yesterday：昨天的日记</li><li>tomorrow：明天的日记</li><li>time：当前的时间</li><li>Last Friday</li><li>background-image：设置一个背景</li><li>…</li></ul></li></ul><h2 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h2><p>　　选择这个软件的重要原因之一。</p><ul><li>可以在文件中插入PDF文件，通过<code>/asset</code>加入。</li><li>可以高亮以上面方法插入的PDF。</li><li>之后可以使用<code>(())</code>的方式引用高亮的部分。</li><li>同样，也可以高亮区域，并可以复制引向该区域的ID，并使用<code>(())</code>的方式将其引用。引用之后，如同其他链接一样，点击链接会打开对应的PDF，并跳转到对应的段落。</li><li>该PDf阅读器支持不同的颜色背景，并可以调出大纲。</li></ul><h2 id="查询（Query）"><a href="#查询（Query）" class="headerlink" title="查询（Query）"></a>查询（Query）</h2><ul><li>简单查询：<code>{ {query } }</code>（两个大括号应该相邻，由于Hexo的Parser bug，不得不加了一个空格。）<ul><li>需要在每一个括号之内的第一个声明这一层运算的类别，例如And或者Or。</li><li><code>{ {and [[tag1]] [[tag2]]} }</code>：同时带有标签1和标签2的</li><li><code>(not [[tag1]] [[tag2]])</code>：不是2者<ul><li>e.g. <code>{ {query (and [[red]] [[yes]])} }</code>：搜索同时在标签中含有Yes和Red的<strong>页面</strong>。</li><li>e.g. <code>{ {query (and (todo later) ((foobar)))} }</code>：搜索在带有todo标签，且为later，以及带有 <code>tag:: foobar</code> 的<strong>块</strong>。</li></ul></li><li><code>(property A B)</code>：搜索带有property类别为A且其值为B的块。<ul><li>e.g. <code>(property type book)</code>：搜索类别为书的块。</li></ul></li><li><code>(page B)</code>：在页面A内搜索。<ul><li>e.g. <code>(and (page &quot;B&quot;) ((foobar)))</code>：在页面B内搜索tag包含foobar的块。</li></ul></li><li><code>(priority a)</code>：搜索priority为A的页面/块。</li><li><code>(page-tags A)</code>：显示tags带有A的页面。</li><li><code>(all-page-tags)</code>：显示所有的tag。</li><li><code>sort-by key order</code> / <code>sort-by key</code><ul><li>常用的Key：created-at, updated</li><li>常用的Order：desc, asc</li><li>e.g. <code>(and (todo now later) (sort-by created-at desc))</code></li></ul></li></ul></li><li>复杂查询<ul><li>使用<code>{}</code>，以下是一个模板<figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="symbol">:title</span>  [<span class="symbol">:h2</span> <span class="string">"Your query title"</span>]</span><br><span class="line"> <span class="symbol">:query</span>  [<span class="symbol">:find</span> (<span class="name">pull</span> ?b [*])</span><br><span class="line">        <span class="symbol">:where</span> ...]</span><br><span class="line"> <span class="symbol">:inputs</span> [...]</span><br><span class="line"> <span class="symbol">:view</span>             (<span class="name"><span class="builtin-name">fn</span></span> [query-result] [<span class="symbol">:div</span> ...])</span><br><span class="line"> <span class="symbol">:result-transform</span> (<span class="name"><span class="builtin-name">fn</span></span> [query-result] ...)</span><br><span class="line"> <span class="symbol">:collapsed?</span> <span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure></li><li>这个功能过于复杂，暂不展开</li></ul></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>图谱：图谱是通过引用自动创建的（这个其实才是这个笔记软件的核心功能，但是都是自动生成的，所以没什么需要单独介绍的）。</li><li>导出：在需要导出的根页面点击导出。如果希望导出所有文章，就在该根页面的设置中选择，允许导出所有内容。在导出的附件中可以看到所有的Assets中包含的文章。导出的文件包可以完整地实现在编辑过程中看到的一切内容，但是形式变为只读的。</li><li>演讲者模式：在一个文件右键三点，打开演讲者模式，可以逐个展示块。</li><li>卡片：用来辅助记忆的一个功能。可以设置简单的问答，但似乎暂时用不到，故不展开。</li><li>绘画：使用<code>/draw</code>指令来打开一个嵌入的画板。</li><li>支持自定义主题，只需要将custom.css放入logseq得到子文件夹下。这是一系列<a href="https://github.com/logseq/awesome-logseq#css-themes" target="_blank" rel="noopener">主题</a>。</li></ul><p>　　这样才是对其文档进行了一遍整理，实际使用应该会有一定出入。如有更多问题/发现的新功能，请留在回复处。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joseph&#39;s Surface Book 2</title>
      <link href="/2021/essay/%E7%89%A9%E5%BF%97/Joseph&#39;s%20Surface%20Book%202/"/>
      <url>/2021/essay/%E7%89%A9%E5%BF%97/Joseph&#39;s%20Surface%20Book%202/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　今日他的使命至此终结。或者说在更早的时间就如此了，在它还在我视线之中的时候，我没有写下这样一篇，现在当它离开了我，我才终于写上这个，以致我没能照下一张现在它的照片。其中的文件大多做了两个备份，卸掉了一些太久不用的软件，移除了所有的代码环境，并开启了一个新的家庭本地账户。这样它离开了我，知道我下一次回到成都。</p><a id="more"></a><p>　　大一的一个下午，在我终于无法忍受自己电脑的卡顿之时，我下定了购买新电脑的主意。这样 SB2 进入了我的视野。我记得当微软的CEO拿着这台精致的电脑，并在所有人的眼前将其掰成两半的时候，那种自然从容的表情。这是我要的电脑，我是这样想的。但是在高三毕业之时，被价格劝阻再三，没有购入。一直到一年后才满足夙愿。它的后代，SB3，并不是一台不合格的电脑，但是在这个独显电脑显示屏优秀、电池够大、续航够强甚至重量轻便的2021年，它已经丧失了大半的竞争优势。于是它的后继者被选定为 ROG ZEPHYRUS 16。我现在并不后悔做出这个选择，更不后悔当时选择了 SB2。</p><p>　　它从那个抵达我房间的时刻开始，就变成了书包的常驻者。从大一的本部寝室，到大二的张江寝室图书馆，再到大三的新加坡，最后回到本部。它陪我度过了几乎所有的本科时光。在接触人工智能后，承担了我没日没夜的训练工作。一天夜里，我听见它响起的咆哮，感到担忧。之后没有多久，它的触摸屏开始出现问题，我不得不关闭了触摸功能。一直到了最后退役的时候，它的续航已经远不如年轻的时候，勉勉强强能支持原来一半的工作时间。各式由于主人没有删除干净的啰嗦文件占满了它的每个角落。被折腾得安装过不知多少双系统，磁盘空间也是分了又合，合了又分。当我玩起游戏，它呼啸的声音更是悲戚。</p><p>　　在大二的时候，它的防滑垫完全脱落了。担心它的底部刮花，我增加了极为惹人注目的贴纸，与以前清冷的银色身姿不同，换上了鲜艳夺目的贴纸。它的笔也增加了相当的乐趣，随手画示意图，甚至只是乱涂乱画。我还想起在支教的时候，学校不允许我们用幻灯片，我拆下它的屏幕，在整个教室中展示着松果和葵花图片的时候。小朋友们在课间围着它到处跑，拿着它画画。后面它主要被拆下来看论文；再后面就鲜有分离的机会了。但它仍然正常地工作着，直到触摸屏的损坏。</p><p>　　后面我换了新电脑，在我倒腾这里面的文件的时候，我注意到这台电脑微微地掉帧，但一切都忠实地运作着。我不由得怀疑自己更换电脑的想法只是个心血来潮的想法，这台设备还能够陪伴我走很长的时间。更换设备更多只是出于希望更多玩法的私心，没想到顺理成章地发展了下来。</p><p>　　我看见它额头的红灯亮起来，屏幕的顶端出现一个跳跃着的小眼睛，然后进入了我熟悉的桌面，一切如旧。敲击两次键盘，清脆舒服，这副键盘上敲打过太多的东西。我又检查了是否存在没有备份的文件，然后按下了Windows，然后关机键。“田”字Logo出现在了眼前，然后滑入了黑暗。</p><p>　　姗姗来迟。无论如何都需要怀着感激，容忍我的变化多端。当初获得你的时候，是心血来潮的结果；离开你的时候，亦是如此。心血来潮之事既不是什么既定的事实，也不是随便的结果。它们只是发生了，有一些先兆地发生了。Au revoir, mon ami.</p><center><img src="/images/Things/sb2.jpg" width="50%" height="50%" />青春岁月</center>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物志铭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路边风尘故事（其三）</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　一段漫长的空白要接上另一段不明颜色的部分了。但空白不总是纯正的白色，里面总藏着一些纤维一样的黑色，若有若无，像渣滓一样，像巧克力做成的糖豆。没有人从地上捡起这些糖豆，也不会踢开这些渣滓。</p><a id="more"></a><h3 id="取餐号"><a href="#取餐号" class="headerlink" title="取餐号"></a>取餐号</h3><p>　　我端着自己的一盘子食物找座位的时候，发现宽敞的双人座已经挤满了，于是我找了一个单人座。这些餐厅的单人座都是一排座位放着，于是我的座位离隔壁的那位很近。我刚坐下来的时候，看见她正在看着什么书或者做着一些笔记。但我瞥见了她持着的取餐号：“2”。我的号码已经是五位数。但我不知道为什么她的数字是2。我想，她是整个店，整个城市来这个连锁店的集合的最早的那个，在全国都遥遥领先。那她在那里看了很久的书。在我打开自己的书的时候，她离开了自己的座位，取了一个五位数的号。后面的取餐号自然地上涨着——我一边看书一边侧着耳朵听。“2”这个数字是不会插在这些五位数之间的。这个神秘的数字在第二天会出现在另一个桌子上，我也并不知道缘由。</p><h3 id="高中门前"><a href="#高中门前" class="headerlink" title="高中门前"></a>高中门前</h3><p>　　高中门前的一些店铺已经不在了，鲜有几家还悠哉游哉地活着。那家卖油炸食品的店又一次换了位置，换到了离校门更远的地方；那家打印店则换到了离校门更近的地方，门面看起来也是一条街最敞亮的；那家书店在这条狭窄的街之外开了一家分店，专营教辅。原来的校门前有郁郁葱葱的紫藤架子，下面摆满了椅子和桌子，等着什么人坐上去点一杯水，现在那里空空荡荡，但仿佛像没有东西曾经存在在那里过。有人告诉我那家茶铺还在，但我已经找不着了。这或许是市容整改的结果，或许不是。原来的校名变长了，用拥挤又古怪的字体排布在原来的校名墙上，显得逼仄。校徽看起来则相当堂皇。</p><h3 id="骰子掷地有声"><a href="#骰子掷地有声" class="headerlink" title="骰子掷地有声"></a>骰子掷地有声</h3><p>　　没有想到有这么频繁的出门的时候。为着是同一个事情，一天我是游戏的参与者，一天我是游戏的旁观者。疲倦的参与者和旁观者，骰着哗啦哗啦的骰子，等着盖子揭开的时刻。我看着自己杯子的水空了，我想举起来喝一口，但是它空了；我想去到处寻一些水把它填满，但存在某些阻碍。我看着盖子揭开，露出了骰子。一些人手舞足蹈，一些人伏于桌案。有的时候旁边的桌子坐着等待的人，有的时候是店家热闹地聊来聊去。骰子不是因为有什么意义才骰的，而是骰子是游戏的一部分。哗啦哗啦的声响很热闹，于是我捞起了旁边的一个骰子的盒子，自顾自地将其摇晃了起来。我大概明白了“凑热闹”本身就是一种乐趣，尽管对“热闹”本身没有什么期许。</p><h3 id="消费陷阱"><a href="#消费陷阱" class="headerlink" title="消费陷阱"></a>消费陷阱</h3><p>　　和三弟吃饭，聊到他买了一本叔本华的小册子。我说，叔本华的风格和你完全不一样啊。他说，是啊，所以他稍微翻了翻就没看了。说是去了方所那边游玩，就顺手买了一本。我说，真要说的话，叔本华和我的个性还要更像一些，你是完全不适合的。不过能够买这样书的机会想必悠哉游哉，这样的错误再多一些也不错，尽管买来的书最后并不会被翻阅。</p><h3 id="消费陷阱（2）"><a href="#消费陷阱（2）" class="headerlink" title="消费陷阱（2）"></a>消费陷阱（2）</h3><p>　　书摊在自己手上的时候，有一种安心的感觉。这种感觉和电子书握在自己手中的感觉不同，不是那种将书已经被读过的部分用左手握成筒形，一页页翻着纸的感觉。是很复杂的一种氛围。如果适逢书的文字吸引了我（不知道为什么，这些纸质的文字就是更加具有着诡异的魔力，也似乎更加吸引人），我就想抬头看着这些琳琅满目的书架，找到一本没有拆过封的同名书，翻过去看它的价格。书大多都是这样，如果怕愿意为了它站上一个小时，只是安静地翻着它，那它大概也具备足够的魔力说服你买下这本书。就像我现在正翻着的书，我站了一个小时，腿有点酸，故意曲起来，看着有些奇怪。我下意识地开始寻找同名的书籍，最好的话，同一个译者，但是没有。这本纸质书的魅力就戛然而止了，就像那杯空的杯子一样。</p><h3 id="成都偷心"><a href="#成都偷心" class="headerlink" title="成都偷心"></a>成都偷心</h3><p>　　没想到最后还是去看了这个评价不高的沉浸式话剧。装修风格朋克但不精致，绿色的细线一样的光在各种反射下东窜西窜。一个人穿着宇航服，一个人戴着粗管子，一个人绑着纱布，一个人背着翅膀；一个人牵着另一个人，一个人贴着另一个人，一个人举着另一个人，一个人牵着一串人。所有的人都拦着我的路，工作人员、演员、观众。让我从遥远的地方，侧着我的耳朵听着这些人的台词，看着他们的舞蹈。玄虚的音乐和光效让我有点疲惫。最后的场景，所有人站在一个旋转的圆盘上，两两依偎着，重复着几句歌词。宇航员脱下了自己的衣服，露出汗水打湿的亮锃锃的肌体；背着翅膀的人摘下了自己的翅膀，立在那里，一动不动。观众们开始鼓掌，讨论着剧情，慢慢地离开。我想再来一次，即使是最后的架子鼓也足够震动我的肠胃，蒸的发痒。下一次找一个暴雨的天气，所有人都不愿意出门的天气，这样的日子和剧场才会属于我。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>断发记</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E6%96%AD%E5%8F%91%E8%AE%B0/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E6%96%AD%E5%8F%91%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　夏天的荷塘算不上景致。一片几百平米的水塘中间高高低低，远远近近的荷花和莲蓬。一些荷叶中有凝成令人联想到仿生学的水珠，水面下传来牛蛙的叫声。一些硕大无比的蝌蚪粘在池塘壁上，枯萎的带着莲子的莲蓬像艺术品。但这样自然又杂乱的风光，算不上景致。</p><a id="more"></a><h3 id="围栏"><a href="#围栏" class="headerlink" title="围栏"></a>围栏</h3><p>　　一些地方冬天有风景，夏天则没有。夏天的早晨，没有朦胧的雾气，可以透过湖将对岸的屋子看得一清二楚，也能看清楚整个水面的情况。哪里有鸭子，哪里有白鹭。在冬天，睡眠笼着一片像鱼汤一样的雾，这里没有鸭子和白鹭。汗水浸湿衣服的人在这里跑来跑去，到了夏天的晚上，月光照得水面的反光，也找在那些大片裸露的皮肤上，在灯光下像是一个水做的雕像。这个湖我不喜欢，它总是有太多的人在其中徘徊。人积压在桥上，凳子上和跑道上，谈论着各种话题或者做着自己的事。</p><p>　　在很早以前，这个园子还囤积着雨水的时候，整个一片被绿色的栏杆围了起来。其中长着无数的三叶草，从湖边一直涨到这些绿色的栏杆旁边。绿色栏杆之外是一条河，河之外是一片林子，林子里面长着几棵古老的春芽。每年春天摘春芽的时候能看见遍地的小广告，不知道是那个工厂中飞出来的。河边一些废弃的屋子唯一的作用就是贴着寻人启事。所有失踪的人，都被假定是掉进了河中，并一厢情愿地认为失踪的人还能找回来。但我从来没在湖中找到过飘着的腐烂的尸体，只有一些翻着白肚子的鱼。我记得曾经有人拿着像鱼一样的怪模怪样的鱼饵在这里钓鱼，他不让鱼饵静止，而是快速地活动着。他说这样可以让大鱼上钩，但这样大概不能让尸体上钩。</p><p>　　这些被三叶草围满的地方，还是有抵达的方法。一直往前走，可以找到几户人家，不知道为什么，这些人家旁边的栏杆总会有几个大窟窿，并且巧妙地刚好可以让一个人钻进去。但是这些三叶草之间也没有什么好看的，找不着传闻中的四叶草。鸟类还没有聚集过来，湖面零星的有一些野鸭子，但听不见嘎嘎嘎的叫声。这里不太有游客，他们不知道如何进来。后面栏杆没有了，游客知道如何进来了，这里热闹了起来。河道旁贴满了寻人启事的屋子也拆了。</p><h3 id="石墙"><a href="#石墙" class="headerlink" title="石墙"></a>石墙</h3><p>　　原来觉得学校是一个很大的东西，到了周末的时候，探险一样地在学校里面游走。即使是足球场前的几块巨大的石头也能在上面玩着各种各样的游戏。下了雨这些石头上面的凹面会积其水，这时候我们就不会爬上去。石头在往北走，就是学校的边界。边界是墙，墙之外是大片的土堆和田地。之前我是住在墙那头的，到了夏天可以到田里的水沟中寻找红色细线一般的虫子，扔进去炮仗；或者找到一些泥地或者沼泽一样的废置的田地，往里面扔炮仗，等到凝固出一种泼溅般的坑。但现在难得从墙里面到外面去，曾经滑下并找到老鼠头骨的土坡似乎也推平了。</p><p>　　有一次我们找到了办法，有一面通往外面的墙倒了，于是我们走到了墙外面去。这里有一条小而浅的河沟，里面散发着倒胃的恶臭。田坎中有几个穿着奇怪衣服的稻草人和一些绿叶子菜。我曾经种过红薯，挖过巨大的红薯，在院子里在屋顶上。有一次我点燃了秋天的红薯的藤，燃起了一大片意料外的火，对于我很壮观，但很快就熄灭了。现在我就站在这个曾经被点燃过的菜地里，但这里已经没有我种的菜了。</p><p>　　我们顺着这些田坎走，最终觉得无趣，就走回了墙，并再也没有通过过这个墙上的洞。后面想着，从来没有沿着那个方向在往东走去，那边像是迷一样的领域，没有人到访过，火和菜都没有蔓延到那边去。那边是另一堵高墙。后来这些田变成了一个医院，再往东的地方因为学校的扩建而变成了学校的一部分。对于后面的儿童来说，神秘的东方变得更远了，而神秘的墙外则不存在了。</p><h3 id="无车的四车道公路"><a href="#无车的四车道公路" class="headerlink" title="无车的四车道公路"></a>无车的四车道公路</h3><p>　　对于有车的人来说，公路是探索外界的有效途径，对于没有车的儿童来说就不是如此。相反公路是一种陌生而可怕的东西/这些公路宽敞整洁，中间有植物作为分割，两旁载有死掉的树木。我们不能知道这些道路通往哪里，能看见的只有一直往前走的路。这条路上没有什么车，只有一些驾校的车子。</p><p>　　有几次我骑着自己的车，沿着这些路一直往外走。我遇到了一些门前地面上有一些钉子的汽修店，一些好像倒闭了的农家乐，然后就是那些没有死透的树木。没有住房也没有行人。然后我一直往前走，既没有分叉，也没有红绿灯。然后我离开了我熟悉的景色，周围没有我见过的屋子，也没有我可以用来参照的东西。那个年代没有方便的手机导航，牵向安全的绳子就是我不信任的这条路。于是路成为了绊绳，我只能沿着这条绳子回去，而不能再往前一步；再往前，天就黑了，这根绳子就变成了妖怪。</p><p>　　于是我如何都不能知道那个道路后面是什么。后面我的奶奶脑溢血住在了那个医院的时候，我坐的车经过了这条神秘的道路，并且岔来岔去，我们抵达了那个医院。但这条神秘的路仍然没有变得清晰起来。后面我又走了很多次这个路，去探望自己的亲人。但医院不是这条路的尽头，我很清楚，我从半道就离开了这条我想探索的路。</p><p>　　后面这条路通车了，在我常常转弯的地方还架起了立交桥。车来车往，这个道路繁荣了起来，前往中学的道路有一部分就由它构成。我也能从现代的地图上知道那条路从哪里开始，到什么地方，名字叫什么。只是看着那张图就像我知道了它的一切，它再也不神秘了。</p><hr><p>　　一些东西像风刮来的沙尘聚成的小丘，或许会花费一些好奇的孩童盯着看一天两天，等它高大了起来，还可以用一些道具堆成自己喜欢的形状，或者攀爬上去。这个沙丘就成为了某种乐园。后面因为各种各样的缘故，这些小丘就消失了。这些小丘的消失往往迅速，比它们累积起来的时间长得多，但它们消亡的时候，却没有得到太多的注意。孩童不会伤感，他们有太多感兴趣的东西，自己追寻过的和没有追寻过的都是神秘的、值得好奇的。他们永远不介意一个个小丘的消失，直到他们不再是孩童。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其七）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%83%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　不知道是不是因为不断被改变和割裂的缘故，这趟旅程并没一种清晰的“结束了”的感觉，好像是不断铺开的一段逐渐展开的一个故事，主人公和舞台的变动总是引起新的主题和剧情。这或许是旅游本身的含义，但在我这里旅游变得静态了起来，便黯淡了不少。这应该是合理的旅行吗，回到旅馆之后我这样想。</p><a id="more"></a><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　昨晚回到住处的时候已经不早了。不得不怀疑昨晚房东说是今天给我们调整，最后也不会调整。这样不祥的预感甚至不能说是预感，而是某种合情合理的推测，以至于在听到房东说自己因为种种原因最后没有换的时候，也不觉得特别惊讶。但考虑到昨晚的情况，大概是不能按照之前的安排酒这样睡下去。“如果睡不着就上来吧，我大概睡着后会安分不少。”我这样重复了几次，但大概他是不会选择这个选项的。</p><p>　　我坐在凳子上，三弟说他睡下面的沙发吧。或许大概只能这样做，我看了看那个狭小的过分的沙发，我大概压根睡不下去。这大概是我的问题吧，才弄成了现在这样的局面。不过好像我也没有解决这个问题的方法，“行吧，委屈你一晚上了。”这个晚上我睡熟了。</p><p>　　等到起来的时候，热出了一身汗，再看看手机。发现已经不早了。上面是Nof在群里和私聊的几条消息，这我才意识到是睡过了。我匆匆回了几句，三弟好像还睡着，一只脚支楞出来。可能是我下楼的声音把他叫醒了，但总之是我们不负责任地睡过了。把东西收好，用昨天买的面包当作早饭，和前台说清楚了换房间的事，我们就离开了住处。我问他睡得如何，其实我也能猜得八九不离十。那样的沙发……</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　颐和园或者圆明园都很难给出一个立体的北京的形象，但是在走入胡同的时候，北京倏然立体了起来，一些微妙又独特的魅力开始从其间散发。午饭可以说令人愉快，小吃这类食物总是不会令人反感。芥末白菜说是一种奇怪的菜，但看样子只是覆盖有芥末的白菜。烧卖之类的味道挺好，毕竟是招牌一样的菜品。</p><p>　　这里可以看见不少曾经听过但没见过的有名的老字号，但大多只是在门口稍稍瞥一眼就走过了。Nof说这附近有一家汉服店，兜兜转转最后进去看了一眼就退了出来；想起之前因为汉服这个事情起了类似争执一样的东西，现在看到它还不免有一些尴尬。这家店里的汉服也不怎么吸引人。</p><p>　　这条主街很快就走到了头。然后是一些盘根错节的胡同。说是这些胡同间藏着些有趣的店铺，这样的事情总是令人感兴趣的。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　大概是没想到能在一个没有凳子的书店中呆上两个小时。这个胡同间说是有一家小有名气的老书店，最终找到的时候看到的是一家门面老旧的不起眼的店铺。看见我们打算进去，店主让我们扫了下场所码就看自己的书或者电视去了。</p><p>　　这是一家非常逼仄的店铺，整个屋子呈长方形，中央被一大摞书和其它的小物件占住了，周围一圈又是书架，只能留出一条才通一人的窄过道。这里除了陈列的书，还有一些老的房屋的榫卯结构、月饼模具、老挂锺、老毛像等等东西。书籍内容也是花样繁多，比如上个世纪的图画游戏：一笔画、找不同等等益智题目绘于其上。我正看着，三弟丢给我一本册子，上面写着寒假作业还是什么样的东西。翻开来看是成语中间挖出两个字的小学语文题目。店主也看自己的东西，没有太吱声。</p><p>　　我大概随意地在里面看着书，但由于只通一人的过道，看起来随意也是被定在原地动弹不得。抓到一个机会离开了自己在的半圆，看见了门前摊开的大本子。大概是从17年还是什么时候开始的记录，来到这里的读者会把自己的想法记在上面，一直到了附近的日期。我大概一页一页地翻着它。这个册子前面的数页非常周整，公正地写着自己的想法和署名；后面就花枝招展了起来，一个硕大无比的签名占据整个页面的情况也有。还有不少多次造访在此前自己的签名下增加新的留言的。</p><p>　　这些留言中不少对店主传承传统文化这个事情赞不绝口，说是这位店主能说会道。我看了一眼正忙着自己事的店主，可能我们不属于看着像对这些传统文化感兴趣的人吧。但大概就是这个时候，三弟突然问了些什么，我没有听清，于是店主果真开始涛涛不断了起来。从北京有名的小吃一直说到四合院结构的讲究，Nof在一旁不断地做着笔记，我则换着自己的腿脚站立。</p><p>　　店主每说到个什么，自己店里有一些相关的东西的时候，总是要起身走到这些东西的附近，一一指给我们看，不如阶梯旁边放的石头、若干年前哲学系的研讨报告等等。然后也会说本地的传统文化普及的情况。在哪里打断都不好，时间就这样过去了一个小时。我的腿也有一些算了。一直到了新的客人进来，我们才找到了离开的机会。人情味却艰难的店铺，不知道还有多少人此后还有兴致这样对北京哪些地方的豆汁好喝侃侃而谈。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　也是听了店长的推荐，我们决定去尝试一下豆汁。可惜豆汁确实是不太好吃的东西，虽然称不上“馊水”这样难听的味道，也绝对不会激起我尝试第二次的想法。焦圈味道不错，朴素且脆。然后是涮羊肉。和上海或者西北的羊肉做法不同，北京的涮羊肉似乎有一个不小的膻味。用矿泉水做的锅底也让人觉得些许不妙，肉本身口感不错，但总觉得味道并无变化。北京的食物可能确实不那么讲究吧。</p><p>　　此后两位又有了喝酒的兴致，于是决定去找另一家被推荐的酒吧。骑着车经过天安门。说来惭愧，这是第一次看到不是照片中的天安门。本以为实际会再宽阔一些。有不少车也经过它的门前，喷泉在广场上涌出，密密麻麻的举着手机的手。骑着车的人也举着手机拍着这栋独特的建筑，我从期间找了些缝隙骑了出去。这就是象征一样的东西，象征的魔力大概是很难衰退的，就如同即使是残垣断壁还吸引着人们的圆明园。</p><p>　　但是酒吧的人太多，这一趟就是徒劳。后面又尝试了几次，却都是徒劳。不少店铺也开始收摊了，于是草率地结束了今日的日程。我和三弟决定骑车回住的地方，Nof就在地铁站和我们分别了。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　北京骑车还算舒服，并不太热，也有独立的车道。骑车的途中，我又搬出了之前关于爱情没有谈完的事情，然后说到独身主义。然后是社会的压力一些事情，但没有说太多就抵达了住处。这一次成功地换到了带有沙发床的房间，沙发床展开之后甚至看起来非常舒适。这样三弟总能睡一个好觉了。</p><p>　　第二天三弟有另一个饭局，然后就去哈尔滨了；我打算就在退房后直接去机场了。这样这样突兀的旅程就接近终点了。我说，“大概和我出来旅行是一件无聊的事情吧？”。“这倒不是，风格不太一样。”“没有，我总觉得和这一切有一个巨大的鸿沟，就像两个不交汇的球体，我不太能理解另一个球。”“不至于不至于。”“早点休息吧，今天看起来能好好地睡一觉了，前天的事情是我的问题。”</p><p>　　大概也就是这第三天，我渐渐适应了北京的逼仄，觉得是一种理所应当的样貌，不论它和北京明面上的大气磅礴多么格格不入。这一天我醒得很早，看着楼下的窗户发呆。看了会书就下了楼。这大概总算是睡成了一个好觉，至少现在可以翻个身了，我这样想。后面我坐在一个像椅子的桌子上正在考虑坐着的是椅子还是桌子的时候，它被我坐塌了。</p><p><strong>后记</strong></p><p>　　实际的旅途距离完成这一篇已经是半个月了，不少的信息和感情都随着时间的变动而消失。三弟一瞬间产生的想要记下这一切的想法也只是昙花一现，无论我怎么劝都没有用。或许我也产生过想要代笔的想法，但这毕竟不是我的感情，最终也只是作为一个旁观者罢了。但遗忘总是一种美妙的方药，这些伤痕大概慢慢就消失并不足为道了。于是希望从旁观者的角度去记录这些可能存在的谈话的夜晚的内容也就不那么必要了，故事总会从新的角度涌现并成为新的趣味。很快。</p><p>　　这篇流水账一样的游记也只是对这段时间发生的一部分事情较为忠实的记录。在西藏计划告破的现在看来，或者这一趟突兀又滑稽的旅行就是被我称为“毕业旅行”的东西了。这样也不坏。能够作为自己和旁观的角色见证了这一切的细节和变动，已经是种乐趣的体验，以后大概不再有了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其六）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E5%85%AD%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　北京给人留下的初始印象并不很好。在住处的附近没看见方便的超市，也没有显眼的早餐店（后面发现是我眼力不够）。彻夜未眠往往代表第二天的精神很好，这是奇怪的现象但也是事实。</p><a id="more"></a><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　看起来睡得不好的不止我一个。三弟看起来是醒了，找我要了些被子，就又睡了过去。然而我也完全没有起床的想法，一直磨蹭到了约定的时间。一路上试图找一些食物，但什么也没有找到，就上了地铁。这条地铁站修的位置很奇怪，也很不方便。远远地能看见北航的校名。这样的风貌大概就是之后自己五年呆的地方了，自己一边打量着这周围的所有景色，不得不这样想。本来是不会来北京的吧，有颇多的缘由让我最后来到了这里。</p><p>　　足够宽阔的主干道，街上寥寥无几的行人，看起来不赖的天气，和毫无生气的街景。这很不招人喜欢，这个没有商铺与行人的街道很不招人喜欢。北京开始蔓延出一种呆板的味道，尽管我是个没什么生气的人，却喜欢住在足够生气又宁静的地方。要么是人的活力要么是生物的活力。这里什么也没有。不知道三弟在想什么，或许只是困，也没有什么对话。我自顾自地看着这个街道。</p><p>　　地铁上，Nof来问要什么样的早餐和午饭，于是随便要了些什么。这时候我确切的认为三弟没有睡醒了。大概是晚上被逼仄到了墙角的缘故，不得不有一些惭愧的心理。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　北京给人的印象一点都没有好转的迹象，暴晒和稀疏的树荫。颐和园和圆明园，早有耳闻却到现在才得一见，想想也算是孤陋寡闻。北京这边的建筑大多在门前有一些蓝绿色的下垂一样的结构，或许是汉族的东西，不过确实是这边才见到的装饰物。颐和园公园大抵是傍着湖，但很难感觉到凉爽，只是偶尔有从湖里面吹过来一些风。</p><p>　　游人到处都是，既感受不到惬意又感受不到繁盛，但凡遇到一个亭台庙宇，里面大多挤满了人，连瞥一眼牌匾的力气都没有，只能快速离场。颐和园里放置的拱桥却挺有趣，尤其是那种拱得特别高的。游人匆匆地从上面走过去，偶有几个停下来拍照的游客，不过桥大多是清净的。不过桥被太阳晒着，有些热。</p><p>　　另一处有趣的是石舫，意义不明的独特建筑，卧在湖的一个角落里。建筑上有一些纹饰，或许此前有一些笙歌宴请在上面举行。应该有一些解说或者什么牌子说明这个古怪建筑的用处，但如同湖中游鱼一样繁密的人群让人没有仔细考察的兴致。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　写下这段事情的时间距离实际在这个湖边走的时间已经过去了两周了，在湖边具体聊了一些什么已经模糊了起来。只记得在一个石头的迷宫里，在一个死路中，我突然想着想要用两只手撑上去，然后左手的扭伤突然警告了一下我，于是放弃了。我为什么要往上爬呢。</p><p>　　湖中间有一些大船，更多的是手摇船。上面坐着不等的人数，在湖中间游动。或者是一些多人的自行车，在陆地上走动。上一次驾驶这样的交通工具大概是十年前的事情了吧，或许保留着一些表面的兴趣，但实际坐上去怕又会说是索然无味。这样想着的时候，从林子里窜出来一种尾巴很长身材很匀称的鸟，它突然出现然后从这个枝头跳到那个枝头，就飞走了。</p><p>　　人大概不会停止去羡慕那只鸟，尽管已经不再羡慕在湖里面滑动的船或者在地面上行进得又快速又稳定的自行车，却不能摆脱对那只鸟的羡慕。鸟作为符号应该具有永恒的魅力。这条步道上存在着稀稀疏疏的遗迹，一些台子，或者一些柱子，除了一些简介用的牌子在解释这些场景，它们已经不剩下什么了。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　北京的胡同稍稍挽回了一些好感，一片低矮的但层楼高的房屋，坐落在北京的中央显得一点都不突兀。或许这是国际气象的都市为了展现自己的传统文化所必须的东西，就如同上海外滩附近的那些老房子一样。晚饭的饭馆藏在一家很角落的地方，也是没有招牌的。不太知道第一家发现这家店的顾客的经历，但这样的好奇只维持到了我离开这家饭馆的时候。</p><p>　　我们正寻找着这家店的时候，在一些店铺的老大爷看见我们兜兜转转，就主动问起了我们是不是来吃饭的，并好心地给我们指了一条路。很有趣的开头，却很难说这里有什么特别有特色的食物。大概随意地吃了一些。出门的时候，门口没有坐着老大爷。Nof和三弟显然是想找一家酒吧，于是在胡同间走来走去。后面不小心又绕回来的时候，正在饭馆街对面的大爷可能听见了声响，就出来问是不是吃饭的。</p><p>　　这时候我想起来了，这一位大爷我刚才在那家饭馆中见到过，也不像是食客。这样子我大概懂了，这家店不具有招牌，只是用它没有招牌这个事实和它门前的老大爷构成了这家店的招牌。我最初觉得奇妙的体验是设计好的，是噱头的一部分。这样我顿时失了好感，这不是现代生活中的雅趣，而是营造出来的风味。大概就是这样营造出来的风味为一些食客所喜欢把。我是不介意刻意的，但若刻意了又故意隐藏起来，并将之作为乐趣，就不得不招致反感。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　之前或许有一些进酒吧的机会，但大多都被我用一些有的无的借口逃掉了。后面渐渐地也会去提供午饭晚饭正餐的酒吧吃上几顿饭，但正经地抱着以喝酒的目的去酒吧，这确实是第一次，并且似乎不存在什么可以回避的理由。一进门就感受到了嘈杂的气息，坐了不少不多的人。招牌上写着复杂又浮夸的酒名，并标注着一些酒精度等等的符号，填满了吧台的整面墙。看不出来专业还是不专业，只是有些稀奇。这些古怪名字对应的味道我也没有概念。</p><p>　　三弟和Nof简单地考虑了一下要不要在这家店呆着就留在了这里。我点了杯苏打水，这是这家酒吧中唯一的无酒精饮料。大概这个举动的本身就扫了兴，但我也没有别的方法。大概喝酒就是，对于一个新的味道会加以一些描述和评定，就如同看了一本书或者听了一段音乐，然后会谈及一些相关的事情，最后就发散了开来，聊到了不知道什么方向去。</p><p>　　失眠的影响终于还是笼罩上来了一些，我看着我的杯子有一点点疲惫。我握着我的杯子，切实地感受到了我在这个场景中的突兀。我不理解这个场景的功能，它提供的服务和隔壁桌正喧闹地讨论着的话题。这或许是现代的精神，散漫而随意的精神；这种散漫却和我的散漫格格不入。靠着举起我的杯子又放下的动作，我介入了这个场景，但在我将手移开这个被子的时候，我又离开了这个场景。这个场景的一切都倏地远离了起来，与它们相关联的一切都倏地远离了起来。</p><p>　　这大概是最未能被理解的雅兴。我喝完了苏打水，那个我能够操作的杯子也被服务生收走了，我支起手肘坐在高桌子上。三弟还是习惯性的会让我试试一些酒精度不高的被他称为“饮料”的东西。抱歉，我还没有办法。后面不知道是因为什么，环境中的噪声陡增了起来，我们搬到了屋外。隔壁桌看起来是一群很懂酒的人，不断地聊着小麦和发酵的故事。在我的同伴们都去卫生间的时候，我把他们的谈话偷听得很清楚。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其五）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%BA%94%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　在上海呆着的时间很短。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　三日前，在北京之行尚未定下的时候，本来是计划在上海多呆上几天然后就返回成都。“既然事情这样了，也没有在上海继续呆着的理由”，三弟是这么说的。于是上海便没有考虑出去游玩的事情，只是约了顿饭。晚饭后三弟在家乐福买了两瓶酒（本来是希望找一家酒吧，但最后接到线上会议的事情，只能折衷了）。在晚上哈尔滨那个比赛的线上会议的时候，拿着酒瓶，一边喝一边开会。到了夜深，两瓶酒都喝完了。大概是习惯性的，三弟总会在自己喝酒的时候劝说我试一下，但我最后都没有试。</p><p>　　早上骑车去吃苏小柳，骑到一半发现转弯的地方晚了，不得不绕路进入了大学路。白天的大学路看起来从来就没有什么风情。酒吧姑且不说，饭馆都是偃旗息鼓，完全没有夜间活力的样子。也许是来得比较早的缘故，许多点心铺也没有开门，只有一些咖啡馆门口坐着些顾客。这个大学路看起来确实少了一些风味。</p><p>　　苏小柳，和我推荐的饭馆一贯的宗旨相似，不一定需要有惊为天人的口感，气息是很重要的。苏杭的气息就充分地呈现在这张小纸单子上，繁复的各式素雅的点心。看起来就十分赏心悦目，上一次H和R来上海的时候，也定的这家店。并同样点上了我中意的酒酿芋圆。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　吃完早饭就回到房间，时候也不早了，再等等就能到午饭的时候。午饭定在五角场，和T的一顿饭。这小段时间，三弟趴在床上看一个往地上喷油漆的游戏视频。每次见到他都能翻出一些我没听说过的新玩意，不过这很大程度是因为我对游戏这些东西不太敏感。于是只能时不时问一下游戏规则之类的东西，好在总能有耐心的解释。这样上午就结束了。拖着箱子去五角场。</p><p>　　T见到我的第一句话，“看来你很喜欢江浙菜。”“难得到了这里来，当然还是吃江浙菜咯。”这也是我的标准回答。不得不说我确实中意江浙菜，尽管和广东菜和川菜比起来，江浙菜少了不少变化，但以其精细淡雅的风格还是足以讨人喜欢。糖分也不缺。饭局间，讨论其西藏旅游的事情，并把这个事情定了个大概，然后开始筹划寻找新的同伴。（在写下这篇稿子的时候，正在饭桌上的这两位，最终都因为各种原因不能前往西藏，这个计划在挣扎之后还是搁浅了。）</p><p>　　饭桌聊到开车的事情，大概“能开车”这个属性在这个时候的意义最为明显。很难说清楚我为什么不想学车，大概只是直觉性地对这个东西有所抵触，就和酒一样。“不太放心所有人的性命交到我的手上”，有的时候我会这样解释，但这个大概并不是根本的原因。</p><p>　　这桌饭的酒是桂花酒。这也是我每次到这家店都会点的东西，并一直以为度数比较低，直到喝到一半，T说她好像有一些醉了，我们才发现这个酒度数有十多度。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　本来是下午六点半就能抵达的飞机，却反复地接到延迟的消息。本来今日三弟和高中同学约了一顿酒局，但这样看来时间是凑不上了，连有没有地铁都岌岌可危。但毕竟这顿酒才是北京之行的起始。</p><p>　　纵横上推测是八点半登机，于是我自由地去接水，起身的时候听见一片拍手和欢呼。于是看了眼登机口的屏幕，并没有发现什么登机的通知，继续接水。在接水回来的路上，通知说是8888开始登机。我们的飞机。但这和预期的登机时间相去甚远，不得不有一些隐忧。为了防止旅客闹事，先将人员安排到飞机上坐着候机也是航空公司的普遍操作。</p><p>　　很遗憾的，果然这样。在飞机上坐了不少的时间，我们开始玩起愤怒的小鸟。快要通关的时候，飞机仍然没有起飞。我左边的旅客开始如常地闹腾起来，说是要下飞机。听见这个交涉，一些旅客也嚷着要下飞机。坐在我后面的旅客给航空公司打电话，说是自己定了两班飞机，想从这一班下去换到另外一班。小孩的声音在整个空间中回荡，嚷着起飞起飞。小孩在哪里都不讨喜。</p><p>　　一个半小时后，起飞了。看不见窗外的座位只能作为睡眠的行军床，于是我睡了过去。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　不出意料，飞机落地之后地铁就停运了。大概需要做出租从大兴机场到住处。一落地，在能够关闭飞行模式之后不久，我正在看着手机上的新消息的时候，三弟突然苦笑起来。在飞机上的时候，三弟的母亲给他打了个电话发现关机了，于是打给了他的前女友（当时，他母亲以为还没有分）。这大概就是对自己行踪神神秘秘的结果吧，虽说我的情况也大差不差，但拒接的电话和没有回复的信息都不少，大概是不至于引起恐慌的。这事情最后演变为类似黄浦江的故事也是离奇。</p><p>　　“这事情，我有点把它写下来了。”三弟是这样说的，但最后还是不会写下来吧。出租车司机看起来是一个性格爽朗的大姐，刚上车就开始和我们搭讪。但大概几次都没聊起来，司机就放弃了这个计划，放任我们自己聊自己的话题，不过大致也是关于飞机飞在天上的同时地面发生的事情们。</p><p>　　不过果然这个情况，今天的酒局是没有了，于是将时间改到了第二天。找到住处，在一个小区里类似活版房的建筑中，到了前台。前台的服务人员看起来病恹恹的，说话的声音带有一种古怪的感觉，字和字之间的间隔也拉得很宽。这样把房间的门卡给了我们。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　但今天的事情没有完全结束，进了房间我们发现房间的承诺的沙发床看起来不能打开，于是去前台问了问情况。大概是可以打开的沙发床都租出去了，这一间碰巧不能打开，第二天就帮我们换。于是只剩下一张床了。此外我第一次注意到所谓Loft是什么样的房间，此前我以为是类似跃层一样的设计，后面发现Loft窄小了许多，是一种有些病态的房屋结构。在这个屋子放床的二楼，其实只摆了一张床，床的下面就是浴室。我的心里和嘴上都感叹着北京奇妙的逼仄风格。</p><p>　　于是只能睡一张床。在床上面简单聊了几句陈年老账，三弟的声音逐渐变成了嘟囔声，看样子他是困了。那就这样吧。本以为能够顺利地睡着，但失败了。我看着窗户外的光亮了起来，打开手机，这才不到五点。三弟还在旁边侧着，不知道是什么缘故，靠到了离墙比较近的位置，呼吸声也不太可闻。好久没有失眠了，是水土不服还是别的什么原因。不论如何，北京的第一天就这样开始了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其四）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　离开乌镇的时候到了。我不太确定来这里的我找到我想找的东西没有。这里是一个静态的小镇，但在这个静态的小镇里活动的也是动态的人。他们此起彼伏地出现在我的生活，卷动它的平静。一些搅动在我的预期之中，而一些搅动只在我的梦中出现过。这不是一个圆梦的地方，也不是一个孕育梦的地方，是等着梦死掉的地方。这才是静态的意义。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　第二天一早就离开了这个住处，朝着桐乡高铁站出发了。老板看我拖着箱子往外面走，就热情地从柜台里出来，说是要送我们去客运中心。这时候我才想起这家民宿确实是提供接送的服务，有人能送这二十分钟路自然是再好不过。下了民宿老板的车，就近随便找了些吃的。</p><p>　　这几日的早饭都很随意，大概就景区外面一点点的位置，看着像早餐店的地方就坐进去。不论是不是周末，他们的生意看起来都不怎么好，里面坐着的顾客往往没有饭店的老板和帮工加起来更多。但这样的形式或许还适合旅游，总之也吃了不少当地的东西。不过那个叫定胜糕的似乎被错过了，在我的印象里，定胜糕大概是发糕的味道，也没有什么出奇的，自然也没有强烈推荐。</p><p>　　用完了早饭，也就去赶车去桐乡站。在去桐乡站的路上，三弟哈尔滨那边的学姐给他发了信息，说是一个比赛晋级了，打算参加东三省赛晋级全国赛，让他飞回哈尔滨去。这样的事情放在我身上我大概就会断然拒绝了，作为一门课程项目做到如此已是仁至义尽，我大概没有兴趣维持下去。但三弟这些方面的认识向来和我不同，大概在接到这个信息的时候就接受了这个邀请了吧。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　从虹桥站出来，就车站里的面馆吃了顿。不知道是不是因为成为党员的缘故还是最近在看觉醒年代的缘故，三弟最近对这些又红又专的东西颇有兴趣。在面馆的书墙上随便捞了一本书，也是和这些相关的。我称不上排斥这些东西，但大抵是没有兴趣的。不过这样看书的场景确实有趣，就不自主的拍了一张。或许他母亲后面要照片的时候这能有些存货（在这几天他母亲似乎有找他要过照片之类的？但好像他在乌镇这个事情，他的母亲还尚不知情，甚至可能以为还在哈尔滨。）</p><p>　　之后我要去学校拿毕业证和学位证，三弟要去之前的住处取行李以及退房的事情，于是在地铁站的某一站就分别了，之后在落脚的地方再碰头。今日的上海出奇地炎热，36度，罕见的数字。我拖着箱子在地铁站和校门之间移动，一条线路几乎没有树荫。这样直射的太阳就是某种威胁，这个时候我的手机接到一条消息，说是第二天的飞机从下午的时间改到了第二天早晨7点出发。</p><p>　　这样的情况总是会令人头疼，左手的扭伤也尚未痊愈，这种荒唐的时刻也开始隐隐作痛起来。我给三弟发了个消息让他看看有什么合适的时间，然后立刻改过去。“行”，三弟这样回复，但就没有了下文。于是我停下了我的步伐，开始查下一班时间。或许和我情况类似的有许多，如果不尽快改签就会失去机会，前往北京的动机就消散了一半。改签的优先级显然高于离开36度的热浪，我这样判断着。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　可能是最后一次刷卡进入复旦。今天之后一卡通就消失了它的功能，我们也再不能借用这张卡进入学校。恰好是这样的时候，我拖着自己的箱子，像一个新生报道时那样进入了校园。学校里几乎没有什么人，要么是同学都考试结束放假离开了，要么是这样的天气劝阻了所有打算出门的人。也是托这个天气的福，我可以仔仔细细端详这个没有人的校园。从校门到目的地的一路基本也没有什么树荫，没有行人，也没有车辆。只有我箱子的轮胎在地面发出的规律的哒哒声。</p><p>　　这些校园里的风光虽说熟悉，却说不上亲切。只是觉得入校在这里上课大概就是前几天的事情，像是一种错觉，警告着我实感逐渐衰退的隐患。这一次要去的楼是从来没有去过的一栋，在核科技楼。事情起因大概是我拜托的中文系同学M帮我取毕业证，并答应了她以我为被试做一个语言学相关的测试的请求。这样的测试听起来就有一些吸引力，所以也算不上交换条件，只是碰巧罢了。</p><p>　　进了室内，外面炎热的空气就不能进来，只是我注意到我的衣服被汗浸得半湿，属实有些不雅观。不过对方应该也能理解吧。测试是一些单调的问题，后面听M说是测试人能不能正确地理解“A什么都没有做”这样的句子是一个陈述句而非一个问句。听起来很匪夷所思，但在她的被试中确有一位认为这是个问句。我们后面又讨论了一些之后她假期安排的事情，看样子她要呆在这里一直完成100份测试才能离开。大家都有自己奋斗和追求的东西。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　我把事情办完，就给三弟发了个信息说自己办完了，三弟回复说他也办完了，就朝这边赶。于是我告别了M（就不知道什么时候能下次再见面了，说起来，M也是我在大学期间关系不错的朋友了，当时还一起照了不少毕业照。这样看来，之后或仍有见面的机会吧），朝着五角场走去。</p><p>　　我再次看到三弟时，他从头到脚都换了一身，看起来是在那边收拾东西的时候顺便洗了个澡把自己收拾了一下。上海的民宿做得很好，但又有一些繁文缛节。为了拿到进门的钥匙，做得像一个解密游戏一样。不过进到房间之后自然没什么可以指摘的，一应俱全的设施和雅致的装修。墙面是混乱的蓝黑色油漆，伴有一些简单的白色装饰。室内的电器也大多采用了智能家居的设计，冷冰冰的现代感。</p><p>　　这样的风格就足以令我赞同魔都的魅力了，但这也将是我多年内在这里的最后一晚。晚上我带三弟去了我常去的那家茶餐厅，北京应该也有这样价廉物美的餐厅，这是自然。但这样熟悉的感觉应该才颇为重要。我在这个餐厅里面和许多的同学朋友吃过饭，从独自一人到五六人小聚，这个餐厅都曾目睹过。时常和我来这个餐厅的人物，之后估计也都几年难得一见。或许这顿饭我不得不吃得心不在焉。</p><p>　　“感觉你在某些关乎情感和态度的评价上总是显得过于淡漠了，但你自己或许并没有到那个程度”这话看起来不假，大概只是让我联想起这一切的点比较蹊跷罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其三）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　到了晚上的时候，窗外开始一阵一阵地闪烁着白光，伴随着远远近近的轰隆声。于是我们站在窗户的旁边看着天边闪过的白光，并企图在其中找到闪电的踪迹。只是天空只是一闪一闪，站在窗边的人什么也没有抓住。雷声，波澜起伏又平静的夜晚，颇有诗意。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　这样考虑下来，上午就是去东栅了。本想着已经过了周末，游客会少一些，但在进门的时候，就围了一大片穿着暑期实践队队服的中学生群体。一拨又一拨，不免令人有一些担忧。这天的太阳也毒了起来。我手上拿着根冰糕，以比我能够能够食用的更快速度融化着，很快滴到了我的手上。</p><p>　　东栅的风景在看过西栅之后，也不会惊起太多好奇。真要说神秘地藏着的，是那个名为“三白酒”的东西。大概一进景区就朝着那个三白酒的作坊走。东栅很小，很快就走到了它的门前，但这家不似昨日的乌酒馆那样门前放着块一套酒及小吃的招牌，看起来也只有一罐一罐的酒瓶。迈步进去转了一圈，大概是制酒的作坊应该有的样子，各个步骤的工具和仪器，但是还是没有那样能坐下喝酒的位置。</p><p>　　我说，东栅的商业化不及西栅，没有那么多讲究又方便的设置。三弟相信这里肯定能找到酒喝，于是又折回了柜台，问着老板有没有可以尝试的酒。老板就打开身边的一个酒缸，从中取出一点点白色的液体放在杯子里。大概就一下喝完的程度，然后三弟要了一杯酒酿，我们就离开了这个地方。</p><p>　　“大概是白酒的味道”，这是它获得的评价。但白酒是什么味道我也不懂的。酒酿也没有尝试，总觉得酒酿需要和什么东西在一起才味道丰富了起来，只是酒酿的话，少了一些味道。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　喝完三白酒，顺势逛了逛东栅里面的一些小陈列馆，就离开了东栅。时间还早，我说去之前我中意的那个咖啡馆吧，等到吃了午饭再回去。这是第二次走进那家咖啡馆，这次除了上次的两位男生，好像还多了一个看起来更成熟的人物，不过站在柜台前的还是之前那位白衣男生。摩卡。我和他开着玩笑，“今天的生意看起来好了不少”，对方回答说，“是”。</p><p>　　三弟打量了一阵子书架上的书，但最后一本也没有看，只是掏出了自己的手机。现在我手上打开的书是《白痴》了。不一会白衣男生把我的摩卡端了过来。这家的摩卡没有把奶油混在咖啡中，而是做了个奶盖放在顶上。三弟问，你点的这是什么，我说是摩卡，他说摩卡有奶油这东西吗，我说大概是有的吧，摩卡是什么都有的那种。</p><p>　　看着看着书，就会把视线从文字上移开，看见周围的环境。心里想着，我如果能够找一家这样的店，自己做老板，放一些自己喜欢的音乐，就很好了。重要的是，这个店的位置要令人满意，要在清幽的角落，要有不多不少的客人，不至于店铺维持不走且没有生气，也不至于将座位坐满令人难受。</p><p>　　临到午饭的时候，我们离开了这家店和常丰街。大概之后不会再回来了。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　打算去我来乌镇的第一天吃饭的地方吃一顿，上一次我因为一个人的缘故点了一些小份菜，这次就没有这个必要了。正这样想着，后面有人追了上来，是白衣男生，他手上握着一个钱包，大概是我的钱包，问它是不是我们的。我说是我的，还没来得及说谢谢，他就递给了我并离开了我的视线。三弟打趣我说，钱包也能弄掉。钱包里有不少重要的东西，比如身份证。大概因此遗失了会成为巨大的困扰。</p><p>　　也就是在拿到这个钱包的一刻，我突然开始觉得疲惫，困意涌了上来，四周的景色仿佛隔着层幕布，画面和声音似乎也存在着轻微的错位。这不是我第一次忘了拿东西，我的插线板就落在了常丰街，这也是今天造访常丰街的原因。午饭的时候，三弟又点了杯酒饮料，至于是酒还是饮料，我们各执一词，先姑且将其称为酒饮料吧。</p><p>　　午饭之后，疲惫更盛起来，于是嚷着回住的地方。我说，我看见的一切东西，像是浮了起来，声音也慢了半拍。三弟说我这现象和醉了很像，但我也不知道什么是醉了，只是觉得一阵恍惚。大概疲惫的形式就是如此。回到房间以后，我就倒在了床上，陷进了混沌的睡眠。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　不论任何时候，我都会认为睡姿和睡颜是有趣且值得观察的东西。每日的早晨，我大概都会比三弟早醒一个小时左右，这个时间我就能坐起来看我的书，或者观察着这个还在梦乡中的个体。</p><p>　　在乌镇的第五天早晨，我看完了《海边的卡夫卡》，并打算开始看尼采的《历史的用途与滥用》，但尼采诡异的比喻和叙述的手段很快让我暂时搁置了这本书，然后选择了《白痴》。此时三弟睡得还很熟，大概抱着一个枕头，时不时地翻一个身，发出均匀的呼吸声。人大概只有在睡眠的时候才会回到婴儿时的样貌，变得天真而纯粹起来。无拘无束，也没有防备。平和是能在睡颜上读到的一切，难怪西方那些画家执着于将人的睡颜用油画或者什么别的画临摹下来，这是自然的美，自然是有画下来的必要的。</p><p>　　但另一方面，睡眠和性又存在着内在的关联。这样平和的姿态和神情又不免和妖娆与色气联系起来，复杂和矛盾是美的可能性之一，这不令人讨厌。大概在我看了一阵子《白痴》并打算休息一下，合上我的书本的时候，三弟伸了一个懒腰，然后揉起了眼睛，然后侧过身来拿起手机开始看。大概是讨论今天去哪里的时候了。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　我醒了之后，还是感受到巨大的疲惫。于是在床上翻了几个身，又打算睡过去，但失败了，只能坐起来。下午还有很长的时间才结束。本来从常丰街回来的时候，打算和酒店的老板交涉，退了最后一天的房钱，就在今天下午直接返回上海，但这样的想法自然是会落空的。但这个下午和晚上也并不打算放更多的行程，我大概也没有精力了。</p><p>　　三弟看我醒了，问我为什么累成这样子，后面还要走上海，走了上海还要去北京，那怎么办。我也不知道怎么回答，可能“内耗”太严重了吧。“内耗”对我来说还算个时髦的词汇，但似乎它流行的时候已经过去了，“内耗”评价这个情形可能再合适不过。总会有办法的，倒不至于会这么累，只是突然的事，我这样回答到。</p><h3 id="六"><a href="#六" class="headerlink" title="六"></a>六</h3><p>　　想起昨天晚上，我从箱子里捞了一件不算大的黑色衣服给三弟，他毕竟两天没换衣服了，在这样的夏天还是不太好。他把衣服洗了，等到第二天早上就又能换上。还行，穿上之后并不突兀，风格也算合适。</p><p>　　今夜到了更晚的时候，天空中闪起了白色的光。大概是雷暴天。我们站着看了一会，没有发现闪电的踪影，只是闪着白色的光，于是又特意走到了楼下去，看对面的天空，但也只是白色的光。老板坐在柜台的后面，看着我们一上一下，问我们是不是没吃晚饭，这个天要出去可麻烦了。我说吃过了，只是打算来看看这闪电。</p><p>　　于是接着回到房间看着窗户外的天空，三弟掏出手机打算抓住一些闪电。虽说有一些可行性但果然还是有些难，这个时候我看见飘过的一条白色闪电，便“噢”地叫出来，我说这个手机指向的方向不太对，但应该能够拍出来的。然后我就去洗澡了。等到我出来的时候，他还在接着拍着闪电，我心想他精力旺盛的程度看来还在我预期之外。“如何，有什么收获吗？”，三弟把手机给我看，看样子抓到了不少的闪电，有一些还有着清晰的样式。精力好真好。就这样子，闪电的吸引力也弱了，直到什么晃眼的白光一下子覆盖了窗户。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其二）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　由于这突来的变故，原本的计划也就突然改变了。最终我在这个地方可以多呆上几天，大概和前几日不同的是，可以一个人探索的时间结束了。这个情况并不令人难怪，在多一个人的情况下对它重新探索一次或许也是美妙的主意。但在这一切发生的时候，故事的主体就发生了改变，一个探索者就变成了一个观察者，我的注意力也动态了起来。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　在前往常丰街的时候，路过了东栅的入口和戏台。东栅门前人头攒动，顿时消了这个时候进入东栅的念头。与前几日的景色不同，乌镇的气温开始往上攀登，变得躁动起来。戏台子这个时候已经有了唱戏的人，我们就折过去，在观音庙的对面远远地看着。上面唱戏的人依旧穿得繁复，依旧灵活地动着自己的双手。至于她唱了些什么，依然无从得知。三弟在旁边看了一阵，并持续地看着。不知道他是想休息，还是切实地对这样的艺术形式抱有好奇。这样没多久，我说走吧。于是我们继续朝着住处的方向前进。</p><p>　　乌镇这样的景致是最怕人多的。人多起来既没有了韵味，又没有了闲适的心情。在这么多人存在的情况下，只想逃跑，离开所有人到一个安静的角落。乌镇有很多零零散散的别院，别院大概用两道门连接，剩下被两面墙围住，形成一个6平米左右的封闭空间。这些白墙上偶尔会攀附着一些绿色的植物，这个院子的上面被高高低低的黑色屋檐围着。这样的地方最容不得人多起来，一旦多起来，就从一个别致的景观变成了监狱。于是但凡见到人多的场景，就只能逃跑，毫不迟疑地逃跑。</p><p>　　我一边和三弟唠叨着这里前几日不是如此，一边怀念着前几天寥落的街道、可以站在其间看着带篷的小船从河中间悠悠地驶过。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　三弟和我这样悠哉游哉的闲人不同，感觉总有大量的事情缠身，让我时不时感叹一下一个人居然有这么多的时间什么都干，也顺便感叹一下他的充沛精力。大概就是这样的时候，他有一个3500的外快，时间卡的很紧，本来以为能够在昨日用手机解决的，但看起来成效着实不足，便拖到了今天。从南栅大门到常丰街以后退房前还有一些时间，正好就我把电脑拿出来交给他处理这个事情。</p><p>　　一个学校内的水平差异十分显著，好像只是一些非常简单的问题，就是不能顺利地把想法传递过去，导致本来几步就能解决的事情，演变成了逐步教学。也或许就是在这样不厌其烦的工作中，切实的能力和社交手段以及无穷无尽的精力才能培养起来。另一种更加有效的解释大概是三弟能力很强，这样想或许要靠谱得多。比起我荒废的大学时光，他的收获应该要多得多吧，挺好。</p><p>　　大概快到退房的时候，他的工作也都处理完了。我合上我的小说，收拾起了东西。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　电视剧我确实是有相当一些时间没有看过了，国内和国外的电视剧总存在一些完全称不上微妙的差距。或许是某些反叛心理，对国内的影视作品怀有一些批判或者不待见的态度，大概会主动回避这样的作品。（后面发现，西方那些作品大多也处在过誉的状态，一些在圈子内具有盛誉的作品最后看起来实在是食之无味。）但这也和我对视觉相关的艺术形式不太待见的想法息息相关。</p><p>　　这方面三弟就和我态度截然不同，不知道是因为平日对影视作品接触更多还是什么其它的原因，这次他提出看《觉醒年代》的时候，我有一些吃惊，但也只是有一些吃惊。或许这几年国内影视作品的风向较更早期有了一些改变，他对国内作品的态度也发生了一些改变（或许是仅限于电视剧的）。这么想来，好像电视剧是年龄再大一些人的权力，它既不那么消耗脑细胞，又可以随叫随停，本身有一种休闲的味道。或许接受电视剧这个过程和性格变得更加温和随性有一些关系。这样说也未免太牵强了。</p><p>　　总之在我看着《海边的卡夫卡》的时候（这时候已接近尾声了），三弟在旁边看着手机饶有兴趣地一边看一边笑，不免得对其内容产生好奇。由于我已经从常丰街搬了出来，我的电脑也和我一同搬了过来，于是正好能打开电脑看这个。于是上午就这样过去了。</p><p>　　电视剧处理得挺不错，节奏也算得当，主要民国时期的文人骚客实在为这部剧提供了相当的内容以创作。难怪三弟笑得这么开心了。这样也不赖吧，中国的影视。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　第三遍的乌镇之行大概是围绕着酒开展的。酒或许是第一天晚上需要的东西，但见了面之后我打消了这样的想法。酒大概在那个时刻不是必须的东西，或者今后也不会是必须的东西。当作消遣或者兴趣是没什么值得担心的，只是嘴上不饶人会叨扰几句。所以以酒作为线索并不是一个坏的想法，反而让这趟旅程的意味清晰了起来。下酒。我不能作为酒友分享什么酒的感受（一方面是根深蒂固地对于酒和酒后的自己的不信任，另一方面是医嘱），只能作为下酒菜说一些聊胜于无的陈词滥调。关于失恋的事情也是如此。</p><p>　　第一杯出现的酒是乌酒。乌酒被称为乌镇黑白酒中的黑酒，在西栅景区的时候刚好路过（我昨日一个人闲逛时自然看见了这一家店，但我一定是不会走进去的）。店的位置很好，靠着西栅的主流，可以透过窗户看见外面行驶着的小船。这样的风致是我当时对这家店留有印象的原因。</p><p>　　这家店好心地将两个小菜一个肉菜和一杯酒称为一个套餐，这样我作为不可饮酒之人也能获得自己的乐趣，于是点了两套。喝乌酒似乎有一些讲究，需要将杯子放在一个小盅中，用温水加热这个酒。店家称这样会让酒更“润”一些，这自然是我不懂的术语了。此外是一叠胡豆和黄豆，还有几块酱鸭。</p><p>　　因为点了两套，我自然也有一杯酒。不过三弟还是速度更快一些，先倒出了一小杯就开始喝起来。并说是这个酒有很大一股醋味，我闻了闻，确实如此。大概一杯是没有问题的吧，于是我给自己也倒了一杯，确实是一股醋味。酒味在其中显得比较模糊，对我而言不算难喝的东西。但我也就只打算喝这么一杯了，然后将剩下的大半杯酒交给了三弟。</p><p>　　他看起来对这个酒不太满意。在离开店的时候，店家打趣式地问着，“这就走了吗？”三弟回答说，“这就走了”，店家追问道“真的就走了吗？”三个人嗤嗤地笑了起来。走到门口的时候，三弟又开始对没有喝过的那个八年陈酿产生了兴趣，店家也立刻用斗一样的勺子装出一杯。一口喝完，正好店家背过了身去，没看见三弟皱成一团的哭丧脸。大概是醋味更重了吧，八年陈醋，我这样想着。</p><p>　　“乌镇还有三白酒”我这样说着，“不过在东栅那边，要在西栅这边也找找吗？”“到处转转吧，希望不是醋味。”我们就这样离开了这家店。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　本考虑从乌镇回了上海，我再带三弟在上海兜转几圈就回成都。这个时候他突然接到了一个北京酒局得到邀请，虽然很突然，三弟还是接受了，并满怀期待的样子。散心毕竟是散心，这样也好。于是我也应了前去北京的邀约，让这个已经被修改的旅途又被修改了一次。</p><h3 id="六"><a href="#六" class="headerlink" title="六"></a>六</h3><p>　　同时在镇子里的熟人，还多了个H。H在我前往乌镇前就告诉了我乌镇之行的打算，不巧我们旅行的时间大概错开了来。但由于三弟突然的闯入，时间竟完全重叠了。我们在西栅中兜兜转转的时候，H也在这里面。H宣称自己和女朋友一同在乌镇蜜月，于是我们讨论着要不要逮他们个正着，后面想想还是算了。西栅两条主街，一些副街，说大大，说小小，人头攒动，大概要找一个特定的组合还是很难。</p><p>　　离开酒肆不久，在西栅找了些当地有名的小吃，最后就找到临河的茶馆坐下。三弟看着写着茶名字的菜单考虑了很久，嘟囔了一阵子冬天喝什么茶夏天喝什么茶的理论，最后定下了；我就随便点了个我能念对名字的茶，就二楼坐下了。这时候H发来信息，说是想抽空过来找我们（H的女友可神秘得很，从来真人不露相，从未得见过，自然是一人前来）。</p><p>　　没多久H找上了茶楼，坐在了四方桌的一边。H生性是个谜语人，说话藏头藏尾，隐而不漏。H方落座，就开始打趣三弟脱单的事情，然后问起为什么来乌镇云云的话。失恋这个事情大概知道的人有限，H大概是不知道的。H推测这一切的资料只有二：其一是当时的朋友圈，其二是后面我说的“心脏病比喻”。于是我打着谜语说着失恋之类的话，又不太想戳破又能让H理解情况，大概能缓解一下三弟的尴尬（虽然他大概是不会尴尬的吧）。最后也没能清楚谜语人H是不是真理解了我说的内容，但H装作理解了的样子。之后是一些平日老朋友谈天的话题。我突然说数年前，三个人一同做初中毕业班的毕业纪念卡牌的事情，之后大概就没一起聚过了。仔细想想，确是如此。阴差阳错之事之多，才能三人重在乌镇茶楼相见，这大概就是人间的快乐吧。</p><p>　　H只匆匆忙忙地聊了一会，大概落座都没能安稳，十分钟后就告辞要离开了。我们看着H离开了这层楼，然后就接着喝茶看书。外面的船只来来往往，让我想起关于“名利”的比喻。</p><h3 id="七"><a href="#七" class="headerlink" title="七"></a>七</h3><p>　　本来是不计划今日去西栅的，但考虑到东栅人之多，又不想在房间呆上一天。我想，周日下午，大多游人大概回到市里了，西栅又是看夜景的地，将晚上的日程定成了西栅，这才下午来了西栅。</p><p>　　西栅里兜兜转转，喝了杯酒，吃了些小吃。中间三弟想找三白酒，便循着到处的酒家。其中一家酒家和月老庙是一个方向，我打趣他，就嚷着往月老庙的地方去。临到酒家跟前，发现这个酒家是个饭馆，大概是没有酒的，而月老庙就在跟前，免不得上前看看。红色的牌子被红色的绳子，千千万万，挂在树下、房檐下、走廊栏杆下。旁边的游客或者卖红色牌子的人说着这个很灵之类的话。“共产党党员大概不能信这些”我呵呵地笑着，稍微看了看就离开了这里。</p><p>　　这些事情做完，就想找个酒吧坐着，等到夜间降下。三弟眼尖，看见了一个叫酒吧街的地名，便寻过去，发现有三三两两的酒吧，但好像没勾起他的兴致，最后找了家茶馆坐下。待到夜幕落下后，就离开了茶馆去看看这西栅的夜色。</p><h3 id="八"><a href="#八" class="headerlink" title="八"></a>八</h3><p>　　由于昨日拜访时被人山人海逼回了住处，就与夜景失之交臂。这一次可以仔细重温一下这夜色。乌镇的夜景大概是沿着河两边的屋子与河构成的，逼仄的河道产生了一种既错乱又秩序的美感，乌黑又闪着黄光的水面，船在这粼粼的水面上晃着。</p><p>　　我说，西栅这夜晚太亮了，倒不如黑灯瞎火更有趣味。三弟说，这没必要，就算不是景区，这里晚上也没有必要黑灯瞎火。是这个意思吧，但回想起昨夜大雨下的常丰街，一种更加宁静的画面浮现了出来，或许我更喜欢这样死沉的景色。</p><p>　　乌镇的景色大概就是这样，既不出人意外又不会过于俗套。如果这里没有熙熙攘攘的行人，味道定不输于我去过的任何一个古镇。秀气、温婉的景象，大概这也是我选择乌镇而非苏州的原因吧，尽管乌镇很多部分已经经过了重建，用“假”来形容现在的西栅并不过分，但这样的“假”不令人讨厌。</p><p>　　三弟说这样的景色完全能预期得到，再他之前也来过江南地区，这样的风景大概也不构成相当的吸引力。我们大致转了转就离开了西栅。但终于没有找到三白酒，就把它留给之后的东栅吧；也终于没有找到酒吧，就把它留到更远的时间吧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·下酒（其一）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E4%B8%8B%E9%85%92%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　从这里前往桐乡高铁站需要一个半小时，现在过去的话应该堪堪足够。在一切发生以前，我大概可能会和这里的猫再玩一会，冲个澡，然后去吃午饭。我瞥了一眼手机上剩下的电量，然后就出门了。它应该够吧，电量。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　“所以你的住宿它咋样了，至少给我留一天定住宿的时间嘛…明天的住宿我还没定”<br>　　“你来的话，可以住我这里”<br>　　“啊这，猫踩在了我的电脑上”<br>　　“然后，我应该失恋了”<br>　　“[猫的图片]”<br>　　“啊？？不，不，你别吓我。上次这个事情就把我吓得够呛”<br>　　“没有吓你”<br>　　“？？……哎，见面说吧。你已经到上海了，还是不打算来了？”<br>　　“已经在了，你来了再说吧”<br>　　“行，我估计明天下午到”<br>　　“行”<br>　　“这个事情是死了，还是有转机？”<br>　　“应该是死了”<br>　　“哎，行吧。明天见面聊。”<br>　　“或者，现在去你那里要多久？”<br>　　“啊…4小时？”<br>　　“你帮我看看票，我来找你也行”<br>　　“噢不对，三小时”<br>　　“我可能现在需要转换一下心情”<br>　　“Fine，这里确实挺不错的……哎，我还是先回上海吧，之后再商量怎么办？”<br>　　“我大概半小时到火车站，你帮我买5点的吧”<br>　　“啊但这，你过来的话我最迟后天早上就得回上海？”<br>　　“没事，我可能只是不太想一个人待在这”<br>　　“行，那你过来吧。或者我现在退宿回来？”<br>　　“没事，我来吧。正好出去走走”<br>　　……</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　“猫在我门口”<br>　　“好，欲拒还迎”<br>　　“梅开三度，又进来了。这只猫一伸手就会走过来，绝了。第二只猫”<br>　　“提问，那么是你在撸猫还是猫在撸你”<br>　　“太复杂了，我想出去吃饭，我只是回来放个包的”<br>　　“双倍的快乐不是”<br>　　“[图片]，猫舍”<br>　　“猫猫：你可以走了我只要空调”<br>　　“猫趴在了我的电脑上”<br>　　……<br>　　“图呢（”<br>　　“啊，在处理更加复杂的事情”<br>　　“看起来很圆”<br>　　“哎”<br>　　……</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　看样子这是末班车了，我站在这里等着过来的公交车。这样过去的话应该时间正好。这个点没有什么坐车的人，除了我之外还有两个看起来像是游客的。这挺奇怪，明明是很适合前往车站的时间。我查了一下从桐乡返回上海的高铁，确实是还有的。这个时候车来了，我坐了上去。</p><p>　　很反常的，路上我没有注意到什么街上的景色。一路如何驶向城镇的都一头雾水，然后在高德地图指导我下车的地方下了车，开着步行导航又走了一截，这时候才发现我在一个市中心一样的地方，旁边立着人民政府。这时我才注意到，我的导航目的地被设置为了桐乡市。然而那已经是末班车了。</p><p>　　于是我必须得换一条线路，曲折耗时但必须走上的道路。但巧却不好的是，三弟没能赶上5点的动车，改签到六点的那一班又微妙地慢了一些。导致我这一番折腾之后居然能够刚好对上时间。这样也挺好的，我站在站台上这样想，留给我的时间变多了。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　“C，后面几天你在学校吗？有一些变故，我本来计划明天返回复旦取双证，但出现了一些好像不太方便处理的意外情况，6号前大概是回不来了。如果方便的话，能帮我代取一下吗？我一周内肯定回上海”<br>　　“嗯嗯我在，OK的，我刚刚做完实验，等你抓你做被试”<br>　　“[好的]，委托书我今明两天把它弄出来”<br>　　“[动画表情]”</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　本来以为三弟会拖着大箱小箱出现在我的面前，于是以这个为基准，在游客陆陆续续从车站出来的时候，盯着车门看。我在车上大概考虑了一下这种情况应该说一些什么，我看见他什么也没有背，也什么都没提，只挎着一个小肩包出现在了车站前。</p><p>　　应该有一些失魂落魄的样子吗？但是一点也没有，就如同我最后一次见到他是一样，神情上看不出什么差别。很难说我是更加担心了还是稍微轻松了一些，我大概打了个招呼，就开始讨论如何回乌镇，并简单说了一下后面几日的考虑。关于那个事情，我打的腹稿通通被咽了回去。这个时候需要拥抱还是什么别的东西吗？我也这样想着，但终于还是什么也没有做，只是领着往夜间巴士的方向走去。</p><p>　　车上没有讨论什么问题，氛围估计也不太适合，就简单讨论了一下这几日的情况和后面可以有的安排。我定了一间新的房间。外面的雨渐渐地下大了，这几日积攒的雨滴终于落了下来，变成一片滂沱大雨。</p><h3 id="六"><a href="#六" class="headerlink" title="六"></a>六</h3><p>　　这样的雨很久没有遇到了，像是落下的一元硬币，从天空一枚一枚地往地下砸。失败的排水系统很快就允许这些水滴积攒成了小小的湖泊，一些道路被埋了个大概，在黑夜中很不明显。很快我的鞋子和袜子就湿透了。</p><p>　　三弟的心情大概没有什么问题，前面那段令人担忧的对话大概是虚惊一场——吃完一顿面之后的我是这样想的。现在如何穿过这片雨水回到住处，才变成了真正的困难。我走在前面，三弟跟在后面。大概后面我们的鞋子都湿透了，走起来反而更加随性。这样想着我就一脚踏进了一个水凼，我恍然间觉得有一些快乐。好像我考虑了很久而尚未得到解决的事情，就这样解决了。</p><p>　　这样，我们渐渐远离了乌镇繁华的商业区，慢慢划入了宁静的常丰街。我还没在这个时候，逛过常丰街，在这样的暴雨下更是没有。整条街都浸淫在黑暗中，一条长长的石板通道和打湿的木头板子反射着幽幽的光。三弟停下来照了几张，我说，“这地方不错吧。”</p><p>　　等到回到新的住处，已经不早了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·索居（其四）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　目前在乌镇的这几日就是这样的悠哉游哉，醒了就能四处溜达，累了就在房间里窝着。找到了近处的超市、早餐店、一个人也能吃的不错的小饭馆子，和一家可以坐一下午的咖啡馆。使人不禁觉得养老就是这种味道。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　离开咖啡店，稍作整顿之后吃了顿饭，就前往北栅。这个时候雨不大不小，是刚好需要打伞的程度。雨水不能用绵密去形容，还是一滴一滴分别开来的雨水。打开地图，看见那边有个叫谷仓的东西，据说是一个展会厅，于是便暂时以这个为目的地前进。北栅和南栅完全不同，这边几乎没有什么居民了，房屋都张贴着“征收”之类的文字；其实北栅的房屋本来就很少。</p><p>　　一刻钟后走到谷仓这里，发现它被围墙围得严严实实，大概是进不去。一看地图，发现现在在西栅的附近了，不如去西栅周围转转。</p><p>　　西栅和东栅完全不同，它周围的建筑充满了现代化的味道。各种饭馆、民宿、快捷酒店应有尽有。火锅店、生煎店、苏杭菜，食物各式各样。样式和一般的小镇并无二致。这里的游人很多，在大街上熙熙攘攘，一些店铺开得热火朝天，另一部分则门庭冷落。但这样现代化的风格，总是少了些格调和宁静。我肯定是更喜欢常丰街的。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　围着西栅这一圈，多多少少找到了两年前第一次来乌镇时见到的东西，比如一家十字路口上开着的面包店。我还记得当时在面包店，六个人排成一排，坐在临街的玻璃墙旁边看着外面的样子。如今这样的机会已再也不可寻觅到了，即使L想方设法地撺掇起毕业旅行，但时间零零散散，互有冲突，几次讨论后便终于没有了声音。</p><p>　　毕业旅行是一个比想象中更复杂的东西。我大概收到了两个相对正式的毕业旅行的邀请，但总觉得哪里诡异。大概不是我想去的地方，也不是想一起去的同行者。毕业本身并不是什么大事，对我而言；相反，毕业旅行却具有一定的意味。这属实是一件怪事。或许二者区别在“毕业”这个事情是事务性的，无论如何都要做的，是一个不可回避的、被强迫的工作；而毕业旅行则是主动的，带有象征意味的行动。</p><p>　　但这样带有象征意味的行动，脆弱而飘摇，在任何时候都没有定数。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　西栅令人兴味索然，并觉得即使前往西栅景区，也看不见什么东西。即使这样想着，还是决定第二天前往西栅的景区，算是对于乌镇生活的一个补充，这样我就能心满意足地离开这个地方。天黑了下来，我也慢慢回到了宁静的常丰街。</p><p>　　晚上在房间中没什么事情，也就是进行一些普通的娱乐。记得进门前看到走廊的尽头伏着一头黑色又肥胖的猫，它盯着走上这条走廊的人，这个人也盯着它，并打开了房间门走了进去。以至于后面摘下耳机听到门外传来猫叫声时，我以为这正是方才那只黑猫，怀着好奇我打开了门。一只油光水亮的黑白相间的肥猫趴在旁边的阶梯最高层上，喵呜喵呜地叫着。我一开门它就转过头来看见我，突然就钻进了我的房间。</p><p>　　它在里面走来走去，嗅来嗅去，从我的鞋子嗅到我的箱子，试图咬咬我的书包，然后卧在了地面上开始打滚。我下意识地伸手去薅它，它就把头凑过来，用两只手抱着我的手指尖，把厚实的腹部露了出来。如果把手按在它的腹部，它会发出一些婴儿哭声一样的声音，并一晃一晃，眯着眼睛。可能它觉得我是个和善的人，就一下子跳到了我的床上，在那里趴着、打滚又坐起来，如此反复。至于我做什么，它就饶有兴味地盯着看，如果我的手离它近，它就会钻过来。</p><p>　　它大概是来蹭空调的吧，店主在爱彼迎上这么和我说。不碍事的，这样一只猫还破坏不了这间房屋的宁静，就让它呆在这里吧。我把房门虚开一截，这样它希望溜走的时候就总能出去。于是我接着干我的事情。</p><p>　　说到这个，我和猫似乎确有一些微妙的缘分，比如高中时窗台外蹲在树桩子上的猫、高中时溜进我四楼寝室的猫、大学时从窗台钻进寝室的猫和疫情期间死在我室友箱子里的猫。猫大概是黏人的生物，也大概是不黏人的生物。它们有自己的一套逻辑，这自然是神秘而可爱的，但多起来了，就单调了起来。</p><p>　　后面这只猫出去了，我关上了门。再过了半小时左右，另一只黑色的猫用同样的方式进入了我的房间。或许在这里的住户都会遇到这样的事情吧，想来这些猫蹭空调也是老手了，所以它们钻进来的时候才如此毫不迟疑。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　第二天，按照计划是前往西栅。西栅有名的是夜景，所以上午就在房间中呆了一阵，等到一个不错的时机，就出去吃了顿午饭并前往西栅。可能是周末的缘故，西栅景区的内部到处都是人。沿街全部是店铺，有的店铺打着老字号，有些则完全是现代化的货物了。街上也不乏穿着旗袍或者厚实汉服的人，很难说清这些服饰让这个地方更有味道还是更没了味道。但这里的人员之多，大概是不适合让我久呆的。</p><p>　　本来想一直磨到晚上看夜景，但实在没什么趣味，一方面是人太多，另一方面是西栅的现代化很不合我的胃口。让我在这个离市区有一些距离的地方直接地感觉到了城市的气息。于是我很快地逃离了这里，在夜幕降下之前。这个门票是不值的，尽管使用了学生票；大概这是适合热闹人的地方，却完全不适合我。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　回到房间，忘了关门，于是那只黑猫先挤了进来，不一会另一只奶油猫也挤了进来。它们在房间里走来走去，又走到我的桌子上，趴在我的电脑上、床上、椅子上。这样看着它们也挺有趣的。心想吃了几天江南的食物，想换一些口味，但这里作为景区，大概也只卖这些特色的东西。实在无奈，便考虑去附近的KFC吃上一顿。想起自己明日回上海之后的住处尚无定所，于是给计划来上海的三弟发了个信息问问他访沪的计划，然后属于我的索居生活戛然而止了。</p><p>　　两只猫听到了主人的叫声，依次从进来的门缝走了出去。</p><p><strong>后记</strong>：这几日玩得随性，琐碎也不成篇章，流水账式地记下这些天的经历，或可以成为今后回忆乌镇这个地点的参考。很难说之后前往乌镇会再次拜访东栅西栅，但常丰街作为一个不错的消遣地，留在了我的回忆中。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·索居（其三）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　像是在冰面上行驶的巨大的货车，在一切都没有发生的时候，它就会这样漫无目的地抵达一个类似目的地的地方，然后冲过目的地并开始下一段旅途。货车和目的地的关系和箭与靶的关系是存在差异的，货车总需要前往下一个目的地，而箭可能就此扎在了靶上。我们认为货车总可以正常的运行，直到其中一个轮胎脱离了控制。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　时间正是中午，很适合在一个安静的房间中呆着看书。被观察了几天的咖啡馆成为了下一个目的地。咖啡馆自带了不少的书，但大多都不对我的胃口，于是只能掏出自己手中的书，点了杯咖啡就在这里坐了下来。或许一个下午都在这里了吧，我想。</p><p>　　这样的氛围就会陷入一种诡秘的格调。是时店里大概有三个人，在店铺的后面坐着几个不明来历的顾客，时不时发出一些嬉闹的声音，但这样的分贝不足以打扰我看我的书。《海边的卡夫卡》，大概是五六年前就看过的书了，这个时候拿出这本书原因有二：其一是上一次和从南京过来的X吃饭的时候，注意到他的衣服上写着这本书的几句台词；其二是现在处在乌镇的这个状态，或许和《卡夫卡》这本书的主人公有一些什么共通之处。而这本书的主人公，当时才15岁。</p><p>　　总之出于这样或者那样的原因，我打开了这本书，并戴上了耳机——很快我意识到并不需要带着耳机，整个咖啡店里有一些背景音乐。可惜的是，这些背景音乐是一些相对现代流行的钢琴曲目，例如久石让的一些作品。倒也算的上舒适，但总觉得有些许不合时宜。耳机戴上又摘下，摘下又戴上。页数一页一页往前。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　《海边的卡夫卡》算不上一本好书，就村上春树我看过的部分而言，这本算得上中上的作品，然而人算不上一部不错的文学作品。这本书太内省、太自私。一个离家出走的少年一路横行，自行其是。很难说这其中蕴藏的内涵多么有趣味，真要说它“为赋新词强说愁”也是合理的。太直白、太曲折。如果不是那两个契机，我大概是不会第二次翻开这本书。</p><p>　　这让我想起个人所奉行的“饭馆序列”：特意拜访的店铺；愿意第二次拜访的店铺；可以再次拜访的店铺；不可避免的情况下可以再次拜访的店铺；不会再次拜访的店铺；后悔来到的店铺。它如果按照“饭馆序列”，应该是在“可以再次拜访的店铺”这一类中。我曾经向一位友人解释这个“饭馆序列”的时候，友人问道，这个序列，真的存在“特意拜访的店铺”这一类东西吗？或许是有的，这样的东西只存在于<u>尚未被拜访过的店铺</u>中。那么拜访乌镇这样的事情，大概就属于“愿意第二次拜访”这一类中吧。简单粗暴的策略，却往往是有效的，因为它不考虑客观，只考虑主观。</p><p>　　我大概这样想着，慢慢地往后翻页，并逐渐回忆起了这本书的全貌，比如“天上降下的鱼”和“夜晚出现的活灵”。摸不到这本书哀伤的实质，它太特殊了，激不起同理心，但还是把它看完吧。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　大概就是这个时候，咖啡馆的风铃响了几声，木门嘎吱一下，进来了位谢顶的老伯。他走向唯一一张空着的桌子A，并一边和店老板（大概是老板的人物）攀谈了起来。店铺里最开始只有三个人，两个员工和老板一样的，和我。在我搅乱这个空气之前，穿着黑衣的男生在桌子A看着自己的书，白衣的男生B在柜台看着手机。我一进门，黑衣的男生立刻站起来，找了个可以放伞的位置（现在正下着小雨），帮我放了过去，然后立刻走到空着的桌子B，拖出了其中的椅子，表示我能坐过去，然后就回到了自己的座位。</p><p>　　一时间我觉得我破坏了什么，作为当下看起来唯一的一个顾客。看起来像是临时照顾这个店的店主白衣男生，和白衣男生的帮手黑衣男生。仅看样子，应该不比我年龄高出多少。这个时候就在这样一个惬意的地方拥有了这样一方舒适的店铺吗？我点了杯摩卡就走到自己被安排的座位上去了，不动声色地看着书并打量着这个精致小巧的咖啡馆出现的一切。</p><p>　　老伯坐在A，并让白衣的男生上了些苏打水。然后就和白衣的男生聊起了最近的情况。老伯先是说起自己的朋友打算在附近开一个酒吧，以及一些业务上的安排等等，又问起这家咖啡厅的另一个员工现在为什么不在。大概这位老伯也是附近经常照顾他们生意的顾客。老伯感叹了一声现在生意不景气之后，就开始打电话和自己的其它朋友聊起了天。幸好，电话结束之后，房间重新回归了宁静。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　我对这家咖啡馆的风格很满意，它自身大概被纳入了“愿意再次光临”的范畴。在大多数时间的宁静中，一些突然出现的顾客和晃荡起的风铃适时地将我的注意力引开到了一些别的事物上，然后不久后又放我回到自己的书中。</p><p>　　大概在长时间的安静后，没有新的顾客上门，现在大概在下午4点了。想着快要离开这个地方，去北栅转转。白衣男生开始向黑衣男生叮嘱一些事情，像是薯条应该怎么炸，咖啡应该怎么做，这些机器怎么处理。果然黑衣男生是助手来着，这样让我想起自己错过的咖啡社招新。大概就这样错过了不少有趣的事情和伙伴吧。如果暑假能够照顾这样一家咖啡店，做做帮工也不错，我这样想。</p><p>　　或者有一家自己的店铺，放自己喜欢的歌单，并守着这样一份清净，等着有的没的摇晃起的风铃声和前来唠几句的老伯。这样的生活不赖，不赖。但大概是再怎么也不可能的事情了吧。这两位男生究竟是为什么呆在这家店里的？是因为自己的兴趣，还是中途辍学了？这样的好奇就诞生了出来，让我悄悄地看着他们的一举一动，想想这背后的故事。于是我暂停了翻书的手，并打算继续看几页。</p><p>　　但后面大多就是些琐碎的叮嘱了。听完了这段话，我稍稍打断了一下他们，问了下这家店什么时候打烊，说是十点。拿起了我的伞，回到了街道上，晚饭的时候到了。但问时间完全是某种意义不明的举动，或许之后还有再来的机会吧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·索居（其二）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　箭寻找一个靶并不容易：即使可以很快确定现在的靶是什么，也会因为微妙的空气而改变了结果。但有一点是确定的，这支箭被射出这个状态。这样的话，箭如果不抵达什么目的地，它是不会停下来的。无论是它最初希望抵达的目的地还是最终希望抵达的目的地。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　沿着常丰街一直走，就能慢慢地从东栅走入南栅的范围。道两旁可以看见一些小店，这些店大多没有商业化的感觉，可以看出是这里的居民随意摆一些东西出来，既卖些什么给游客也卖些什么邻里。这里的店家大多都不招徕顾客，看着你一个人孤零零的从中穿过也没有拦下的想法；在常丰街的时候，还有一些商店的店家会挥着他的扇子，若有若无的招徕一下顾客。不过这样的招徕大概是不针对我的：散客很难在这些饭店落座，即便落座也没什么油水可捞。</p><p>　　在这些散漫的店铺中，极力劝说我购买些什么的，只是酒庄。店家看见我路过，就立刻站起的，一边吆喝着，一边用竹勺子打算从酒缸里捞出酒来。一边还说着这个酒哪里哪里好，我只能笑着挥了挥手，小声说医嘱不让喝酒，才能慢慢从她面前逃出去。可能喝酒这个事情不在乎人多人少吧。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　这样的街道，最适合一个人闲逛。常丰街继续往南走，就进入了南栅部分。南栅贴着非旅游景点的告示，大概是让一些游客为了不失望不要迈入这里。南栅大部分都是居民区，其房门大多紧闭着。许多家门上贴着一些铭牌，例如“学习家庭”、“党员之家”等等。偶尔看见一面开着的窗户，能从其中听到漏出来的电视机的声音，透过这些窗户，能看见里面坐着的老人和一些别的物件。我一边对这些好奇，一边觉该不妥，所以只瞥了一眼就继续往前走了。</p><p>　　即使是这样的居民区，也有一些对游客开放的店铺。这里大多都是咖啡厅了，特意挑在这样僻静却风景不缺的角落，确实是不错的选择。走着走着不免遇到一些其他三三两两的游客和我一般在其中穿行，这些游客偶尔会有些谈笑着的。如果他们说的是一些关于风俗的事情，我就侧耳听听他们在说什么。其中几个游人对着房屋的墙面大加品评，看样子是发现了什么独特的砖，并说着这些是大富大贵才用得起的砖之类的话。待他们离开那片承受了巨大称赞的墙面的时候，我往那边走了几步，看见在一片白墙的楞上，脱落了几块漆；几块砖从这个缺口中露出了样貌，这些砖中间有一两块上面似乎刻着什么字，这让它们与众不同起来。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　南栅是沿着一条河的，这让穿行其间的时候，能时不时地看见旁边的河流和河流的对面。一条算作宽阔的河面在中央横卧。对面的房屋零零星星，墙壁上趴着绿色的植物，院子里也是杂草丛生，看起来大多没有居民了。每走一段可以看见一座小桥，顺着小桥下的河流可以看见更加开阔的画面。也许是一些小道，或许是通往大路的房屋，再往那边走就走到了主干道上。如果尝试着走其中一个小道，应该会走到某家人的菜园子里，看见菜藤子接的已经变紫但体型尚小的茄子，或者一些垂着的海椒。再往前，路就会逐渐地变窄，漫生的杂草遮掩了道路，这就是回头的时候了。</p><p>　　对于这样的小道展开了一两次探索之后，也就丧失了趣味，便回到最初走的那条沿河的大道来。这里也到了南栅的尽头，蜿蜒的被木屋围上的小路也快到了尽头。看样子天色也不早了，想着今日的探索或有些收获，于是从这里折回了房间。一路上本来开着的店铺也打烊了不少，在我来时热情地招徕我的酒馆现在也宁静地呆在一旁。开着的几家饭馆，也没有什么顾客。</p><p>　　回到住处，这次没有看见老板，就径直回到了房间。外面的街道暗了下来，咖啡馆温柔的黄光还投在外面。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　在这样慵懒的时候，我总以为我可以睡到九点及以后这样更加晚的时间，却发现无论我在哪里都在七八点的时候就完全进入了清醒。这应该称得上怪事，在前些忙碌的时候，天天都得睡到九点十点而嫌不足，这就是劳累的结果吗？现日清闲下来，反而多出了不少可以支配的时间。这时间正好，于是我动身前往东栅。</p><p>　　东栅的景色算不上独特，和常丰街非常相似。期间穿插着一些小型的博物馆或者称为陈列馆的东西，展示着一些江南风格的东西，例如木雕或者木床。这些东西我上一次来的时候也已经参观过了，不过上次实在是人流量大了不少，河边窄小的街道显得非常逼仄。博物馆里更是摩肩接踵，大概是没有兴趣端详一番。这一次则不然，一个房间里只有零零星星几个游客，看到自己感兴趣的展品可以大加赞赏地看个过瘾。</p><p>　　但凡这种时候，就容易遇到一些外出游玩的游人，或者一个的或者两个的，会拿着自己的手机凑过来请帮忙拍照。我记得其中一个和我一样独自晃荡的游人，把手机递给我请我拍照。我拍完递给她的时候，问拍得如何、需不需要重新拍之类的，她还没有看到画面的时候就笑着说可以可以，取回了手机然后立刻离开了我的视线。她究竟是怕我呢还是怕这个安静的时间呢。</p><p>　　期间遇到婚俗馆之类的地方，不免联想到三弟最近的一些事情。神神秘秘地策划来沪的事情，我想或许是Propose之类的事情，但想着这样也太激进了一些；另一方面似乎这个年纪距离法定允许的时候也近了，倒不如说是我太保守。总之很快就能知道了。我瞥了一眼婚俗馆中间的泥塑（或者什么别的材料）的一对新人，生命就是这样才传承下来的，文化也是。</p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>　　东栅里走得颇为悠闲，但好像又没有能让我久久驻足的东西。走马观花式的看完了这里面的博物馆和木心的旧居，再吃上一些这里的小吃，在中午来到之前我就离开了这里前去找中午的伙食。</p><p>　　午饭饭馆的附近是一个戏台子。戏台子三四米高，在我早上出来的时候尚未开始工作，只是在门前挂着今天演出的时间表；这个时候已经热热闹闹地开始唱戏了。戏台子下是一些三三两两的游客，有的坐在广场的凉亭下，有的就站在那里拍照，有说有笑的，大概真正在听戏的人屈指可数。我看着台上的一两位演员，他们身着繁复的装束和厚重的妆容，在上面唱着戏。</p><p>　　我一边揣摩着他们是否觉着热，一边想起了数日前和H争辩的非物质文化遗产的问题。看样子H争辩的出发点是国民纳税钱的分配问题，即国民纳税资金是否应当用于非遗保护。文化多样性这样的东西，实在是难以言明的，这样显得我这样的务虚人士的辩驳相当的无力。</p><p>　　然后我从戏台子下走过，回到了常丰街。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颠沛行·索居（其一）</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E9%A2%A0%E6%B2%9B%E8%A1%8C%C2%B7%E7%B4%A2%E5%B1%85%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　大概是弓箭一样的东西，在开始的时候本具有一个具象的目标，然而在路途中可能出现的一切都轻微地偏转着这个目标，带着它前往一个意想不到的方向。这些意想不到的一切，既是趣味本身也是颠沛本身，这个是楼下宁静的咖啡馆和书中不含有的东西。</p><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>　　想来也在上海滞留了两三日，在这里浏览了些许地方，大概是时候离开这里了。于是定下了乌镇的住宿和前往乌镇的车票。四十分钟，就可以从这个现代化的城市抵达一个宁静惬意的小镇，这大概本身也是现代化的优势。从三号湾出来，考虑了一下前往哪一个地铁站，选择了自己从没有去过的那一个，开着导航慢慢往那边走。拖着箱子前进的时候很难抽出时间胡思乱想，但大概正在半途的时候，我想起箱子里放着一把瑞士军刀。如果我希望打包我的箱子，那么我需要使用这把刀；如果我希望邮寄我的刀，我需要把它放进箱子里。那么刀只能是一个独立的个体，我把刀托付给了一个附近的快递点。快递点坐着的是一个十岁左右的小孩，她看起来没有对“刀是否能邮寄”这个问题的清晰答案，尽管我反复告诉她可以。刀最终还是寄出去了。也是这样一番折腾，我不得不改签了我前往乌镇的班次。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>　　住处在一条叫“常丰街”的地方，这个地方我没有详细了解过，上一次造访乌镇的时候也没能有闲余溜达到这边。不过看地理位置，在乌镇西栅东栅之间，是个不错的游玩居住地。不过抵达附近的时候才越发觉得这个街道的美妙。乌镇大概分为东西南北栅四个部分，其中南栅仍然是居民区，北栅原是居民区，且有一些展览之类的，但在疫情之后就再没有开展过了（这些都是民宿老板的知识）；西栅则是乌镇旅游的核心，附近是现代化的街道和住所；东栅则相对原始一些。靠着东栅的就是这条常丰街。</p><p>　　有着类似东栅的氛围，却没有名为门票的时间作为管束，大抵任何时候都能在这条街上游走，寻找自己想要的东西。常丰街保留着住民的样子，稀稀疏疏地开着一些卖小玩意地店铺或者咖啡馆，还有很多没有开门的店。一条窄窄的通道和两边错落的木头房子，这大概就是常丰街的全貌。我刚到这里的时候，空气也很安静，没有雨水的声音和没有暴晒的日光。大概这就是最适合休息的地方吧。</p><p>　　找到了自己的下榻处，和老板打了个照面。老板一边办着入住就开始热情地希望向我告知这边的游玩途径。我笑了笑，提了提手中的箱子，“不妨晚一些吧。”房间有一种莫名的安静氛围，窗户对着常丰街的街道，可以看见下面的木雕店和旁边的咖啡馆（咖啡馆的风格有一些中意，或许是后面几日的选择。）房间够大，和前几日滞留上海的9平米小房间形成了鲜明的对比。一张标准的大床，一个看起来像是古董的木椅子和与之相称的木桌子。可能我唯一不太满意的就是这个地面，它看上去并不适合赤脚踏上去，粗粝的绒布。</p><p>　　洗了个澡，然后把衣服都晾了出来，我决定出去找一些什么吃的。</p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>　　打开门看见老板也正从二楼和我一起下去，就顺势聊了起来，一方面出于刚才拒绝了他好意的惭愧。我大致表达了自己曾经来过这里这个情况，并且希望在景区外能找到一些闲逛的去处。于是老板向我讲起了南北栅的情况，和零零星星分布在东栅景区之外却隶属于东栅的几个景点。这对于我确实是新鲜的收获，我向老板表达了谢意。</p><p>　　老板说着说着，便又蹦出了这样的句子，“我想你是学艺术的，大概对这些东西会有兴趣…”这样说也没错吧，大概没有什么人在惜时如金的时候在这样一个缓慢的镇子里住上四天，一般游客都是匆匆来去，绝不会在此地停留超过3日的。真要在这里停留的，或许就是专业所需或者有什么取材需要的工作吧。这也难怪，想着这个，我忘了向老板询问这附近有什么适合的店铺，就离开了住所。又不想折回去再麻烦一通老板，就打算自己探索了。</p><p>　　我对这个老街的好感是没错的。在里面多走走，越发觉得这个小巷的亲切，在这里住上十天半个月也无所谓，房费也算得上便宜，我这样想着。街道的石板路延展了开来，街道上也没有几个人，时间不算特别晚，但一些店铺已经开始搬动着木头板子准备着打烊了。</p><p>　　剩下的工作就是找到方便的大超市、早餐店和平时也能方便的一个人前往的饭馆。</p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>　　江南这边可能出于精致的讲究，或者外出打拼的个人的难处考虑，大多数小店都可以向他们要求小份菜。所谓小份菜，就是用一半的价格，吃分量缩小的饭菜，这样一个人也能勉强吃到三四样不同的菜。但类似白水鱼或者醋鱼这种看起来没法折中的菜，要求小份菜自然是很不合理的，这可能就是一个人旅游的难处之一了。尽管在江南这样要求似乎并不少见，景区如何运作也不可得知：只能撞撞运气。</p><p>　　在美团上看到了一家店铺，就在附近，便决定过去看看。我简单地向老板阐述了一下小份菜的要求。老板说现在人比较少（得益于我吃晚饭时间比较早），这样的要求自然合理，并向我重申了一些菜没办法做成小份的。这样就已经很好了，于是我点了两菜一汤，然后对着门外开始发呆。老板后面端上来菜，说这些小份菜收款的时候半价就好了，以及我点了两个带有酸菜的菜，老板考虑了一下给我换了些配菜。我自然表示感激，端上来的菜基本上都不像是小份菜，大概老板告诉我这是普通的一道菜我也并不会吃惊。</p><p>　　菜的味道很一般，看不出有什么特色，大概就是最基础的家常菜罢了。吃罢结账，老板表示美团有一些抵价券。但即使这样吃一顿，开销还是不算小的。在预期之内的结果，于是我就这样开始了我的探索。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路边风尘故事（其二）</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　好像确实是毕业了。久违地打开朋友圈，一地的以告别为主题的伤感图片和文字。尽管搬出了寝室，但由于领不到毕业证，需要在上海停留一段时间（或许我自己也想在这里呆一会吧）。感觉是一个没什么实感的东西，只是一堆琐碎。</p><a id="more"></a>  <h3 id="丁字路口"><a href="#丁字路口" class="headerlink" title="丁字路口"></a>丁字路口</h3><p>　　大概是傍晚的时候，我沿着光华大道一直走到了校训墙。在这条道路上，有一个丁字路口。我站在其中一个路口A上，看见路口B和路口C各走来一个人。路口B的男生和路口C的女生，在这个交汇的地方，拥抱在了一起，好像咬着耳朵说了些什么，路口B的男生走向了路口A，路口C的女生走向了路口B。我检查了一下这里是不是有什么摄像机记录着这一幕，用来作为什么毕业照片或者毕业MV。但没有，于是我从路口A走向了路口B。</p><h3 id="割手指饭桌"><a href="#割手指饭桌" class="headerlink" title="割手指饭桌"></a>割手指饭桌</h3><p>　　某一顿散伙晚饭，同学A提出在等菜的时候可以玩割手指游戏。我既不想参加这样的游戏，又找不到理由退出/离开。我看着热火朝天的游戏逐渐地走向安静，中间提问题的同学积极性逐渐下滑，手机回到了他们的手上。但这个游戏却可以顽强地一直进行下去，一直进行到了这顿饭的结局。割手指的游戏本身是个消磨时间的工具，手机是如此，饭局也是如此，酒肉朋友也是如此。</p><h3 id="不完备定理"><a href="#不完备定理" class="headerlink" title="不完备定理"></a>不完备定理</h3><p>　　从一顿饭离开，和同学C一起回寝室。路上不知道该聊些什么，于是搬出了不完备性定理，提到了形式系统和真值系统，希尔伯特和哥德尔。为什么要说这些我也并不清楚，应该是出于某种保护，宁静的空气对人体有害。但说着这些的时候我除了思考这些问题之外，什么也没有想。或许这是另一种宁静，属于现代人的冥想。在这个问题还没有解释清楚的时候，我们来到了寝室的门前。</p><h3 id="踏破铁鞋无觅处"><a href="#踏破铁鞋无觅处" class="headerlink" title="踏破铁鞋无觅处"></a>踏破铁鞋无觅处</h3><p>　　花了三天时间把寝室数年的东西打包到了五个箱子和一个蛇皮袋中。我收藏的书、收到的零零散散的礼物、一些没什么用但又不忍扔掉的物件。我接了个拖车把所有的箱子都运到了寝室的门前，便去寻找校内运毕业行李的电动三轮。我照着记忆四处搜索着，但一无所获。商量的一起运东西的时间快到了，于是我拿出手机打算给室友发一个微信，才发现室友打了个微信电话过来，说是运行李的三轮到了门口。</p><h3 id="一张纸"><a href="#一张纸" class="headerlink" title="一张纸"></a>一张纸</h3><p>　　据说在转户口的时候，发下来的是一张名为户籍转移的纸。这张纸如果因为什么原因遗失了，人就会变成黑户。人的地位就是这张纸上体现的。和它相当的是另一张名为调档函的纸，凭着这张纸，标记着我的档案会从一个地方抵达另一个地方，如果它指向了一个错误的方向，那么人也就抵达了错误的方向。和它地位相当的是一包名为档案的纸，上面记着这个人的大部分社会属性，掉了这包纸，人的社会意味大概会损失大半。于是我想起之前的一个想法，如果在某个时间点，两个人交换了一切证明身份的东西，那么之后，这两个人就成为了对方。</p><h3 id="飘忽不定"><a href="#飘忽不定" class="headerlink" title="飘忽不定"></a>飘忽不定</h3><p>　　几乎没有什么东西是确定的。我所希望确定的一切都悬在空中，但时间在切实地移动，一个个事件也在切实地发生。我所希望确定的东西，与所有人希望确定的东西并不相同，反之亦然。于是交集的发生只来源于凑巧，而非其他。于是将来的一切都飘忽不定，不论承载着多大的希望。而一些确定的事物，在我们知道它能被确定的时候，就不再抱有什么希望了。</p><h3 id="衣架空荡荡"><a href="#衣架空荡荡" class="headerlink" title="衣架空荡荡"></a>衣架空荡荡</h3><p>　　由于在搬寝室的前一天我洗了不少衣服，想着能用空调的除湿吹干，然事与愿违。于是这些衣服一直在衣架上，挂在了寝室的两张空床和我自己的床上面的床沿上。当所有室友都搬出了这个房间后，房间里只剩下四张空床和三排挂着衣服的衣架。我收下了这些衣架上的衣服并放进了箱子里，然后这些床上只剩下了这些衣架作为装饰。这些衣架我带不走了，它们会一直待在这里。衣架看着我关上了灯，并关上了门。从此衣架再也没有见过我。</p><h3 id="人生赢家饭桌"><a href="#人生赢家饭桌" class="headerlink" title="人生赢家饭桌"></a>人生赢家饭桌</h3><p>　　某一顿散伙晚饭，一桌8个人，其中4位是认识三年的大学同学。剩下3位是其中三位大学同学的男女朋友，另一个同学的女朋友则并不在场。席间讨论了一些很高瞻远瞩的话题，比如之后的规划或者一些与成家立业相关的事情。我表现得应该算是自然，但一些违和感让我格格不入。以后我就会面临这样的事情，我的朋友都有了自己新的亲人，而我将笑着参加他们的宴会。在宴会结束的时候，撑着我自己的伞回到我出发的地方。</p><h3 id="星空咖啡厅"><a href="#星空咖啡厅" class="headerlink" title="星空咖啡厅"></a>星空咖啡厅</h3><p>　　每一次在光华13楼参加各种仪式的时候，就会从这层楼中间挖空的区域看到14楼上咖啡厅的样子。我时常看到星空咖啡厅举办各种大咖讲座的通告，却一次都没有去过。我从开学就一直知道这个地方，却从来也没有上去过。于是在某日我路过光华楼的时候，问同伴，这个楼它周末开吗？快到毕业了，我还没上去坐过，好像也只有周末有时间了。同学说周末它开，好歹是个需要赚钱的店铺。我点头对这个回答表示同意，但到了最后也没有上去。</p><h3 id="一时兴起"><a href="#一时兴起" class="headerlink" title="一时兴起"></a>一时兴起</h3><p>　　到了晚上的时候，一时兴起把自己多年没换过的头像换了。没有什么特别的动机，只是觉得好像应该这样做，大概就是所谓的“一时兴起”。简单地处理了一下图片，然后放在更换头像的选项那里仔细看了几番，后面又谨小慎微地调整了几次，最后换上了新的头像。第二天就换回来，这是放上头像的时候的想法。第二天遇到了三三两两的老友来问我换头像的动机，我只能答道，大概是“一时兴起”。但我并不相信自己的答案，“一时兴起”，只是对自己不够了解的说辞罢了。我知道这背后有一个逻辑，却不能把它指明；就如同有些陈年烂账，我对它们无能为力。但我如约在第二天把它换了回来。</p><h3 id="失去目标的话"><a href="#失去目标的话" class="headerlink" title="失去目标的话"></a>失去目标的话</h3><p>　　在离开寝室的时候，想给宿舍楼的阿姨打一个招呼。一方面告诉对方自己离开了，并希望如果寝室发现什么重要的东西能够代自己稍加保管；另一方面希望借此机会对对方表示感激，尽基本礼仪。我拖着我的箱子来到了门口，在这里看了看宿管房间的窗户，里面并没有坐着人，只剩下一张空椅子。我在这里等了一会，也还是没有等到阿姨的到来。于是我拖着我的箱子离开了大门，并从此丧失了说出我方才构思的那段话的机会。以这种方式失去机会的话有很多，但我不觉得难过，只是礼仪未尽。</p><h3 id="耳机少年"><a href="#耳机少年" class="headerlink" title="耳机少年"></a>耳机少年</h3><p>　　在全家遇到了当年读书会的书友，也是C的室友，大概一个月没见到了。这么说起，读书会的书友，当年嘻嘻哈哈一起读书，自从因为两个成员前往新加坡交换就停止了规律活动，到最后也没能恢复，其中的不少成员就再也没有见过一次。这个同学上一次见到我还向我问起C的情况，这一次我向他打招呼，没有得到回应。我想他大概戴着耳机，没有听到我喊他的声音。他从我旁边擦肩走过去了，大概之后也没有打招呼的机会。</p><h3 id="情感丰富与否"><a href="#情感丰富与否" class="headerlink" title="情感丰富与否"></a>情感丰富与否</h3><p>　　一日聊天，H说“感觉你在某些关乎情感和态度的评价上总是显得过于淡漠了，但你自己或许并没有到那个程度”。我希望是这样，也或许我抱着一些无关紧要的却丰富的情感，却同时遗失了许多。这大概不是冷漠的问题，而是对于感情的认识的问题，就如同很早以前X说的“你对外太过理性，对内却很感性”之类的判断。我总期待波澜壮阔的生活的到来，却又为此感到疲惫。期待本身在满足的时候就被消灭掉了，只剩下波澜壮阔对于生活精力的消耗。</p><h3 id="对“路”意象的痴迷"><a href="#对“路”意象的痴迷" class="headerlink" title="对“路”意象的痴迷"></a>对“路”意象的痴迷</h3><p>　　感觉最近走在路上听音乐，大概都会逐渐在脑海里浮现出一个“路”的形象。我不能说清这个路通向哪里，也不知道路上行走的是什么。只是存在这样的一条路在脑海中，通往什么地方。然后产生了类似于“这适合在路上听”或者“这个问题适合在路上思考”这样的想法。“路”究竟是一个行为，还是一个状态都是一个难以分辨的问题。只有“路”的存在本身是切实的。</p><h3 id="退休生活饭桌"><a href="#退休生活饭桌" class="headerlink" title="退休生活饭桌"></a>退休生活饭桌</h3><p>　　某一顿散伙晚饭，桌上聊着聊着，提到了退休生活的事情。发起者是一对相处了不少时间的情侣，大概是说之后是做什么，比如旅行之类的。坐我左边的同学表示自己之后想要钓鱼。我自己思考了一小段时间，得到了一个结论，危险但确实的结论。我说了声抱歉后离开了餐桌，把这个想法堵在了自己的脑子里，它绝不应该在空气中传播，尤其是这样一个充满希望的餐桌。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四日记（其四）</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　每到这个时候我就会搬出我的“巧克力论述”。所谓美好的事物或者别的美好的事情，其“美好”的意义往往是停留在其发生或者被拥有之前的。就如同一块巧克力的美妙之处就在于其被吃下的时候产生的口感之间的差异，尽管是同一个品牌的巧克力，也会存在些微的不同。这个体验本身是美丽的，并只属于这一刻。在这块巧克力被真正吃下之前，它存在的无数可能性在被吞下的这一刻就消失殆尽了。于是伴随的期望、好奇以及兴奋也会在这个时候烟消云散。这颇有一些放烟花的意思，所以这个论述也可以被称为“烟花论述”。</p><a id="more"></a>  <h2 id="gt"><a href="#gt" class="headerlink" title="-&gt;|"></a>-&gt;|</h2><p>　　尽管6月20日这天，如同它之前的几天那般同样被列入了“四日”的范围，实际上这天发生的事情相当的有限。除去上午可有可无的思源实践活动的总结会（自己的工作也在两天前完成了），就只剩晚上的毕业晚会和之前的准备。毕业晚会本身很难说收到了什么期待，倒不如说因为毕业晚会组织者对于门票发放的方法考虑得很不周全，导致没有获得入场券的同学颇为愤懑，以此获得了关注度。但无论如何，假如毕业晚会具有“大学阶段最为重要的晚会”这样的名号，我认为是算不上夸张的。开学典礼就不会安排在晚上，它往往被放在充满希望的早晨；而毕业晚会放在晚上，颇有一种曲终人散的朦胧感觉。<br>　　类似这样的晚会，大概和我关系甚微，如果不是思源计划这个团体申报了红毯资格，我怕是也没有多大兴致去现场观看。之前某次毕业歌会的时候，我正在会堂上一楼自习，听得下面一阵响动。后面看了看微信的消息，发现思源的同学在这个活动里竟自发地聚集了小一半，坐在广阶上拍照。当时结束了自习，没有特别的想过去绕路打一个招呼的想法，径就自回了寝室。<br>　　然而这一次的晚会，由于和自己产生了纠葛，自己也不得不怀有某种期待来参加这样的活动。这个红毯资格和一系列准备过程冗杂且漫长，尤其是拉票环节，时间跨度很大，而且每天都要填写。连续填了几天后，莫名的有一种乐趣在其中：看着团队名次的上涨和下降，猜想在这一日之内发生的事情，以及谁在为此做出努力。在基本确定获得毕业红毯资格之后，团队就又开始张罗礼服、化妆等等问题。是与毕业晚会相称的阵势。<br>　　整个过程中，我大概就作为参与者，被安排到了什么样的工作就来者不拒，但其实也并没有我什么工作。无非就是先行拿一下钥匙或者衣服，开一下化妆间这样的小事。零零碎碎。不过前几日的工作处理得还算妥当，我终于找到了机会检查前天送达的新电脑并做出一些调试。中午去本部取了钥匙，然后移动到咖啡厅等衣服，之后去南区宿舍开了化妆室（其实是复旦学生会会议室）的门，锁了门后回到了房间。估摸着时间快到的时候，就又前往了化妆室。<br>　　现在时间是3点，和我之前预计的时间一样。我打开窗户透透气，找了长桌最靠里的一把椅子坐下，掏出电脑开始记录这四天的经历。大概过了有一个小时，两个同学才出现在了我的视野里。其中Z掏出了教材开始复习考试，L则取出了以《宝石商人》为首的一系列桌游。巧在前日刚好H也向我说起《宝石商人》的事，不免觉得巧合，于是颇为主动的要来《宝石商人》的规则书。后面又操练了一轮，大败。这样没多久，第一批女同学抵达了化妆间。没什么疑问，这个房间是这些女性同胞的主场。但不知不觉到了饭点，几位女同学又提出自己带的化妆东西少了，于是便商量了吃饭结束再化妆。于是拉拉杂杂的一票人又前往了食堂。<br>　　之后，我以取西装为由离开了队伍。待我穿好衣服重新出现在化妆间的时候，整个房间里分了好几簇化着妆。剩下我尴尬的站在门口。这个时候J过来，小声问我要不要化妆。我本来以为她是在问我“是否具有意愿”的这个问题，大概一刻钟之后才意识到，她其实在问“是否需要她帮忙”这个问题。中间的一刻钟实在是颇为尴尬，但这样的尴尬是我在我理解这个问题的意思之后才意识到的。<br>　　按照整个活动中秉持的态度，我谦顺地接受了这样的安排，坐在了一个椅子上，回想着自己曾经化妆的经历，感觉到一些软硬不同的刷子在我脸上蹭来蹭去。J向来是一个颇为温柔的同学，这个特点从刚才那个不明不白的问题就能看出来。大概是小心翼翼，又担心会遇到什么尴尬的问题，又考虑了一番才问出来的。我应该是坏了她的心意；这个特征从她打粉底这个过程也能很清楚地认识到。我对于化妆是一窍不通，但我听到旁边的另一位化妆师F喊道，你这个太轻了，重一些。化妆结束去卫生间的时候，不免好奇地往镜子里面看。规整清秀，以至于和我日常的形象似乎背道而驰。看到这样的画面，我脑中就只剩下“牛郎”这样的词汇来嘲讽自己。大概也是这个时候，进入会场的时候到了。</p><h2 id="gt-lt"><a href="#gt-lt" class="headerlink" title="&gt;|&lt;"></a>&gt;|&lt;</h2><p>　　尽管在此之前，花费了大量的时间来筹备策划，实际我们登场的时间是非常短的。从入场到离场，加起来也不过3分钟。在聚光灯下的时间也就是几十秒。进入会场之前有一大段时间是在会场外等候，然后需要排成两两一对的队列往里面依次走。由于思源众人都打扮得周整，不免产生了扎堆拍照的想法。三三两两，七七八八的人聚在一起拍照。也有如同集邮一般开始挨着挨着单人合照的同学。<br>　　类似这样的场合，之前已经经历过了。在几天前学士服拍照的时候就是如此。拍照这样的活动，在我意识到它的意义甚微的时候，就呈现出了消极的态度：假若没有人找我合影，那我也不会有动力找其他人合影。有些被要求合影的时候也会悄悄地避让开来，或者藏到队伍地后面隐秘的位置。这样不太正式的合照里，大约是没有我的位置的，我对这样的现状也颇为满意。这大概又是一种什么仪式一样的东西，好像需要这张照片才能证明这两个人曾经是朋友，有说过话有谈过心。当然，照片证明不了这个。我自觉地溜到了一边，和另一位同学看着会场里面的转播。<br>　　然而一些乐于撺掇这样的事情的同学最终还是会找到我这样的拍照消极分子并试图合影。这个时候我就会发现自己完全不会拍照这样的尴尬。无论是找到一个合适的站姿还是一个合适的表情，都是一件异常困难的事情。于是我在拍照的时候最常听见的指责就是，你表情太严肃了。“你表情太严肃了”，是一个玩笑一样的指责，但确实令人无所适从。这是我没有学习过的东西，或者已经遗忘的东西，是一种高超的技术，且不能被我掌握。这种时候尴尬的微笑只会让场合更加尴尬，于是最终这些合照里就留下了一群灿烂的笑脸和一张铁板一样的面无表情的脸。<br>　　整个走红毯（实则是蓝色地毯）的时间非常短：从会场的一个角落出发，走一个直线抵达会场长轴的中点，在一个签字版上留下自己的名字，然后沿短轴走到终点，再完成另一半长轴的距离，就走到了舞台上。然后站在一个向日葵花插满的木栅栏前面站定，等着主持人与团体发言人互动，结束后从花墙上取出一朵花，就可以下场了。简洁、流程化，无可指摘。<br>　　现在事情办完了，7点，只剩下坐在那里，看完整场晚会就可以结束了我的一天。在我离开了会场来到等候室的时候，不出意料的，三三两两的拍照活动又开始了。已经尽了拍照义务的我发现了这样的情况，就和另一位同学悄悄又溜进了会场，在内池里找到了一个空椅子坐下了。后面才发现这个是晚会预留给鼎鼎大名的红毯嘉宾“老番茄”的座位，我发现了这样的事实后，把它发给了一个自称为老番茄粉丝的同学。她看起来很感兴趣。这一系列处理结束，我可以安心地观看节目了。节目整体水准很高，应该是各个社团拿出的看家本领，舞蹈、相声、魔术，各种充满活力和热情的节目穿插着一些刻画校园生活的煽情短剧。不错的安排，尽管中庸却仍可以让人满意。<br>　　之后，我离开了会场。十点一刻了。这个时候已经不太有拍照的人了。想着我的钥匙要还回去，于是便和一同看晚会的同学告了别去本部还钥匙。这个时候腿上的伤才渐渐地有了感觉，像是汗浸到了伤口的一种轻微的刺痛。不至于走不了路，但或许有一些歪歪扭扭。<br>　　按照约定的十点半，我抵达了交接钥匙的位置。对交接钥匙的同学说了几句感谢的话，但对方看起来匆匆忙忙，接了我的钥匙就立刻离开了，也不确定我表达感谢的话被听到没有。但总之是客套话，不是重要的事情。沿着来的路又回南区，在经院校门遇到了两位思源同学，她们问我为什么这个点在这个方向走，我极为简单地回答了我去还钥匙，就道了别接着前进。大家都急着回到终点去，这样的时刻问什么问题大概都是一种客套产生的惯性，没有人关心回答的问题。后面又在南区校门遇到了思源的辅导员和另外几位思源同学，先说了句“Hello”，又说了句“Bye”，就接着赶我的路了。我隐隐约约听见后面的嘻嘻哈哈，仿佛是在重复我的这两句话。</p><h2 id="lt"><a href="#lt" class="headerlink" title="|&lt;-"></a>|&lt;-</h2><p>　　于是这样艰难的四天结束了。堆满的日程也没有产生什么超出预计的事件，摔伤的左手左脚添了不少乱，但对于结果并没有产生什么影响。这或许就是大学生涯的最后一次动乱，琐碎、复杂、纯粹又无趣的四日，连上四日之前的16日和之后21日的两次考试，构成了一个完整的生活，距离离校也只剩下一周。这段时间见到了之前见了很多见过很多次，但或许之后再不会遇见的人物。但没有什么道别的行为，我大概是不疲于道别的，只是觉得索然无味。<br>　　这样的场景会让人突然想起，大学生活似乎就快要画上了句号，也就是这样的时候才觉得有些落寞的情绪。对于大学生涯的留念几乎是不存在的，我在这四年间没有收获什么东西，反而遗失了不少，思维往之前倒退了一些。盲目执拗的往前走，看起来收获了些表面风光，但自己是清楚两手空空的事实。使人感到落寞的是四年虚度的光阴，并且清楚这四年不会再回来了。所谓青春年华，似乎从来没有开始过，就再也没有出现的机会。<br>　　现在想来，我漠视了太多的东西，把许多东西挂上了“无趣”的名号并与它们擦肩而过。这不是令人后悔的东西，只是暗示了另一种生活方式的可能性，即使是我永不会踏上的道路。人看起来是善变的生物，实际上却不会发生什么变化。说到底，“你真是度过了一个非常无趣的大学生活。”这样的指责，在一切发生之前我就应该心知肚明。一直拖到快结束的时候才这样指责自己，实际是种安慰罢了。<br>　　我或许羡慕过那些风光无限、积极而充满变动的生活，但最后还是会回到名为“无趣”的道路上。另一条道路只是另一种无趣——这也是我清楚知道的事实。我期待的或许不是另一条道路上存在的可能性，而只是在跨越道路间存在的那一瞬间的变化，就像咬下一块巧克力的第一口，和烟花炸开的那一帧的画面。跨越前与跨越后的“无趣”形式的差异，才是跨越这个行为“有趣”之所在。<br>　　句号。</p><p>　　<strong>后记</strong>：关于《四日记》，大概没有明确的写作目的。只是类似拍摄照片一样的想法，希望把大四生活最后的一段记录下来：混乱、喧嚣与烦躁的大学生涯（尽管大多数时候它都不是这样的姿态）。即本文的创作完全是即兴的、琐碎的，大抵只是用为留念的东西。希望把它作为日志或者大学生活的缩影之类的想法也是不可行的；它显得太片面了。但大概能够留住大学里的一些东西，并显然是“大学”的一些东西。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四日记（其一）</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　虽然在约定的时候看起来宽裕的时间，临到头来还是会觉得捉襟见肘。本来考试后异常闲暇的时间，现在看来也密密麻麻地堆起了各种各样的事情。当然占用这些时间的包括这个约定本身。</p><a id="more"></a>  <h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>　　今天有三个饭局。<br>　　早上的饭局，其实只是一顿便饭，定在大学路。原意是希望带来上海少的H和R感受一下上海本土的早饭风格，但后面想想类似粢饭团、老鸭粉丝汤之类的东西，我并不清楚附近有什幺小店卖的出色。最后仔细想想还是定在了苏式点心店，也是我去过几次的一家。尽管找不着太沪式的点心，但稍稍猎奇一下还是可以。<br>　　中午的饭局是稍小一点的那个，定在南京路。这本来是只有四个人的饭局，本意是给X在上海火车站接风，然后方便下午的行程一起行动而排入日程的。然而随着时间的推移，这个饭局参加的人数逐渐增多，在饭局当日前又加入了两三位，当日又加入了两位，让最后实际参加的人数涨到了8个人。这种奇妙的发展，导致其人员构成与晚上那顿饭局就高度重合了，确实是意料之外的事情。<br>　　晚上的饭局人数稍多一些，定在五角场，基本上五角场周围一圈学校的老班级人物都出现了。这顿饭从计划开始就没有变化，并且座位也在前一天就订好了，属于完全不容忍变化的饭局。<br>　　除此之外是上海点心及天文馆的行程。</p><h2 id="早饭"><a href="#早饭" class="headerlink" title="早饭"></a>早饭</h2><p>　　大学路是我比较喜欢的地方。里面的店铺更新的速度很快，尤其是一楼的，大体一个学期就会更新好多家。二三楼等地方则更加稳定。大学路一楼的店铺大多是酒吧，掺杂着一些点心铺子、饭馆、咖啡店，和一些猎奇的小店，例如以动漫作为主题的Animate和一些网红店比如猫的天空城。临近着B站总部，这里掺杂有一些B站冠名的火锅和串串之类的东西。二楼则大多是饭馆，这里藏着一些贵而有格调或者便宜又朴素的小店，比如我喜欢的面馆、火锅店和寿司店就藏在这上面。不过这些店大多藏得深，也没有几块大招牌，每次发现一家新的好店的时候颇有寻宝的乐趣。三楼及更高就是一些娱乐设施和纹身店之类的东西了，是这数年间都不曾仔细考量过的部分。这条学校旁边的街活力且有一些趣味，周围的涂鸦和一些新潮的玩物，使得它周围的居民不得不被其魔力吸引而时不时来溜达一圈。<br>　　除了这条带着“大学路”名号的主街，它周围连着一大片店铺和商业区域。其东边的尽头是一个巨大的地下商场，大概大三左右的时间才竣工，以吃的为主，由于连着地铁站，在上下班时刻总是喧嚣不止。这条主街还牵扯着如同毛细血管的小街，并通往一些分叉。这里面照样找得到不错的东西，泰餐、新加坡餐、私房菜等比比皆是。<br>　　我将今日的早饭定在了这家店的尽头，一家叫“苏小柳”的苏杭点心店。虽说定在了这家店，实际我自己光顾的次数也不算多。不过幸好我每次到访都获得了不错的食物和体验，让我在这样尴尬的场合有一些可以推荐的地方。<br>　　早上我发现自己的电脑到了，于是选择先去取了电脑，使得作为东道主的我晚了一些时间。于是借这个契机，我发出了埋单的声明，以尽宾仪之礼。我照着自己的口味推荐了一些菜品，并按照他们的想法选择了一些，就简单地结束了这顿早饭。吃完已经九点三刻了。<br>　　苏杭点心胜在轻松简单的口感。和广式早茶不同，苏杭点心用得多的不是类似叉烧、粉蒸系列或者艇仔粥这样的油腻食物，而大多用酒酿、桂花、白面这样的组合。放在早上食用自然更加清新明快，但如若中午或者晚饭尝试它又会觉得违和，仿佛白饭没有搁置的地方，但不吃一些白饭又没有中国菜的氛围。这里面算得上相当油腻的是蟹粉灌汤包，但汤汁的鲜度和油腻程度压得相当好，足够厚的中性的面皮可以在诸多味道中周旋，获得较为恰当的口感。</p><h2 id="点心"><a href="#点心" class="headerlink" title="点心"></a>点心</h2><p>　　南京路，大概是上海最出名的步行街。其实这条街上是不太看得见上海繁华的气象的，这个气象得去外滩；这条街体现的是老上海的气象。这个占据市中心的街道中横列了很多老式的霓虹灯招牌，类似老字号眼镜店，糕点铺以及一些卖成品上海特色小吃的店都能在这里找到踪迹。但又不止这些东西，苹果华为三星在这里都有极大的门店，轻轻松松两三层的门面到处都是。甚至有一些完全想不到具有实体店存在的东西（比如m&amp;m的巧克力球体验店等等），在这里也是包下了两三层的门店。这里的门店大概给人一种即使不怎么盈利，也需要开在这里的感觉，是一种称为门面的东西。<br>　　南京路是一大块盘根错节的范围，与之相邻的一大串带有地名的路，如陕西路、四川路等等都是藏着老字号的地方。而那些驰名现在的流行商品或者奢侈品店，则需要去稍微远一些的陆家嘴。这些店放在这里略微有一些格格不入。<br>　　而我们想寻觅的上海点心，就可以在南京路附近的一家叫“老大昌”的西饼店中找到。说是上海点心，其实想找的只有名为“鲜肉月饼”这一种。鲜肉月饼，在我尝试过第一次之后就一直占据了我觉得最有趣的沪式点心的高位。以至在R和H实际到达这里以前，就已经听我谈起了数次这个朴素的点心。我不希望由于这个行为而大幅度拉高了对于它的评价，导致他们实际品尝的时候感觉到巨大的落差而失望。（过分拉高评价似乎是我推荐东西时的一个弊病。）<br>　　由于“老大昌”在上海有诸多分店，其实并不一定需要来淮海中路这个才能吃到这个月饼，倒不如说是因为午饭定在南京路，所以才从大学路起身往这里走。不过刚好这家似乎是一家历史颇为久远的店，有一些被张爱玲写进小说之类的奇闻异事。不过这些没什么考证的必要，实际我们关心的只有食物本身。尽管是老字号，糕点卖的很是平易近人，一个月饼5元，正常月饼大小，也是刚从烤箱中取出来的，装在一个小的纸袋子里。一人一个，回到店里坐下，我也开始吃自己的这一个。<br>　　尽管我极力推荐这个东西，距离我上一次吃已经有一些时候了。它的味道尽管令人印象深刻，果然还是模糊了一些。这样的糕点最奇特的地方就是它复杂的口感。月饼外面和普通月饼一样，包着那种薄脆的面皮，里面则是鲜肉肉饼。每一口可以刚好夹着两边薄脆的地方和中间的肉一同吃下去。这种感觉和那个从里到外都口感颇干偏硬的五仁月饼之类的不同，大概只有一小会会感受到脆硬的成分，然后就是鲜肉细腻柔软的口感。这个鲜肉大概如同鲜肉包子那样被酱油之类的调味料处理过，刚要咬下的时候就会产生的预感。不过还好这种感觉没有完全应验，对于一个大小月饼来说这种感觉是刚刚恰到好处的，当然也不可能会吃第二个。</p><h2 id="午饭-amp-天文馆"><a href="#午饭-amp-天文馆" class="headerlink" title="午饭 &amp; 天文馆"></a>午饭 &amp; 天文馆</h2><p>　　午饭原定是在南京路找一家“桂满陇”的分店。上海这里做江浙菜的很多，本帮菜的反而比较少。大部分江浙菜连锁店都是以江浙为主的，单纯的以本帮菜为主的我的印象里不太有。不巧H一直在念念有词，想吃熏鱼，不巧我以为熏鱼在江浙菜餐馆里应该都有，于是定下了桂满陇，然而拿到菜单的时候才发现这个店并没有熏鱼。这是诸多失误的其中一个。<br>　　桂满陇也是一家颇具有特色的店，它在江浙菜中的地位或许和海底捞在火锅店中的地位相似。尽管做菜不属于绝对一流的水准，但其独特的体验和各种氛围倒是处理得很好。店里面河上小船、岩上亭台都是饭桌，颇有江南味道。然而我们没有考虑到这家店排队的问题，8个人的饭局排队总是一个令人头疼的事：最开始我们前面只有一桌，排了四十分钟且，前面仍只有一桌，我们最后还是没有时间继续等下去。<br>　　后面换到了一家广西菜，虽不在最开始的计划之中，但这个店上菜速度够快且菜品质量适宜，或许之后有机会可以再度尝试一番。<br>　　下午的行程是上海科技馆，天文馆分馆。这个馆远在滴水湖，而且处在建造中的阶段。是R的父亲刚好在这里工作，我们才有一些机会进去浏览一番。天文馆内部的设计和构造舒适且现代，毫无疑问是我近几年看过的博物馆和科技感中效果最好的一个。以后或许会成为上海中小学生实践活动的重要参考浏览地点吧。<br>　　来回的地铁总时间大概在4小时，我们最后只留得了这不到二分之一的时间参观全馆，非常匆忙，也没能看到些什么东西，只能对其结构和内部的陈设赞不绝口。这一趟地铁时间也不算毫无益处，我终于搞清楚了上海野生博物馆在什么位置，或许过几日有拜访它的机会。</p><h2 id="晚饭"><a href="#晚饭" class="headerlink" title="晚饭"></a>晚饭</h2><p>　　晚饭定在五角场。这是上海的心脏之一，复旦等一系列学校周末的狂欢地点。其名为五角场，实则为五条街道的交界处，构成了五个角，每个角是一个商场。这五个商场以及其相邻的、离这个点稍远一些的别的商场连在一起构成了这个密集的商圈，囊括了现代城市几乎需要的所有物质需求。然而其本质是单调的。<br>　　晚饭定在一家新疆菜，名为“耶里夏丽”，它给我的第一印象是非常地嘈杂，甚至还有一些新疆女郎在其中舞蹈，锣鼓喧天，食物都不再安分。使我晚饭定在这里的，只是因为那种叫做“纳帕利勇”的糕点。由于预先定了位置（并且我也清楚这家店基本不需要定位置），我们直接入座了。别的菜都是按照习惯的点法点就行，例如新疆奶茶、炒蘑菇、牛羊肉这些自然是要点。不过重点果然还是那个纳帕利勇。<br>　　纳帕利勇是一种黄色长方体的糕点，像千层饼那样分了很多层，并紧实地被压在一起。刚拿出来的纳帕利勇应该是经过冰冻的，在保证口感松软的同时又不会过早变得粉而掉渣。这或许是一个奶制品，但奶的味道又不那么重，像是将汤圆面和冰淇淋混合压制在一起得到的食物，显然有什么在抑制奶味的发挥。有甜味但恰到好处。如同我喜欢的其他食物一样，它具有丰富的味道，里外温度的微妙差异和软硬的微妙差异都让每一口感觉丰富。并且在刚上桌后慢慢从低温度往高温度变化的过程，也让这道菜本身的质地在发生着轻微的改变。我个人是倾向于快速地把它解决掉，以保留其在低温下的美妙体验，但无论吃得多快都不能忽略温度对其先后味道造成的影响。每一次吃完都感觉心满意足，并等着不存在的第二个的到来。<br>　　至于饭桌上说了些什么，大抵就是些家常。谁谁之后去了哪里，这段时间近况如何，一些古老的笑话夹杂其间。说到底不如食物那么有趣。之后又三三两两地去大学路上兜兜转转，我推荐了一家甜品店。但由于时间已晚，这个店打烊了。就这样散漫的一边走一边聊，最后剩下的人就只有一起回南区宿舍的几个了。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四日记（其二）</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　骑车是便于思考问题的时候，尤其是加上一副耳机。有风的场合大多舒适，骑车也不存在别人向你搭话的可能，即使遇到熟人也能假装自己在专心地骑车而不去回应。车还很轻盈，与人笨重的双腿不同。车上的起起伏伏有一种流动的韵律在其中。于是我也习惯骑车不考虑骑车，要么看着路边的景色，要么想着自己的事情。</p><a id="more"></a>  <h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>　　每年到了这个时候就是梅雨时节，上海的天气一连数日灰沉，偶尔想起来了，就泼一些雨水下来。即便偶尔出一下太阳，也是那种快餐式的、毒辣的太阳，它露一个头，将地面上的水分纷纷蒸腾到了空气中，就心满意足地离开了。这样水汽不仅无法散去，甚至变得越发地厚重，日间行走在外面就如同披了件雨衣那样薄却又挡风的东西。这样的日子，衣服也是一连数日都不会晾干，甚至每日愈加潮湿；等到阴干的时候，如果照料不当，就会产生一些不悦的气味。<br>　　就是这样的天气，一些古朴的水泥地面会生出一些不明显但确实存在的苔。这些苔在一些红石砖路面上非常显眼，但在本来就灰绿灰绿的地面上就藏得很好。但这样的问题大概是不在我日常的考虑范围之内的，尽管我下意识地知道这样隐秘危险的存在。<br>　　于是在我前去租借学士服的时候，我驾驶着的自行车不知不觉移动到了这样一个危险的区域。在车轮打滑这个事件被意识到之前，人就已经摔在了地上。为了护住头和躯干，手肘和膝盖被蹭掉了一块。最后大概是左手支着地面阻止了进一步滚动，但这个时候人已经离车有两米远了。<br>　　或许有一个路边的同学恰好从体育馆的门出来，目击了这个尴尬场景的全过程。她走过来问需不需要帮忙，我说没事，并想要站起来。她后面又确认了几次不需要帮忙之后才晃晃悠悠地离开了。我大概站起来后，注意到周围可能有三三两两的人，但大多对这个事情不在意。我逐个检查了自己的伤势：尽管右手这些位置没有擦破皮，却也带上了地面的污渍；左手手肘和左边膝盖挂坏的一片已经开始往外面渗出液体，有些破烂地红了一片；麻烦的是左手，手腕和手臂的弯曲都停止了工作，随意朝着任何方向的弯曲都会一定程度地疼痛。<br>　　大概确定了一下伤势并大概清楚不成大碍之后，我就继续朝着原来的目的地前进了。不过现在我只能单边挎着包。距离约定的时间还有一刻钟，时间很充裕。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>　　目的地是一个叫做《上海双年展》的现代艺术展会，今年的主题是《水体（Water Body）》，既现代又不失趣味的主题。我之前做过一些工作，并判断了这是一个值得一去的展会，便向前来上海的R和H推荐了这个地方。今天一路同行者和前一日相同，R、H、X和我共四人。今天的安排并不复杂，就是上午看一个展，然后中午补上没有吃上的江沪菜即可。这一切看起来都很顺利，直到我们离开地铁之后，围着地图上指引的位置转了好几圈，我终于发现我搞错了展会举办的位置。看起来现在并没有时间前往实际展会举办的位置了，只好狼狈的在附近找了家哈根达斯随便点了些什么。实际也没能坐多少时间，就去了午饭的位置。午饭非常顺利，既没有排队，也没有点到雷区。借着席间的空隙我出来转了转，发现昨天我们选择的那家店今天的人很多，门前也排起了队。<br>　　队伍的长度和店铺的水平确实是没有相关关系的，或许只是第一个进入的人就决定了这一家店整天营业的情况。假设一家店最开始就收获了两波顾客，这或许对后面的顾客来说是不错的参考吧。难怪店铺非常注重“开张”之类的概念。如此，平时看起来聪明的选择人多的店这个行为看起来明智，实际上“顾客更多”这个事件含有的信息是有限的。就如同在前一天参观天文馆的时候，向导提到的科里奥利力的问题。决定厕所马桶漩涡方向的，大多不是玄乎的科里奥利力，而只是马桶的设计罢了。<br>　　事件的起因和结果并不存在必然的关系，或者说不够清晰而明确的对目标的考虑，会让这两个的关系越发地遥远。就像我们抱着消磨时间的想法去拜访双年展，并最终用哈根达斯收尾一样。类似这样荒诞的情况，并不是一个什么过错；或许更没有什么因果关系，而只是“恰好同时出现”罢了，至于我们遵循哪一个，就难以言明依据的是什么了。就如同早饭，尽管清晰地确定了以小杨生煎作为早饭，最终却由于小杨生煎并没有在那个时间开门而最终放弃了一样。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>　　大概在早上摔伤了之后，我就意识到这样的遭遇会来临。和校长拍照大概是需要稍微正式一点的吧，除了外面套着的学士服，还需要里面的深色长裤和有领浅色衬衫。从南京路回到了光华楼之后，遇到了一个思源的同学D，稍微聊了几句我才反应过来他已经穿好了。于是我说我得去换一下衣服。我大概提及了一下上午翻车的事情，但这个事情并不能成为一个反复讨论的话题，于是在我讲清楚早上发生了什么的时候，它就结束了。于是我拎着自己的学士服进了卫生间。<br>　　不出所料，这是一场灾难。即使是脱下衣服这个操作就足够令人苦恼；加上这一套小了一号的白色有领衬衫。顺便检查了一下衣服上的血迹，短袖的袖摆应该是蹭到了伤口许多次，挂着一些红褐色的污渍，短裤也是如此。伤口看起来形状规整了一些，但还是红色的一大块。小心地不撇着手又不刮着伤口的完成了着装之后，就已经流了不少的汉，头发又拧成一块。<br>　　终于快把这一部分昨晚的时候，我听见外面传来的声音：欢迎校长前来与毕业生合影。我以为时间到了，于是在笼上了学士服并不小心撇到了手的时候吸了口气。推开门出来。外面站着不少穿着硕士服、博士服的高材生，学士只占了很少一部分。在志和堂的中间放着一张一套桌椅，下面垫着一些红色的增高台子。校长穿着红彤彤又镶着金边的袍子坐在上面（我后面查了一下发现是校长服，竟然莫名地产生了一种崇敬的心理）。<br>　　下面蜿蜒地排着许多的人，右边有一个小桌子用来取照片。于是我才发现和校长合影这个活动似乎是排在这个尾巴后面就可以，于是我对于这个想象中的稀罕事的好奇烟消云散了。这个穿着校长服的校长，看起来更像是一个吉祥物，拨一拨他们头上的穗子微笑着和每一个上来的同学合影。一直到了后面，摄影的工作人员显然是手酸了，校长仍在兢兢业业地拨着穗子。<br>　　这个景象让我失了单独合影的兴致，于是一直等到了团体合影的时候，这个环节来了不少的院士，和校长坐在一排，校长旁边站着焦阳书记。但我最开始就发现的那个问题一直到了仪式结束都没能得到解释，为什么书记也穿着校长服。<br>　　其中排队等着拍照的时候，班长之一Y发现了我，她喊着，你为什么在这里，弄完了回去干活。干活。我想着我摔倒的时候脑子里面考虑的一大段日程表和完成的进度相关问题，答应了一声就回到了沉默。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>　　所谓干活，大概就是两个事情，都是围绕着第二天的班级毕业晚会展开的。一是其中热场游戏的设计和准备，二是有一个毕业晚会中的视频需要我整合一下。估摸着4至5小时工作量的东西。打开组织组的工作群想找几个帮手，但后面想起来之前的情况。人各有志，大家大概是对这个东西没有兴趣了吧，勉强起来效率也低下。于是我联系了一下住我寝室旁边的组员，约定了晚上一起准备这个游戏环节。这个视频我就打算一个人干完了。<br>　　并不算麻烦。但这样的事情，真正的麻烦并不在于静态的工作量，而是其中不断发生的变化。比如由于时间问题而去掉的部分，或者由于道具准备而需要调整的内容等等。过多的设计或者过少的设计在这个时间节点上来看都是一种麻烦事。但好歹有一位能商量的同学，推进起来并不算快。其实约定一位同学来帮忙的原因比这些都更加直观且必要：到了寝室刚刚坐下的我，打开电脑搜索一些资料的时候，发现自己的左手没法打字了。做视频输入量毕竟有限，一指禅自然可以解决，然而游戏规则和具体情况的准备就困难了不少。<br>　　事情做到一半，另一位班长联系我说需要写游戏部分串词，然而各种语焉不详。于是把这个任务推到了明天。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四日记（其三）</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/%E5%9B%9B%E6%97%A5%E8%AE%B0%EF%BC%88%E5%85%B6%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　在从一个什么地方开始，往寝室走的路途中总是适合浮想联翩。在这条我习惯一个人走的道路上，今日多了一个同行者。同行者是这几日的一个特征，但又和这个特征背离。同行者的存在构成了灾难的四日。</p><a id="more"></a>  <h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>　　刚刚结束了班级的毕业晚会，辅导员和一些同学开始了习惯性的合影留念。我想着自己的手伤和这几日煎熬般的疲倦，就偷偷地溜走了。我十分清楚自己如果不溜走将会面临如何的灾难：大概是一顿饭局。在饭局之前，大部分注重仪式感的男男女女需要先换下礼服，穿回朴素的服饰，然后洗一个澡，然后到饭店在稀稀落落地点菜；摄食时嘻嘻哈哈，恍惚间就到了凌晨。这是一个灾难的发展，但许多时候却不能避开。<br>　　我们不想这样做，但在大多数情况下，人们认为如此才是善解人意的。这样的饭局也不那么容易推开，于是合适的策略就是在发起者注意到之前就悄悄地离开这个地方。在回寝室的路上，我注意到了辅导员发给我的消息，问我晚上参不参加晚会结束后的聚餐，我用手伤为由婉拒了。<br>　　和我一起回去的是另一个计算机的同学L。这个同学素来寡言，但富于奇思妙想，确实是适合在回寝室的道路上聊天的对象。夜晚的道路上除了越来越大胆开放的情侣外没有什么人。于是我说起关于“仪式感”的话题。聊的并不是一些什么具体的内容，只是瞎调侃罢了，磨蹭完回寝室这一路的时间。免得可怕的沉默和尴尬蔓延得四处都是。路上消耗了一支雪糕，然后在楼下分开。然后我大概想到，L——尽管在大一大二经常见面，还合作完成了不少的工作——之后就去浙江工作了。或许这些不痛不痒的话，就是和这个大学期间关系还算可以的同学的告别了。“你真是度过了一个非常无趣的大学生活。”我想起了某一日我呵斥自己的话。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>　　我对于仪式向来是没有好感的。大概这种感觉在我看着刚刚同学铺好的红毯的时候就被注意到了，这个时候开始纷纷走进来一些穿着西装打着领带的同学。这个是我的同学吗？我这样想着。红毯是一个繁琐的流程，大概需要先在门口签字，领取一个带有唯一编号的且颜色不同的手环，然后沿着这个红毯，走到它的尽头在一个签名版上签字，和一个什么人合影，然后走到座位上。于是这条红毯上走过了许许多多衣冠楚楚的我不认识的人。大概这个时候我就感到了出奇的反胃。离开这里。<br>　　我走到外面，凉快了许多，也少了些不认识的同学。一条红毯顺着阶梯往下攀去，几个毕业晚会的负责人在踩着红毯，让它们平顺地贴在阶梯的角落里。这是一项颇有乐趣的工作，因为红毯是不会轻易地被征服的。它在地面上折来折去，赫然是倔强的东西。于是策划人拿来了拖把，用水的张力驯服了红毯。<br>　　在观赏这个的过程中，我找到了一块不错的石板。这个石板看起来工工整整，但下部其实是个锥形。踩上去的一瞬间，我以为我要失去重心，但很快又能稳住。这种危险却又能轻易解除危险的感觉实在是一种趣味，尤其在一个左手左脚都带着一大块擦伤的人而言。我在上面饶有兴趣地玩了不少地时间，看着他们一路铺到了这个旋梯的底部。<br>　　这个过程中又来了一些认识我的同学（且我也认识的），他们大多故作惊讶地问一问，你就穿这身参加晚会吗？我大概简单地回答一下，是的。有的时候我会额外说一句，并没有什么理由穿得周整，不是吗？大概这样就把这个话题打住了，他们也不再就这个问题询问。我就又能回到在石头上起起伏伏的乐趣中。</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>　　我拿着我室友的钥匙走到了物管去配一把新的。我一进门，物管的阿姨就狐疑地看着我。我说我是来配钥匙的，她问我是不是阿姨让来配的，我说是；她说是不是阿姨的钥匙，我说是；她说让我拿出钥匙，于是我把钥匙递给了她；她看了一眼说这个是阿姨的钥匙吗，我说不是，是我的室友的；她说为什么我刚才问你是不是阿姨的钥匙的时候，你说是阿姨的，我说是阿姨让我拿着这个钥匙来配的。我感觉她的眼睛盯着我，几乎不需要任何眼力就能知道她在怀疑她面前这个人说的话。她说，你几号楼的，什么房间，我如实回答了。她又问了一句，这个电话是可以打的哈。我感觉到她的眼神似乎是想帮助我，给我一个台阶下还是什么。可以，你打吧。<br>　　电话拨通了，不出意料，面前这位用上海话开始了速度极快的交流。我用右手抬着左手站在那里，把重心从右脚换到左脚又换回来。我感觉到怀疑和敌意的瓦解，也感觉到了从我心中涌起的不快。不快乃是罕见的东西。<br>　　随后她放下了电话，语气软化了许多。大抵是她们需要负责任啊之类的话，我也接受了她的观点，并说我会回去找阿姨拿她的钥匙来配锁。怀着我心中的不快，我带上了物管门的房间，谦恭有礼。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>　　校门前的红绿灯总是拦着人，这个时候就可以掏出手机看上两眼。同学D给我发来消息说，晚会负责人在活动地点找到一台钢琴，让他试试，看能不能加一个什么节目。但负责人们都不熟这个东西，让我去看看。我说好，我快到了。我难道不也是不懂的那一类吗？<br>　　坐在钢琴旁边，D开始了他的演奏。因为是我比较熟悉的曲子，所以各种差错和琴的缺陷都能听得出个七七八八。D的演奏经常错音，也会由于记不得谱子停顿几个瞬间。但大概这样的演奏就能对付不听古典的听众了吧，更何况这里的听众对于节目压根就没有兴趣，只有仪式本身才是重要的。于是我这样安慰他说，嗯，这样就可以了。琴的声音大小也挺不错，曲子的意境也很好，适合在毕业晚会上演出。他接受了我的观点。<br>　　实际演出的时候，D洋洋洒洒地介绍了莫扎特地生平，以及曲目创作的背景。但关于演奏我已经听了一下午了，实在提不起兴趣，除了在下台之后的D走到我的身边的时候，我做了个点赞的手势为他的节目表示鼓励。其实我更加宽慰的是，这个临时增加的节目，减少了不少我的工作量，因为他顶掉了一个本来需要我付出努力和设计的一个游戏环节。我弄不清楚为什么一个大家只关心“仪式”本身的活动还需要一些别的好像有趣味的什么东西作为辅助，在我看来大家都只是想早早完结然后两两三三拍照罢了。太费解了。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>　　看着一批又一批上去交换礼物的人，我看着自己手上的礼物。由于我作为晚会的负责人之一，清楚地知道每一个流程的效果，我很明白只要我不去领取那个带有编号的手环，我的礼物就不需要送给任何人，我也不会收取到任何人的礼物。于是我没有去领取那个手环，并握着自己的礼物。这个问题是我思考过的，然而在这批人中，我没有想送礼物的对象，也没有想收取礼物的来源，让我自己持有自己的礼物吧。没有人会注意到这个人没有参与这个活动，也不会有人为没有收到我的礼物而遗憾。<br>　　于是我站在整个会场的最后面，看着一批批的人物上去交换自己手上的礼物，感受到了这个场合难得的舒适。或许我需要对一个未知的礼物好奇还是什么，但没有什么意义，无趣的事实是不会改变的。紧接着的辅导员致辞，辅导员提到了慎独这个概念。像我这样知道规则而做出逃避行为的人，大概就不符合这一条了吧。<br>　　最后我保住了自己的礼物，并将它送给了自己，我不由得感受到了宽慰与满足。然后决定飞似的逃离这里。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>No alarms and no surprises</title>
      <link href="/2021/essay/%E6%89%8B%E8%AE%B0/No%20alarms%20and%20no%20surprises/"/>
      <url>/2021/essay/%E6%89%8B%E8%AE%B0/No%20alarms%20and%20no%20surprises/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-qPZCIRwg" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="25842622" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><blockquote><p>Such a pretty house, such a pretty garden </p><p>No alarms and no surprises</p><p>No alarms and no surprises</p><p>No alarms and no surprises, please</p></blockquote><a id="more"></a>  <p>　　大概坐在光华楼最好的地方，就是可以拥有没有房屋遮蔽的视野。在光华楼中央大厅，有一些静谧的地方，大概只有经常来的人才会发现，比如我现在坐着的这一个。说是静谧，其实言重了一些，只是看起来平时不太会有人路过的位置，周末尤其如此。在浮夸的螺旋阶梯组成的三楼之上是第四层楼，这层楼平时是给会议用的，但大多数时候并没有人来。连接光华楼东西两座辅楼的通道，就构成了这个隐秘的位置。因为大多数学生不会去往东辅楼的那边，东辅楼的老师也不会前往西辅楼的那边，加上这层楼本就意义不明，所以这个走廊没有什么人流。</p><p>　　即使是在这个没有什么人流的地方，也还是摆放了不少的椅子，像是火车站那样子的钢椅子，三个一组并列着摆了一排。两排椅子相对而放，中间有一张非常矮的桌子，大概除了放一些东西就不能提供别的用途了。大概这样三个单元一组的结构，在这个走廊重复了四五次，每重复两次就被一个巨大的承重柱阻隔，构成了一个没有人流、视线隐秘但又绝对开放的空间。这样的场合就是理想的读书地点，于是我经常呆在这里。这里除了偶尔响起的高跟鞋敲击地板的声音、保洁人员收拾清洁工具的声音之外，什么声音都不会有。偶尔能听到一个仿佛要去日本留学的男同学大声嚷嚷着和自己的父母打电话，就在这个走廊尽头拐角的一个小晒台上。但除此之外都很安静。</p><p>　　这个地方还有一个令人满意的地方，它有一个可以往上望去，看见天空的大窗户。尽管光华楼里窗户很多，从地面延伸到天花板，但这样只让人往上看的窗户，这四层楼中只有这一层有。比如现在，我能看见外面堆积的乌紫色乌云，我就知道大概要下雨了。有了这个天空的帮助，人就很容易在这里发呆。那边的云并不会特别快地移动，在这个安静的、没有动作的环境中，会觉得时间的观念都发生了变化。于是很容易瞪着那个云看，以为自己想着什么心事一般，长时间木讷的看着外面。换做什么路过的人看见这样的场景，大概会以为这个发呆者是在幻想着成为飞鸟的吧，但也不是如此（飞鸟让人羡慕）。</p><p>　　尽管我经常来这个区域，这个区域中却并没有发生过什么事情。在这个区域里，只有书和音乐，和他们代表的文字、音符和懒散的午后时光，就像现在的我这般。这个地方不适合看日落，这种诡异对时间的感知会令人感觉到难受，以为外面经历了什么微妙却厉害的变故，实际上却只是天黑了而已。</p><p>　　于是像往常一样，我坐在这里，看着我手上的书。这样的场合，即使我不出现在这个空间，我也可以用我的回忆和想象构筑起一切：这里的自动贩卖机，这几把冬天寒冷夏天舒适的钢铁椅子以及这个角度美妙的窗户。它们不会发生任何变化，也不会像二楼或者三楼那样受到什么学校的宣传影响而突然变了长相，因为这是被遗忘的地方。于是其它的一切都和我的预想一样，这里发生的事情。这里即将展开的对话，以及我什么时候离开这里，这些东西都是在我来之前就定下的，甚至是在我发现这个空间的时候就定下的。我只是这个空间的践行者，作为它的一部分出现在这里，并且很快也要完成自己的使命，再也没有造访此地的机会。</p><p>　　想要一一讲述这个空间里发生的事情是非常困难的，尽管它们看起来在我的预期之内，且一成不变。大概在这里看了会书，忘了说，现在已经是我吃完了晚饭，我又一次坐在这这里。看着外面的云更加厚重了，夜色也开始笼上来，我于是决定离开这个空间。收拾好我的东西后我就沿着那浮夸的旋转楼梯一步步往下走。二楼三楼这个时候本来应该有不少人的，但不知道是周二的缘故还是儿童节的缘故，空了一些位置。大概离开那个空间，就会出现一些我不知道且不能预测的情况发生，然后会加以思考，这后面的动机是什么。最后发现只是胡思乱想，这种东西永远也没法知道。</p><p>　　本来这个时候，我应该选一辆看起来精神的共享单车，就这样回去了。但我决定这里走一截，如果傍晚回去的话，晚上就没有散步的机会了。快要下雨的天，空气和温度都很舒服。总觉得这样子，就到了什么东西快要结束的时候，并和它开始的时候有些许的不同。路边的叶子沙沙地响起来，就会有一种什么东西在喊叫的错觉。能够保持不变的，只有那一小片空间，和暂时处在那个空间中看书的人；在这个以外的所有东西，都发生着变化，或快或慢的。</p><p>　　理解和接受变化无疑是困难的事情，任何变化都是不稳定的要素。于是我开始练习解决这个问题，但当真正的变化发生的时候，才发现这是不能练习获得的能力。破碎的东西和修复的东西，切断的东西和联结的东西，灰色的东西和彩色的东西，都在我呆在那个静谧的空间的时候擅自发生了变化。它们等着我离开那个空间，然后告诉我一些事实，但它们不会停止。</p><p>　　今天的道路也和往日一样，自行车道上是几辆自行车和上面的几个学生。天看起来想要下一些雨，但最后没下下来。</p><p>　　后记：大概就是一些琐碎的想法吧，作为对最近发生或者得知的一切事情的无趣也无力的回应，除此之外没什么特别的。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不完整道路</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E4%B8%8D%E5%AE%8C%E6%95%B4%E9%81%93%E8%B7%AF/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E4%B8%8D%E5%AE%8C%E6%95%B4%E9%81%93%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　夏天，我已在这个房间里呆了好几天了，并打算就这样呆下去。平时放下笔的时候，就望望窗外。在我房间可以看见的对面屋子的阳台上，放了一株植物。这株植物尽管长得繁茂，却从来没开过花。它坚韧地生长着，冬天也不掉落叶子，使我常常热衷于观察这一株植物的长势。关照完那株植物，我坐了回来，打开手机看了眼消息，一则天文爱好者的新闻说今天是月全食，同时还是超级月亮，是几年难得一见的异变，开始及结束时间都陈列在上面云云。傍晚的时候，我等着天空从灰色变成黑色，但月亮始终没有出来。这个时候我注意到那株窗台上的花开了。</p><a id="more"></a>  <p>　　倒不是说它开花是意外的事情，或者说我这样隔着窗户观察了这么久的花开了令人惊喜，又不由得产生对于它的花的样子的好奇。这个时候我才注意到，在我注意到花开了的一瞬间，我就闭上了眼睛，甚至连花的样貌都没能留在我的记忆里。但我确定花开了。同时，我突然打算出去走走。出了门我才意识到天下着雨，但又不愿意折回楼取我的伞，就这样往前走。这样恐怕看不见月全食吧，我看着一条条雨水从天上掉下来。<br>　　其实没有什么目的地可言，我顺手从路边小摊买了根冰淇淋，然后又买了一根。但雨水混在冰淇淋上面，让它的形状不能维持太久，上面凹陷了一个又一个的洞。于是我不想吃这一根冰淇淋了，不用想另一根也是这样。于是我扔掉了这两根冰淇淋，然后回去买了第三根，用一只手护着上面，另一只手握着冰淇淋。这下我得到了一个合乎规范的冰淇淋。差不多这个时候，我走到了一个十字路口的地方，大概从我的房间出来一直走，就能走到一个地铁站。地铁站坐落在一个丁字路口。但我往往从这里就钻进地铁站了，从来没有再往前走过，去探索这个丁字路口中的某一支。<br>　　但我今天打算这么做。路边的人看着我这个落汤鸡，一些少年少女捂住他们的嘴遮住笑。从左边走吧。两旁仍然是熟悉的城市景色，而冰淇淋只剩下甜筒了。吃冰淇淋的人有很多种，我认为有两种主流，其中一类会把上面的奶油部分都先吃完，然后单独吃下那个甜筒；另一类会连着甜筒和奶油一起吃。我属于前者，但我想冰淇淋的设计应该是按照后面这种方法享用的。甜筒的硬度和奶油的软度相得益彰，如果甜筒是热的话，那种感觉会更美妙，有一种复杂、缠绵的口感，这也是需要一个甜筒，而不是别的什么来装载奶油的原因。但甜筒在食用的过程中丧失了一种美感，它变得坑坑洼洼，尽管坑坑洼洼的形状和奶油一致。<br>　　然后甜筒也消失在了我的掌心中，只剩下一张薄薄的纸，这张纸也很快被雨水淋透了。然后我来到了路的尽头。这里竖着一个三角形的牌子，上面写着施工中，然后是一排白色遮挡物，上面张贴着注意事项，并遮住了我与实际工地之间的所有通路。可惜我能不知道这条路之后会修成什么样子了，我能在这个地方呆着的时限快要到了。即使我还有很多的时间，这条路的后面还有无数的丁字路口、十字路口去导向不同的目的地。这些路口中的某一个可能也竖着一个施工中的三角形牌子，并且我永远不能知道它背后的模样。就像我没有踏上的最初的那个丁字路口的另一边一样，我目前为止不知道它的样子，并且对它也丧失了一些兴趣。它或许杂草丛生，或许熙熙攘攘，或许连接着另一个我到访过的十字路口，但总之是一条未知的路。当这些未知的路都可能承载着出人意料的风景的时候，一条路所产生的诱惑也随之下降了，未知变成了廉价的东西，因为我总可以将我的脚步踏上那条未知的路。<br>　　但那株突然开放的花不一样，尽管我可以从随便路边那株植物开始观察，并等待着它开花结果，但总有一些事情我永远不知道。假设街道是有生命的，它的发展是一种意识的体现，道路与道路的连接是血脉之间的连接，施工中的牌子是一种意愿，那这种意愿是令人好奇的。但街道并非如此，施工中的唯一原因大概只有它需要修缮了。植物不是这样，尽管我从众多我观察到的结果和书本上的知识中知道了植物会开花，然后结果，但有一些事情我永远不知道。就像几千年前的祭司借助类似月全食这样的天象做出预言一般去预测事物的发展，我能做到的也只是如此。<br>　　我把手上的纸放进了路边的垃圾桶。雨水已经混进了我的眼睛中，让它有些生疼，但这种疼痛并不讨厌。这是一种陌生的感觉，或者说生疏的感觉，像长久未见到的友人突然在一条每天行走的道路上出现一样，令人感到莫名的欣喜。但这条路已经走到了头，这道白色的墙拦住了我的好奇，于是我只能往回走。然后雨停了，但月亮还是没有出来，我看了眼手机上的时间，已经看不见月全食了。值得高兴的一件事。现在我有点羡慕那些用另一种方式食用冰淇淋的人，他们在享用这个美味的时候，应该没有想这么多。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路边风尘故事</title>
      <link href="/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B/"/>
      <url>/2021/essay/%E6%9D%82%E8%AE%B0/%E8%B7%AF%E8%BE%B9%E9%A3%8E%E5%B0%98%E6%95%85%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-qOfkZBbF" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="20175101" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>好像快要毕业了，但不免觉得人是难以变化的生物。听辅导员说着，反思一下四年间发生了什么变化。人的性情无非就是窗外的树，春天长出了叶子，秋天又落掉了，到第二年的春天又长出来，仅此而已。即使不断地发生着变化，也非常无力吧。毫无疑问，这是个错觉。</p><a id="more"></a>  <h2 id="典当行和老市场"><a href="#典当行和老市场" class="headerlink" title="典当行和老市场"></a>典当行和老市场</h2><p>上海是一个大得出奇的城市，但又和别的城市没有什么差别。无论生活在多大的背景里，人类活动的范围都是局促的。我抱怨新加坡是一个无聊的国度，并往往以自己暂时不能离开这个城市作为归因。虽然这么说着，即使那个时间可以离开这个国家，估计也不会走更远的地方去，即使去了也并不会觉得自己能走动的范围变大了一点。</p><p>在大多数时候，我觉得它和其它的城市一样，忙碌且盲目。但突然某些时刻，它会出现一些特质，比如突然在路旁发现的一个典当铺和充满了时代感的老市场。这种老市场有那种令人感到熟悉的很大的门面，门前挂着各式各样的便宜玩具和扫把拖把。里面并没有闪烁着灯，外面的光往其中延伸四五米就消失了，留下了深邃的黑色。在我大概很小的时候，家附近也有这样的店。这种店往往深藏不漏，包含着各种琳琅满目的东西，蟑螂药和老鼠夹，窗帘和陶瓷盘子。然后它们就再也找不到了，且不能被想起来，不知道是什么时候，直到我们又一次见到它。</p><p>上一次看到一个收集老东西的豆瓣小组，他们放出了一张M记的优惠券。大概是一张A4的纸，上面被裁成各种小张，每一个小张上是一个什么套餐或者单品的优惠券，比如6元的鸡块之类的。小时候觉得这是一个出奇优惠的东西，发给我的传单我都收下了，压在桌子板下，并总是觉得什么时候能用上。但最后可能用掉的也就是那个6元券。但不知道什么时候，这种券也消失在了世界里，可能是移动网络兴起的结果吧。</p><p>这些或许才是切实地在变化，并一直在变化，并永远不会回来。</p><p>“我在那边看到了一家典当行”我说，我的同伴W回答说，“是的，但是如果典当行，那个人典了什么东西，几年后回来了倒闭了怎么办？”“这种事情也是有的，银行也是会倒闭的。”对于物品，人就有这样的担忧，即使是对于有生命的猫猫狗狗，人也会想它们过去了，就再不会回来这种事情。或许偶尔会想起关于自己的事情，产生类似的想法，但很快就偷偷溜走了，总觉得时间漫长，且人并不会变化。</p><h2 id="无知与失忆"><a href="#无知与失忆" class="headerlink" title="无知与失忆"></a>无知与失忆</h2><p>这是第二次看这个展，出于尴尬的原因和处于尴尬的立场。总之我有了一个同伴W，去看一个上周周末刚刚拜访过的建筑展。出了地铁站，一路的景色都很熟悉，是上次走过的道路。即使如此，路边还是出现了一些新鲜的东西。这些东西我之前并没有注意到，比如在路旁那个叫“豫园”的园林。我早该想到这个叫豫园的地铁站旁边应该有一个叫豫园的建筑；在这些古香古色的建筑群中，应该有这么一个古香古色的豫园。但我第一次并没有注意到。</p><p>一些事情我不知道，出于无知或者出于善忘。我能够记住的是展馆面前那个巨大的青苹果，以及青苹果上面写着的“永远の青春へ”。这个浅显、直白，并且是我第一个尝试去记忆的东西。我记住了它，它的光泽体积和表面的凹陷。让我下一次看见了这个苹果，我会说，“噢，这是那天的那个写着青春的苹果！”带着自豪与愉悦，那是没有失忆的时候。</p><p>里面的展品大部分我也记住了，它们的形状，一些莫名其妙的特征，比如那个德国雕塑馆面前的石柱子。我曾经想了很久那个石柱子是什么意思，或许这就是雕塑馆吧。但我也发现了一些新的东西，我们在复刻的光之教堂中的时候，W突然说，“那对面的柱子正在动。”这个展馆外面有一些管风琴一样的巨大柱体从屋顶垂下，作为装饰。我本以为这是些静态的东西，但它们切实地动了起来，里外两排柱子沿着相反的方向移动。但为什么。这个事情我能记住，并且出于无知。</p><p>有一些事情，我会忘记得很快。比如一座建筑为何如此，比如里面如何调动了风、如何调动了光与影。在我看过之后，就忘记了。我本以为看过一次的展览，第二遍浏览会无聊，但其实并不是如此。我发现了一些新的东西，并想起了一些已经忘记的事情。它们调动着我的感官，让我觉得有趣。但并不那么有趣，因为我理解不了它们，然后迅速地忘记，成为泡影。</p><h2 id="传单和斑马线"><a href="#传单和斑马线" class="headerlink" title="传单和斑马线"></a>传单和斑马线</h2><p>这个行动本身就充满了巧合，并且违反了我行动的逻辑。但我还是接受了，大概想着这个偶然的事情就在这里结束了，不会再次到来。</p><p>我这样想着，往学校走着。这个时候我的眼前出现了一个青年但又有些油腻的人物，他看见我朝着那边走就立刻走了过来，并高呼着帅哥。我心想着麻烦了，但还是回应了他的喊声，“请问有什么事情吗？”他说自己在办一个什么什么东西，想要加一个微信的好友，但我已经忘了他说的到底是什么，并且怀疑我根本就没弄清楚过。他挥舞着自己手上的手机，并挪动着脚步跟着我向前的步伐。我说，“不用了，我有急事”，然后接着往下走。“还差两个了，就两个了，你帮我加一个吧。你大几了？”“不，我赶时间，真赶时间。”然后接着往前走。</p><p>这样我想起了之前在另一个商圈碰到的一位僧人，他似乎说着广结善缘之类的话，往我的手里塞一个什么牌子，说是开过光的，然后打开了一个功德簿之类的玩意，拿着一支圆珠笔在上面指指点点。这个时候我摘下了我的耳机，试图听清楚他在说什么（虽然我已经大致猜到了）。然后说，“不用了，我赶时间。”说着把那个开光的牌子还回了他的手里。我想着那个功德簿上面是真的有人捐了那几百，还是只是托。他后面还纠纠缠缠地说了一阵，我挥了挥手说了句抱歉就径直走我的路了。</p><p>我想着这个事情才发现这位居然还锲而不舍地跟着。我看见他那种奋力的样子，感到为难，这个时候旁边路过了一个人，他像找到了救命稻草，扑了过去，饶了我一个人走着。离开这里吧。我环顾着想找到一辆自行车，就着这个红绿灯过去，于是找了一辆并解了锁。然后我被拦在了红绿灯的这头。我看见了刚才那位极有毅力的男人在和另一位路人讨论着了，挥舞着他的手机。这是一个艰难的时刻，和一个危险的城市。想着不想被他又纠缠上，决定不等这个红绿灯，然后顺着人行道推着车打算去下一个红绿灯口。这不优雅。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路边小屋</title>
      <link href="/2021/essay/%E8%B7%AF%E8%BE%B9%E5%B0%8F%E5%B1%8B/"/>
      <url>/2021/essay/%E8%B7%AF%E8%BE%B9%E5%B0%8F%E5%B1%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>我像往常那样骑车来到校门外的大路上，等着红路灯变绿，注意到路边的绿化带中间有一间小屋。</p><a id="more"></a>  <p>我在想那间小屋是什么时候出现在那里的。在我的印象里，这几年这条路都没有经历过任何的翻新，自然也没有对绿化带改造之类的事情。且这又是我每周必走个五六次的熟路，如若存在翻新的话我应该不会有任何迟疑地想起来这件事。甚至，如果这个小屋在这里出现了哪怕一周我都该注意到才对。</p><p>这不算是一个隐蔽的小屋。它周围只有稀疏的灌木丛这样矮小的东西，整个墙壁都是漆成的白色，在一片绿色背景中尤为显眼。靠近我这边有一扇关着的窗户，黄色的灯光透过磨砂玻璃映射出来。</p><p>这是一间用来做什么的屋子呢……我在它周围稍微转了转，没有找到进去的泥土径。周围的同学奇怪地看了我一眼，多半是在想这个人在晃来晃去，看一些什么东西。他们没有注意到绿化带中间的那间屋子吗？他们不觉得绿化带中间有一间屋子（窄的可怜）很奇怪吗？这个时候红绿灯变成了绿色，我回到了自行车上，像往常一样进入了校园。</p><p>到了晚饭的时候，C同学约我去南区附近的一家川菜馆吃饭。于是我又路过那个路口，那间白色的屋子还在那里。透过磨砂玻璃，映出黄色的光。可能就是我每天盲目地经过这里，完全没有注意到这间小小的屋子吧。但它如此醒目又让我觉得奇怪。</p><p>上完晚课，我从光华楼出了门，再一次走上了这条熟悉的路，下意识地朝着路边看了一眼。那间屋子不见了。只剩下低矮的灌木丛和春天快开败的几朵红色的花。那间屋子究竟是为何出现在那里的呢，心里这样想着，便打算明天接着走那间消失的屋子旁边的路。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 怪事记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马勒、音乐、文字和杂七杂八的东西</title>
      <link href="/2021/essay/%E9%9F%B3%E4%B9%90/%E9%A9%AC%E5%8B%92%E3%80%81%E9%9F%B3%E4%B9%90%E5%92%8C%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
      <url>/2021/essay/%E9%9F%B3%E4%B9%90/%E9%A9%AC%E5%8B%92%E3%80%81%E9%9F%B3%E4%B9%90%E5%92%8C%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>昨天晚上去听余隆老爷子指挥的马六。我本来应该写一篇类似之前的对于这场音乐会的评价，但后面考虑了一番还是没有动笔。音乐是很抽象的东西，我想无论如何去描述某个晚上听到音乐的情况，都是非常无力的。或许我说“这场演出糟透了”，“它的铜管都在干些什么！”之类的话，或者非常感动，用“天国来的音乐”，“不能听到第二次”之类的方法去形容它，也非常的单薄无力。</p><a id="more"></a>  <p>马勒的音乐会令人痴迷，就在于其现场的音效难以用任何我手上有的工具重现出来。我听着我自己的设备，恍惚间觉着这些录音已有一些神韵之后去现场，但只要听哪怕一个小节也会打破这种印象。或许我能描述出的一切是，它们不同。这是一种直观的、不可动摇的感受。但却缺乏进一步描述的可能。如果我开始陈述，“它用了那个别致的大锤”，“它出奇地用了两个定音鼓”之类的，又会陷入毫无意义的讨论中——这完全不是我关心的问题。不，没办法描述这些内容。</p><p>音乐能够令人印象深刻的原因非常复杂；音乐的情感大多是晦涩的（对于没有歌词的作品）。它是一个复杂的场景的结果。每次我听着肖邦夜曲的时候，都不免联想到那一天的事情。站在成都那个大熊猫趴着的写字楼上，耳边传来连绵的钢琴，眼前是一个小草坪和几个遮阳伞。于是我常常想，这个场景有什么寓意吗？这不是多么特别的场景，音乐也不来自效果非常好的音箱，但那个声音就是这样串联起了这个场景，出现在我的脑海里。还有当时听马九的第四乐章，我痴呆地盯着音乐厅的天花板，看着各种吊顶装饰。这个场景和我离开同学聚会并在街边等着公交车时的场景联系在了一起，透过这段音乐。但并无逻辑可言。</p><p>就像我说不清楚为什么哥德堡变奏曲的主题咏叹调是如何具有抚慰人心的力量一般，我不知道我如何感知的音乐。有的人会说，透过曲式、对位法和调性。但这些只是经验：人凭借自己的经验得知，这样排列的音符是具有魔力的，而另一种没有。这不得不令人沮丧，人调动不了自己的情绪，也不知道它是如何被调动的。像是被牵着鼻子走的牛一般，只感觉前面那个鼻环似乎起着某种作用。</p><p>去音乐会之前，在音乐厅对面的书店呆了一会。毕竟是音乐学院附近的书店，里面卖着唱片乐谱，甚至摆着一台电钢琴。同伴上去弹了一个乐章的贝多芬奏鸣曲。这个场景能被我记住吗？能比我听说余隆老爷子经常在这家书店旁边的意大利餐厅吃意大利面记得更久吗？合成的钢琴声音覆盖了整个小空间，别的读者和向我们这样随意走走的人进入了这个魔幻的小空间，都停下来，侧着耳朵，有的闭着眼睛，听着那台木头和金属的器械发出的声音。一曲终了，稀稀疏疏还有鼓掌的声音。这鼓掌声音自然不能和昨晚马六演毕的那三次返场时雷动的掌声相提并论，但拥有着相当的魔力。</p><p>文字或者音乐都是差劲的东西，我们以为可以借助它们回到某一个时刻，铭记某一些场景，但大多都是徒劳。当它们重新被阅读着被聆听着的时候，已经完全不是记录时的样貌了。只有一种特殊的感觉，那种似曾相识却又不能言喻的感觉能够留下来。这种感觉既不能写下也不能变成音乐，它们只在那一个瞬间存在。</p><p>音乐或许更类似这种怪异的感受。它随着时间的推移消失了，不会再出现。即使是现在熟悉的一个主题，心里想着，“这一段我很熟”的主题，也会在听完整部作品后忘得七七八八，直到再一次听到这段作品。一个音符一旦响过，就不会再次出现。它激起了那么一点点脑部的电信号，然后杳无音讯，不论再努力地回忆都会竹篮打水，变成一个迷幻的梦境。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“全职猎人”观感</title>
      <link href="/2021/essay/%E8%A7%82%E6%84%9F/%E3%80%8A%E5%85%A8%E8%81%8C%E7%8C%8E%E4%BA%BA%E3%80%8B%E8%A7%82%E6%84%9F/"/>
      <url>/2021/essay/%E8%A7%82%E6%84%9F/%E3%80%8A%E5%85%A8%E8%81%8C%E7%8C%8E%E4%BA%BA%E3%80%8B%E8%A7%82%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-XLbcekCE" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="22742684" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="评价：★★★★☆"><a href="#评价：★★★★☆" class="headerlink" title="评价：★★★★☆"></a>评价：★★★★☆</h3><p>　　本来不打算写《全职猎人》的观感的。最近闲来无事，把旧版重新看了一遍。这一次看得更加仔细一些，尤其是“友客鑫篇”。看完这一遍（可能是三刷或者四刷），我终于还是决定写一篇简单的观感。这里主要的评价对象是《全职猎人》旧版，新版更多作为对照出现，因此对于“蚂蚁篇”也不会有详细的评价，仅仅作为对照出现。由于个人看过的漫画版本只有从“蚂蚁篇”结束之后的部分，所以这里将不会以漫画作为对照版本（旧版和漫画有相当的出入，但个人认为是良好的出入）。</p><p>　　<strong>注意</strong>：本评价一定会造成剧透。请考虑是否接受剧透后进入。</p><a id="more"></a><h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p>　　《全职猎人》无疑是一篇鬼才之作，在整个篇幅中，风格和描述的对象始终在发生着变化，大体可分为以下几部分：</p><ol><li>猎人考试篇：主角四人组。四人组的相遇并考取猎人证书。</li><li>骷骷戮山篇：主角三人组，除奇犽外三人去解救奇犽。</li><li>天空斗技场篇：主角奇犽和小杰，学习念技术。</li><li>友客鑫篇：主角酷拉皮卡和旅团，两者交锋。</li><li>贪婪之岛篇（旧版OVA，新版和漫画）：主角奇犽、小杰和比斯基，攻破游戏《贪婪之岛》。此时旧版由于更换了监督，并且从手绘改为了电脑作画，水准大幅度下滑。</li><li>蚂蚁篇（仅新版和漫画）：主角奇犽、小杰，处理奇美拉蚁，小杰随后失去意识完全瘫痪。</li><li>会长选举篇：奇犽、雷欧力和金，奇犽拯救小杰，雷欧力精选猎人协会会长。</li><li>豪华游轮篇（仅漫画，且在连载停刊中）：除小杰和奇犽外所有势力。</li></ol><p>　　从猎人考试篇到天空斗技场篇，包括贪婪之岛篇都是热血青年漫的范畴，树立了不少独特的角色。友客鑫篇和蚂蚁篇更接近青年漫。会长选举篇和豪华游轮篇已经脱离了标准漫画的范畴，俗称“小说配插图”。故事发展从最开始的线性剧情，到后面的大乱斗，这样的倾向是越发明显的，一直到豪华游轮篇发展到令人发指的地步。个人以为最适合的尺寸为友客鑫篇和蚂蚁篇两部分，而后者有有些过于复杂，导致一些人物不突出（更像是群像了）。友客鑫篇在其中保持着非常好的分寸，精巧而有序，首尾相扣。</p><p>　　后面分为情节，人物和设定两部分简单评价一下。</p><h3 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h3><p>　　《全职猎人》作为一个非典型少年漫，风格变化多端，剧情也相当不落俗套（尤其是后期），想要一一概况是相当困难的事情。所以这里将重点放在友客鑫篇吧。</p><p>　　友客鑫篇将整部作品真正推向了新高度。这是念能力系统最开始崭露头角的篇章，也将常见的单线或者双线叙述过渡到了多线叙述。在这个篇章中，直接涉及的阵营为酷拉皮卡、黑帮、旅团、小杰三人组四批。小杰三人组前期游离在主线剧情外，后期和酷拉皮卡合流。前期酷拉皮卡处于黑帮势力，后期开始单干。旅团则有二五仔西索。所以表面上是三股势力的纠扯，但只是双线叙述是不够的。这一章节主要是旅团在其中推动，酷拉皮卡伺机而动。二者几次交锋可以分为一下几节：</p><ol><li>旅团一闯拍卖场，酷拉皮卡的黑帮同事大半被灭，酷拉皮卡抢占先手偷到窝金。</li><li>旅团二闯拍卖场，假装身死，继续拍卖，酷拉皮卡在西索告密前浑然不知。</li><li>旅团借助拍卖掉的火红眼开始追踪酷拉皮卡，小杰和奇犽被抓，同时团长被酷拉皮卡抓走。</li><li>双方约定条件交换人质，以小杰奇犽回归，团长失去念能力作结。</li></ol><p>　　这整个故事有多个核心在推动其前进，开端是旅团希望偷走宝物、酷拉皮卡希望复仇、西索希望有决斗机会，随后是窝金之死和预言诗入场。让整个章节行云流水，翻转也在情理之中，一直演化到最后的交换场面。上面尽管概括出了主要的发展，却不能够对于一些精彩的场景进行重现，比如两次追踪战，扣人心弦的紧张氛围在许多作品中难得一见。</p><p>　　互有胜负，酷拉皮卡一直处在暗处并借助这个优势两次抢到先机，但仍然不能完全对抗旅团的机动力，最后草草结束。这段故事在旧版中，前半截的叙述中心在酷拉皮卡，后半截在旅团（派克诺坦）。酷拉皮卡和派克诺坦在这个章节里互为映射（蚂蚁篇里小杰和蚁王的映射更加明显），双方代表各自的利益有自己的挣扎，并选择了和平解决的道路。几组势力的互博充分地展现了富坚极强的情节掌控能力，并将几乎登场的所有角色的性格立了起来 —— 当然表现的深度层次不齐。</p><h3 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h3><p>　　个人以为，本作品最大的优点之一是它的人物立得住，并不是依赖强行拔高角色的某一个特点，而使角色看似独特实则扁平。塑造人物的手段也完全不同，不依赖过分的回忆和人物背景，而是用无数的细节构建出一个完整的人物形象。最直接的方法就是设定一个符合人物性格的能力系统，代表人物就是酷拉皮卡、西索、伊尔迷。伊尔迷的强大控制欲可以直接从他的能力中找到端倪（但这一点有更多更有力的表达方法表现在猎人考试和会长选举篇中）。</p><p>　　作为标准混乱阵营的幻影旅团也不是“一群贴着酷炫标签的反派”。最能表现这一点的是团长被绑走后的三方心理斗争。团长认为他的团员会放弃他，一派认为依照团长的命令可以放弃团长，另一派认为团长不可或缺。这种分立让不同角色的思考方式和独立性呈现了出来，同时即使分为两派，也存在温和派和激进派的差异，不可不谓塑造人物的一手妙招。</p><p>　　猎人塑造出来的角色，大概是当我们希望对其进行描述的时候，可以使用一些俗气的词汇进行概括，但在概括之后又往往觉得这些词汇不够精确。我们可以借助自己的理解去还原一个作者希望表达的角色，但是不能使用足够准确的词表达出来，更不能复制出这些角色的言行。这些角色有着相当独立的意志和行为逻辑，而绝非工具人。同时人物的塑造不依赖口癖或者常用语这些往往用力过猛的方法，这一点使人非常欣赏。</p><p>　　举个例子，小杰是一个反热血漫的主角设定。他有足够强的背景、足够强的学习能力、足够多的伙伴——这些都是传统热血漫具有的特征，但他“不辨善恶”。“不辨善恶”是一个剧中角色的解说，这并不是传统意义的贬义说法，而是没有成见地看待一个事物只是相信自己的判断。这是一个很有挖掘潜力的设定，正是这种特征一直延伸到了小杰的最终结局。尽管这个特征十分突出，却不足以概括这样一个角色。我读过一些剧评认为小杰“双标”，或者干脆认为小杰最终ooc了。相反我认为这正是这个角色的魅力所在。</p><p>　　另一个例子，在友客鑫篇，小杰和奇犽被旅团绑走的场景中，信长要求和小杰扳手腕并流泪的一场戏。信长在整个章节中并没有太多笔墨，但是这一个小小的场景，就塑造了一个复杂的人物，并且借由这个人物，将整个旅团的特征树立了起来。同时为后面的旅团内部冲突埋下了伏笔。旧版的处理也为这个章节添色不少，最明显的是酷拉皮卡的同事达佐孽，一个不算苦大仇深的角色，但有自己的担当，人物塑造得干净利落，恰到好处。</p><h3 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h3><p>　　《全职猎人》的设定相当有趣，毕竟是设计的独立世界。其中最亮眼的都是念能力系统。（猎人这个职业的设定也相当有趣，但这里就不展开了。）</p><p>　　常常被称赞为动漫中最为系统的异能力设定。念能力的基础异能力中常见的生命能量，通过锻炼或者强韧的意志可以获得的东西。基于这个基础设定，演变出了四大行基本功。基本功的结合与融汇发展出了更多的应用技，囊括了观察（凝）、防御（坚）、攻击（硬）、感知（圆）等，这使得所有的角色都可以拥有基础的行动力。而角色的独特性则是以四大行中的“发”保持的。根据个人天赋，这个系统可以发展出强化系、变化系、操作系、放出系、具现化系和特质系。前五个方向基本囊括了大部分异能力动漫中使用的能力，最后一个则是为一些特殊的能力留的后门，例如偷窃他人能力的能力。这六大系统也可以通过后天学习相互转化，并设定了学习的难度差异等等。是一个具有相当的广度、规范性以及方便发掘的系统。</p><p>　　相较而言，JOJO的设定则更加粗泛，任何能力都可以被直接设定出，而不用考虑使用的实质等等细节，更加天马行空，因此总是蕴藏着“这个人物明明有更优的解决方法”的问题。</p><p>　　但果然这个系统最为令人惊艳的是“誓约与制约”的设定。这是一个简单的假设：使用更严格的约束可以发挥更强的实力。但如此具有魅力和变化的可能。在富坚原作中，基本所有念能力都遵循了这个策略。这里可以枚举几个有趣的誓约与制约。</p><ul><li>小滴 &amp; 凸眼鱼：可以吞下一切物质，但以下类别除外：有生命的东西，带有念能力的东西或者念能力具象化的东西。这是一个简单的能力，却有一些有趣的应用：其一，利用这个特性吸收敌方的血液，这并没有违背誓约的内容，但效果拔群；其二，在贪婪之岛中用这个方法验明了岛中的部分东西并不是具象化的实体，而是实际存在的，从而为真实世界论提供关键证据。</li><li>库洛洛 &amp; 盗贼的秘笈：可以偷取其他人的念能力，条件不明，但需要被盗取的对象存活。最开始的盗贼秘籍需要一手持打开的具象化的书籍，并翻至对应能力的页面（即强制性限制一只手的自由）。没有什么特别的，但是誓约内容很有趣。</li><li>酷拉皮卡 &amp; 束缚之链：使对方强制进入“绝”状态，仅能对幻影旅团成员使用，对其他人使用会导致使用者立刻死亡。酷拉皮卡还具有另一个强力誓约“绝对时间”，但这里先略过。“束缚之链”是“制约与誓约”初登场的时刻，酷拉皮卡给定了非常狭窄且强悍的条件并换来了极强的能力。复仇的决心和需要背负的代价仅仅用这个能力的设定就完全展现了出来，一个悲剧的动机早已埋好。</li><li>小杰 &amp; ？？？：用一切为代价换来了短暂的全盛能力。这一情节是整部作品最为反套路的点。这是一个难以被预料的发展，直接将主角推向了无底深渊。正是如此，这一部分的张力才被拉到了巅峰，带出了难以想象的剧情发展和离谱的压迫感。（新版在这里使用的bgm尤为出色，在全部作品中不可多得的亮点，新版绝不可错过的片段。）</li></ul><h3 id="新旧版对比"><a href="#新旧版对比" class="headerlink" title="新旧版对比"></a>新旧版对比</h3><p>　　个人更喜欢旧版。旧版的BGM基本上无可挑剔，紧迫、黑暗、压抑种种配置都是恰到好处。友客鑫篇的爵士风和旅团疯狂又优雅的风格非常搭调，大鼓、管风琴、钢琴种种乐器的应用和剧情完美匹配。而新版的音乐就一言难尽，一直到贪婪之岛篇都是运动会风格，和猎人的风格格格不入。进入蚂蚁篇之后，配乐中增加了不少佳作，但遗憾的是数量仍然太少，大多数时候都是重复的音乐使用，显得疲软。</p><p>　　分镜也是旧版更加流畅自然，新版则基本照搬原作分镜。不少观众诟病旧版擅自增加剧情和细节，但就个人观感而言，旧版增加的细节恰到好处，不如说更加晚上了富坚在创作的时候都没有处理好的伏笔等等问题。旧版的打斗动画也显得更加流畅，色调和故事内容匹配。对比起来新版就过于开朗明亮、幼齿化。</p><p>　　对于增加的剧情，不得不再提一嘴友客鑫篇旧版中派克诺坦的沉思一段剧情和放猫部分，实在是非常经典的表达方法。回忆和现实的交叠，杀人如麻的旅团的过去，派克诺坦也如此树立，冷漠却温柔，是这一章节的点睛之笔。</p><p>　　P.S. 关于蚂蚁篇。蚂蚁篇作为一个非常特别的章节，其实是值得多说几句的。但由于蚂蚁篇只有新版中才有，而尽管新版猎人将大部分精力都用在了蚂蚁篇中，还是令人觉得有一些失望，所以这里先不做评价，等以后有想法了再补上这一节。</p><center><img src="/images/Things/hxh.jpg" width="50%" height="50%"/></center>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观佛记（其二)</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E8%A7%82%E4%BD%9B%E8%AE%B0%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E8%A7%82%E4%BD%9B%E8%AE%B0%EF%BC%88%E5%85%B6%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　距离上次登上峨眉，以及过去了大半年。这个计划终于还是坚持了下来（或者说完成了，或者说失败了）。前后两次情形的不同带来了一些奇怪的感受，微妙得不知道该从哪里说起。同行者的改变也让整个事情像是从一个轨道上脱下，进入了另外一个。</p><a id="more"></a>  <p>　　冰爪插入冰里的感觉非常奇妙。像是一下子扎进了一个柔软、极具韧性同时坚硬和脆弱的东西，或者说像是穿过玻璃纸然后扎进了干涸的泥土里。这时的风景也非常奇妙，完全的黑白，是透过黑白滤镜失色的世界。在没有雪的地方是黑色的，有雪的地方是白色的，在闪光灯照到的地方是灰色的。这种景象缺失了某种真实感，只有前面那个等着的灯火通明的旅馆和热气腾腾的饭菜是真正的真实（事后却被证明灯火通明和那个饭菜是虚假的）。</p><p>　　不知道是不是有一些心理准备，这一次爬山并不很累。到了最后甚至有一些惬意。在冰雪覆盖的夜里爬山本来是上一次四姑娘山的既定事项，却在这里找补上了；或者说对应的是这个峨眉山计划最开始的冰雪之行。最后一节路放着歌并走走停停。原本我认为陡峭的几段路出人意料地平缓且距离短，没有费多少力气就跨过了它们。几波人从我们的身边走过去，消失在了树林的影子里。一晃已经九点了。</p><p>　　我的回忆总是在欺骗我，让我将这一次旅程与上一次的峨眉链接在一起，但我发现相似处寥寥无几。不知道是季节的差异，我的差异，还是同行者的差异。两次旅程以不同的方式通往了不同的目的地。上一次旅程虽然称得上顺利甚至圆满，但总觉得哪些地方有所缺陷，从而让我觉着有些扫兴；这一次或许也是如此。或者说我一直都没有弄清楚，我自己究竟对着这整个事情的什么部分感兴趣。各种事情总是微妙且复杂，在我看着民宿窗外的溪水的时候就这样想。这个溪水并不大，洪亮的声音从那个水坝穿过来，虚张声势地让我以为外面要么是有大江，要么是在下雨。这种微妙的景象总是能够让我看很久也不厌倦。</p><p>　　噢我忘了说同行的人的事。同行者有二，其一是三弟，我大概有半年没见过他了。他总是说自己忙着这个忙着那个，我自然是理解的，毕竟我经常也是如此，但不免让我有些担心；其二是Nof，最近才因为COC见过，女生一个人出来爬山或多或少让我有些敬佩。</p><p>　　就在我盯着溪水看的当口，三弟正脱下短袖换上毛衣。这实在是鲁莽的行为，毕竟外面的门还开着，这样兴许不太雅观。我过去把门带上，然后回到了我的阳台继续看着溪水。一点也没变，他初中也是这样的。所以记忆并没有错。它在某些场合忽悠了我，又在一些别的场合分外清晰。就像我母亲经常说道的一个事情，我记得我在两三岁的时候去四姑娘上的半途上吐了，然后折转去了一个附近的农家乐。这件事情我记得非常清楚，但不知道为什么。</p><p>　　所以不论我多么清晰地记着那个坡上就是一大截平地，它还是连绵不断地往上；以及不论我多么清晰地记着那个坡是多么陡峭，如今都显地欠些火候。我的记忆蒙骗了我自己，让我美化或者丑化了一些是什么事情。它不能忠实地把所有事情记录下来吗……我这样想。即使借助文字，这个事情在我的记忆里也会逐渐的发生变化，慢慢地在其中加入一些没有发生的事情，对于一些发生过的事情却再无印象。比如我多年后或许会忘记我曾经对那个山顶的玉米大加指责这个事，再一次买一个玉米；或者牢牢地记住这个玉米是一个洪水猛兽，难以下咽之物。</p><p>　　我看见的一切东西都覆盖上了我的理解，在那个黑夜里雪地上的脚印里也装满了我的理解：这是一个精神抖擞的年轻人的脚印，那是刚才擦肩而过的一家三口的脚印，尽管我没有什么理由。我习惯在我能够两阶两阶往上走的时候就两阶两阶往上走，这没有什么特别的理由，但是却会快出一截。于是这让我有闲余杵着我的竹竿子，望着旁边的风景，以及望着后面三弟和Nof。我看着三弟总是在Nof前后一两阶的位置，这是我做不到的事情吧，这种事情我总是没什么耐心。这种应该就是某种偏执的观念，而不是什么事实。他不可能总是这样子没离多远，最多也只是大多数时候如此，但我就是这样认为了。这并没有什么不好的。</p><p>　　健忘应该是不错的事情 —— 有的时候我会这样认为。人的脑子总是有限的，我觉着抓住那些值得我记住的事情就可以了，别的就随风散掉吧；但往往这样的事情也记不住。我想记忆这个事情，是压缩事实的信息量的过程，用某些算法把次要的、或者说可以被忽视的信息藏在别的事实里或者直接扔掉。健忘的人应该就是采用了非常激进的压缩算法，失掉了大部分的信息，留下了权重最大的事实。那这种回忆是极度抽象的、偏激的吗？这样子似乎不对。我对于细节总是有离奇的记忆能力，对于一些大体上的观念却总是出错。比如人的行进姿势比人的脸更容易被记住，于我而言。于是我会记住那些在石头上面攀登又跳进水里湿透的猴子，以及从山顶上扔给三弟的那半个果子的样子，却会忘记有扔果子这个事情。这些应该是错误的记忆，或者也能说是健忘，这样会驴头不对马嘴从而失真。</p><p>　　记忆有的时候自私。因为三弟和Nof大多数时候在我后面十米左右的距离，每次他们说一些什么，我总是听不真切。有的时候我会有的没的问一下他们在说一些什么，但总是飞快地忘掉。这些话并不是对着我说的，与我关联也甚微，出于礼节或者好奇，我问了一下，转眼就忘掉了，现在一点也想不起来。但这些话题以后被三弟或者Nof又提起来的时候，我可能会拍一下脑袋说，啊，确实有这件事情；或者就一脸茫然。</p><p>　　画面也是容易记忆的事情，只要稍稍注意久一点点。就像我盯着看了很久的那条几近干涸的小溪，它的走势和两边的零落田野我现在还能回忆得清楚。在下山的时候，坐在大巴里。上一次峨眉下山也是坐的这样的车，当时Y在不断地给我讲着《只狼》里的细节，甚至还给我放了几个视频。这一次的下山就安静了不少。Nof可能是在前面休息，三弟在旁边玩NS。大概半小时后，他可能玩累了，就开始眯着眼睛睡觉。人类的睡颜实在是有趣的东西，是只有在没有防备的时候才会露出的表情。平和且安宁。我盯着他闭着的眼睛和上面的眼睫毛看了一阵，于是我也觉得平和和安宁。这样的场景我能记忆很久，会和第一次登上峨眉看到的那个咸鸭蛋一样的太阳一样深刻。</p><p>　　旅途中发生了不少的事情，一一讲述实在是破费口舌，也不太有趣的，而且因为我记忆的缘故，多多少少失了真。我不介意失真之类的事情，毕竟当我记下来的时候，它又失了一次真；而是其余的事情我如果尝试讲述，就会变成更加微妙的命题或者形式化的流水账。微妙的事情需要耗费更多的精力才能表述的清楚或者拿捏出边界，而流水账参见上一次登峨眉的游记就足够了。所以就停在这里吧。</p><p>　　PS.下了山回来，Nof说了关于“温暖”这个事情的时候，我有些吃惊。这确实是一个双关，但也是习惯性不经意的一个双关，我想当事人也没有注意到才对。果然旅途里三四个人的团体最为迷人，有一种精巧的平衡构建其中，每个人都用自己的眼睛考量其余的人，揣测其余人的想法并把他们连接起来。知道他人眼中的自己和其余人的关联也是颇为有趣的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蒙尘记</title>
      <link href="/2021/essay/%E6%B8%B8%E8%AE%B0/%E8%92%99%E5%B0%98%E8%AE%B0/"/>
      <url>/2021/essay/%E6%B8%B8%E8%AE%B0/%E8%92%99%E5%B0%98%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　我站在山脊和另一个山脊的交汇点：后面是我攀上来的山脊，右边是连绵起伏的雪山，左边是继续沿着继续往上的道路。雪山和我站着的地方，距离着一个长着低矮灌木丛的山谷，山谷的泥土地上斑驳地放着些冰雪的白色。这个转折点立着一个醒目的木牌，上面写着800m。</p><a id="more"></a>  <h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>　　在山里走夜路远没有想象中困难。晚上的景色非常古怪，雪山罩着一种蓝色的光晕，天空中闪着一些星星。四周的光亮除了头灯发出的光别无其它，也没有什么声响。</p><p>　　我跟在前面三匹马后面：一只驮着L，一只驮着行李，一只驮着X，向导在最前面走着。我时不时觉着我前面的马匹脚闪了一下，L在上面规律的摇动。我清晰地喊一声，“不能睡着了，马上睡着了会摔断脖子。”对方应答道，“我没睡。”这是路途上可能会有的声响。再不然就是伴随着我的脚步滑落的泥沙的颗粒声。</p><p>　　山间的小道全部都是踩实的泥地，也是不久前我登上山的道路。想着刚上山不足三小时就往下走，实在是觉着有些难受。我心里估量着当时自己走到这里的时候我花了多久，又多么费力，随着马往下移动。</p><p>　　下山的路基本是难走的。在稍平的一些道路，走起来颇为轻松，完全不费力。然而一路上那些嵌着石头的泥土坡，凹成二十厘米宽、三十厘米深的沟渠，坡度或大或小。但直着往下走是不可能的，只能不断地侧着身子往下面移动。脚踩在这种有石子的路上，滋味非常糟糕。像是不穿鞋子走在那些铺满鹅卵石的恶趣味的道路上那样，那些石头不断硌着我的脚。</p><p>　　“向导，我休息一下。”向导听到我的话停了下来，开始从马身上拿水下来；我从背包外层取出我的随手杯。扭开杯盖的时候，我觉着盖子和杯身中间结着一层冰。保温杯在我的背包里，打开扣子取出水是一件费劲的事情。想着也就喝下了随手杯中的冰水。只有这种时候能稍稍歇着自己的脚，然后四周看看这黑暗中的景色。不知道走了多久，四周还是低矮的灌木丛。“前面还有多远。”“大概三小时吧，到旅店的话。”向导回答我。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>　　刚刚到山脚下的镇子，镇子就建在山脚下。一路上来的时候，司机就指着旁边的山脊说，这是你们明天要走的路。我并没有什么概念。来的一路几乎都是在云上的。穿过厚实的云层和漫长的隧道，到达了这个小镇。镇子面对的山上面覆盖着雪，一些树上也挂着霜。像大多数村镇那样，这个镇子建在两山之间的低矮处。</p><p>　　村子的海拔在三千三百米，这里拥有的是难以理解的静谧。什么声音也没有，能听见四周有一种非常低微的烧水那样低沉的呜呜声。这里不算冷，天气也还晴朗。对于爬山是相当不错的条件了，希望明日也是如此。</p><p>　　到晚上的时候，X架起了三脚架，饶有兴趣地对着天空一阵猛拍。我比较在意的是镇子的斜上方的山脊转角上，有一个中国石油加油站，这个加油站的黄色光带在整个黑暗的群山阴影中显得非常的突出，多多少少有些寂寥的感觉。夜降了下来，温度也是。回到旅馆吃饭，那个牛肝菌异常美味，菌类特有的香味和弹性在覆着的油光下实在诱人。老板说这是每年从山上捡的，每年能捡到的时间并不长。以及高原上的白菜豆腐汤也是出乎意料地好喝。</p><p>　　夜深之后，不太适合到处走，景色也没有明显的变化，于是我们都回到了房间。这个晚上或许没有安眠，一方面是对于第二天旅程的各种揣测；另一方面是高原上睡觉是一件麻烦的事。至于后者，是我的同伴们告诉我的。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>　　睡袋的感觉很奇妙，我穿得非常扎实钻了进去。高原上感冒是一件代价不小的事情，为此还是穿多点好。我想着向导说的话。向导说，每年冬天植被稀少，是山上氧气最缺的时候。上山四五小时侯是高原反应最剧烈的时候，大概在晚上11点。第二天如果能适应高反应该就能登顶。我心里担心着X的状况会不会更恶化。“如果有什么问题就叫我，我出去叫向导，趁夜下山。”我是这么说的，但也只能这么办，尽管我认为我的体力也很难支撑我走夜路下去。</p><p>　　大家都关了头灯。在这个乌黑的石头房里，那个木质的门框一开一合发出别扭的声音。不一会门开了，向导出现在门口。“大家先睡吧，明天状态好我们就去冲顶。”我们简单回应了一下，向导就离开了，走之前用栓子把木门绑上。现在那个吱嘎声没有了。“会不会氧气更少了。”L说。</p><p>　　这个晚上注定不好过。本来我还在对付睡袋逼仄的空间，突然就觉着心率加快。我的心跳声非常地明显，无论什么姿势都觉着心脏正受到压迫。同时头也开始微妙地疼了起来，若有若无，断断续续。在我试图适应这种状况的时候，旁边传来了若有若无的声音。“帮我叫一下向导吧，我觉得我头要炸了。”是L的声音。连夜下山的情况我已经预料到了，但L先这样说还是在我的意料之外的。我答应了一声，然后又在睡袋里面躺了一会，决定起身。突如其来的头疼钻进了我的脑子，迫使我长长地呼了一口气。</p><p>　　我戴上头灯离开了逼仄的石头房子，进入了大本营的那个平坝。现在这里安静且漆黑一片，在这外面我的头疼也突然得到了缓解。屋子是一栋栋黑影。我迅速地朝着向导屋子的方向走了过去。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>　　栈道比我想象的更加复杂。它看起来是一个轻松的选择，但却反复考验着膝盖。在进入检票口以前的一段距离是被栈道负责的。从四姑娘山山底开始，是一截栈道；到了半山腰以后，我们会偏离栈道，进入泥路；最后登顶的路程有一段是石头路，也是最为困难的一段。第一天的路程是从山底爬到大峰大本营，距离在17公里左右，从海拔3300抵达4200。也就是今天需要完成的路程。</p><p>　　两位同伴L和X都是基本没来过高原的，我在青海西藏都呆过一两周时间，应该算是能够接受高原的环境。我试图找到一个节奏，在栈道上行进。然后我发现两位同伴的速度略慢一些。这种时候我就杵着我的登山杖，望着还能看得非常清晰的小镇，等着他们爬上来。这里的气候长不了什么高树子，所以视线里的都是灌木丛和裸露的地表。再往上一点的山可以很清楚地看见雪的痕迹。</p><p>　　我心里有了不妙的感觉。斜上方四姑娘山的四座山峰朝着下面看。</p><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>　　白菜汤出人意料地美味。这个泛白的汤朝着四面八方散发着热气，我一不小心喝了三四碗。现在太阳已经完全落下去了，地平线那边是诡秘的蓝紫色，剩下一些细微的地方还留着一丁点红光。但其实这个场景我一点也看不见，完全是我在这个狭小的黑色屋子里这样想象着。这是一个石头堆成的屋子，除了桌子上悬着的一盏便携式的灯和向导头上的头灯，便没有更多的光亮。</p><p>　　菜很简单，不过分量很大。吃饭的人是我们一行三人，大本营的负责人和我们的向导。我们路上遇见的几个也是攀登大峰的人不住在这些石头房子里，而是附近更高的一个石头上的帐篷里（他们的处境应该更加窘迫）。能在这个地方吃到热食确实是令人满足的事情，感觉身子就突然轻松了起来，高原的压迫也减轻了不少。但情况并不很乐观。</p><p>　　X的喘息声在这个逼仄的空间中显地非常明显——那种急促、低沉的喘息声在整个屋子里游荡。X在4000左右海拔的位置就决定骑马来到大本营，我也是在大本营才再一次见到X。“呀，你嘴唇完全乌啦。”向导这样喊了一声我才注意到他的嘴，确实是非常不正常的颜色。明天应该不能继续往上走了，剩下的问题就是今天连夜回去还是明天天亮后再回去。这才让我觉着冬天来爬这座山是鲁莽的行为，以及在没有高原经验的情况下。</p><p>　　无论我觉着这个汤多么美味，X终究没有食欲（L则显地比较正常），很快就结束了晚饭。这个时候我能离开这个黑暗的屋子去外面透口气，顺便看看我想象中的景象。很遗憾的是这个景色比我预计的颜色少了不少。现在太阳已经完全落下去了，只剩下远远近近高高低低的山峦边缘上微弱的光线。四周只有月亮照射的地方反射出蓝银色的光，照出了近处的那个帐篷，一部分平地。黑暗完全掩盖了我不久前刚刚登上来的路。</p><p>　　我和L劝X多走走，这样才能适应这里的环境。X考虑了一阵开始架起他的三脚架，试图抓住什么东西。我觉着有些冷，便回了房间。房间里也是漆黑一片，我很久没有在这样黑暗且宁静的地方呆过这样漫长的时间了。我想掏出我的电子书看上几页，但觉着这样的温度里电池会很快耗光，我有觉得有些头疼，便打消了这个念头，在黑暗中发着呆。</p><h2 id="六"><a href="#六" class="headerlink" title="六"></a>六</h2><p>　　我没有想到这段路如此漫长，尽管是水泥平路，四周还闪烁着现代科技的路灯，它还是显得漫长。当我的登山杖触及到地面的时候，我分明感觉它完全不给我任何支撑地缩短了一截。这个登山杖坏了吧！我心里这样想，但我早就知道这个登山杖坏了。我分明觉得脚掌上每一个地方都在喊疼，但是我不能停下脚步。在L说了一句他困了的时候，我才发现我如此清醒。</p><p>　　这本是一段我可以选择骑马的道路，但我拒绝了。L和X现在好多了，已经没有在马上，而是强打着精神自己走。但他们的步伐比我快多了，我追不上他们。你是一个顽固到了骨子里的人，我暗骂了自己几声，咬牙切齿地，你是一个顽固到了骨子里的人；这会付出代价——这一点我很清楚。</p><p>　　我没有心情去留意现在天空的样子了。昏黄的灯令人感到慰藉又绝望。我看见我拖长的影子在我的前面后面交替闪烁，我如果能有我的影子那样迅捷的速度就好了，但影子不能比我更快。</p><h2 id="七"><a href="#七" class="headerlink" title="七"></a>七</h2><p>　　在那个转角告别了L和X，剩下的路是我一个人的路。这里大约是14公里的位置，海拔4000左右，距离目标已没有太远。手机早已没有信号，这一路上我们已经消耗掉了所有的水和食物，我的背包中只剩下几条士力架。</p><p>　　“我的杯子里还有一两口水”，我这样告诉他们，“我大概两个半小时候就到了。”向导为我指了一下路，说是那山间的石头房子就是目的地，问我看见了没有。我满口说着我看见了，其实我什么都没有见着。那边是两山交叉的地方，有一条看起来能够走上去的路。</p><p>　　抵达这里的时候已经是下午4点了，据向导的说法，大部分人这个时候已经接近了大本营，然而我还距离那里很远。现在早已离开了栈道，变成了完全的泥地。马蹄印子深深浅浅，雪也零零落落。路途经过了一两个寺庙，和播放着防火广告的电视（这令人非常惊讶，且早就没有了踪影）。来的路上偶尔碰到了几个登去大峰的人，但毕竟每个人都有自己的节奏，没有聚成同行者的可能，见面聊了几句之后就各自爬各自的了。</p><p>　　我看着他们骑着的马远离了我的视线，曲曲折折地在山脊上游走，我的道路才真正开始。最后的三公里路。这一段路比之前的更加恶毒，山间的风顺着山的一侧刮过来，持续不断。我贪婪地搜索着没有风的角落，但在我刚刚坐下的时候，一阵更猛烈的风就突然吹了过来。随着时间的推移，山的阴影开始越来越大，风的温度也随之下降。这个时候已经不能长时间的休息了，只需要停上一分钟，身子就会冷上大半，酸痛和疲劳就会从每个角落涌出来。靠着石头休息一会吧，半分钟。</p><h2 id="八"><a href="#八" class="headerlink" title="八"></a>八</h2><p>　　天快黑了，我看见一个登山者灵巧地顺着一条窄路往上移动。我应该在刚才他与我擦肩而过的时候向他讨一口水喝，就不至于我现在正盯着远处的积雪想入非非。水是重要的，但冰水恐怕对心脏不利，这不好。我觉得口干，但没有任何办法。或许现在还剩600米了。我往上走两步，就用登山杖杵着歇一小会。天黑之前我必须走到大本营，不然事情会更加复杂。我侧身往下看去，不远处是那个800米的标牌，旁边坐着刚刚和我聊过天的另一队人的向导以及那一队人。他们坐在那里休息，那里确实不错，没有风，有块相当大的石头用来歇脚。我往上望一望，嗯，不远了。</p><p>　　这恐怕就是口是心非，我大概只知道我需要往上爬，但完全搞不清楚情况。我现在有些头晕，应该是高原反应的影响吧；两条腿也开始慢慢不听使唤，这应该也是高原反应的影响吧。600米。我恍惚间看到远处的一个山尖上出现了一个人影，他在向我招手。这是L、X还是向导？还是说只是我的错觉？头疼。</p><h2 id="九"><a href="#九" class="headerlink" title="九"></a>九</h2><p>　　我已经听见了汽车的声音，黄色的灯光已经染上了我眼前的区域。很快我就要离开这座山进入现代的世界，然后阻拦在我面前的是一段崎岖、狭窄、陡峭的下山路。我的同伴已经不见了踪影，他们并不费力地就消失在了我的视线里。我想起下山的时候，有一段路很陡，向导看不了两匹马，于是状况稍好一点的X只能先下马和我一起跟在马队后面。然而X的状况只是稍好一点，我们只是走几步路，他就会被黑暗遮住，只剩下头灯的些微亮光在灌木丛的影子间闪烁。</p><p>　　我现在在他们眼中就是这样吧，甚至还要狼狈许多。一路上的下山路都是这样，崎岖、狭窄且陡峭。我觉得它们磨破了我脚底的每一寸皮，顶破了我的指甲。落脚的时候我觉得麻或者疼。然而这样的路又一次出现在了我的面前，就在与舒适一墙之隔的地方。每迈出一步我就得嘀咕一些什么，然后吸一口凉气。复杂，爬山原来是这么复杂的事情。我一下子多了许多想要抱怨和咒骂的人和东西，只是因为我自己的无能、怠惰和执拗。但果然我还是要这样做，即使我分明地感受到了挫败。</p><h2 id="十"><a href="#十" class="headerlink" title="十"></a>十</h2><p>　　我的靴子上沾满了泥土和灰尘，已经和它最开始的样貌完全不一样。爬山这样的事情，我的靴子记得比我更牢，它在一日之内与这座山交谈了几万次。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>　　完成这篇游记的时候已经是3月3日了，距离最开始写作这篇游记又过去了一段时间，其实一些感受已经淡忘了。我一直在迟疑不定应该讲述哪些事情，同时放弃哪些。因为这实在是一个枯燥且琐碎的一堆事情拧成一团，但我又不得不认为这件事情本身有记录的必要。所以搁置了如此之久，以至于峨眉之行回来后才匆匆结束了这一篇。</p><p>　　希望匆匆了结这篇的另一部分原因是，我在考虑是否需要记录前几日峨眉之行（那是另一个复杂的故事）。如果这篇不结束，是没有办法做那个考虑的。</p><p>　　我想之后或许还有攀登这座山的机会，尽管我心里非常清楚这个行程和受苦无异。起名为《蒙尘记》只是一些自嘲而已，没有什么狂妄的想法。那么就写到这里吧。</p><p>2021-3-3，作于家中。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《金枝》诡言</title>
      <link href="/2020/essay/%E6%9D%82%E8%AE%B0/%E3%80%8A%E9%87%91%E6%9E%9D%E3%80%8B%E8%AF%A1%E8%A8%80/"/>
      <url>/2020/essay/%E6%9D%82%E8%AE%B0/%E3%80%8A%E9%87%91%E6%9E%9D%E3%80%8B%E8%AF%A1%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>正式开始阅读《金枝》，但并没有什么特别的目的。也就使抱有好奇心地消磨一些时间罢了。看了没多久，就发现这是一本充满了古怪故事和传统的书。将有趣的地方记下来，应该会很不错吧。所以这里记录的是《金枝》阅读的过程中收集的有趣的民俗故事。</p><a id="more"></a>  <h2 id="第一章：森林之王"><a href="#第一章：森林之王" class="headerlink" title="第一章：森林之王"></a>第一章：森林之王</h2><ol><li>内米湖旁的祭司：祭司的候补必须杀死祭司才能继任祭司的职务，祭司会一直担任这个职务直到死亡。</li><li>森林之王：内米圣殿内有一棵特殊的树，一般人不能砍下他的树枝，除了逃亡的奴隶。奴隶能用砍下的树枝要求与祭司决斗，一旦成功，他就能继任祭司的职位，并获得“森林之王”的称号。</li></ol><h2 id="第三章：交感巫术"><a href="#第三章：交感巫术" class="headerlink" title="第三章：交感巫术"></a>第三章：交感巫术</h2><ol><li>希望拥有孩子的妇女：在巴伯尔群岛，希望拥有孩子的妇女，需要找到一个多子的男性。这个男性需要做一个布娃娃，让这个妇女抱在怀中假装喂奶。然后男性需要将一只鸡举在妇女的头上，并念出祷告，希望神接纳这个祭品。随后男性问妇女，“孩子到了吗？”妇女需要回答，“是的，已经在喝奶了。”随后需要把鸡杀掉，摆上祭坛。四处传话说这个妇女已经开始分娩了，并请她的女性朋友来贺喜。这是一个祈求生子的仪式。</li><li>怀孕的男巫：达雅克人在妇女难产时，需要找来两个男巫，其中一个帮助生产。另一个站在门外，把一块石头放在自己的肚子上，用布把自己和石头包裹起来。来回移动自己的石头，模拟婴儿的动作，来帮助生产。</li><li>死而复生：在古希腊，如果男子被误认为死亡，并举行过葬礼，那么他需要：钻过女人的裙子，洗净全身，被包裹在襁褓之中送到奶妈那里。只要这个仪式不结束，他就不能在活人间自由活动。</li><li>治病的鸟：如果罹患黄疸病的人和一只石鹡鸰对视很久，他的病就会被这只鸟代为承担，因为鸟的眼睛是金色的。</li><li>生病的医生：在法国帕奇，如果病人呕吐不断，是因为胃“掉了下来”，需要医生帮助归位。医生采取的行动是，做一些扭曲的动作，将自己的胃也弄脱落，然后继续扭曲，代表胃的归位。</li><li>抓捕猎人的陷阱：在柬埔寨，如果一个猎人长时间没有收获，他便会脱光自己的衣服，走开一段距离，漫不经心地踩中自己的陷阱，并大叫“哎呀，这是怎么回事？我被抓住了！”随后这个网便会被认为能够抓到很多猎物。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件安利（Win10 &amp; Win11）</title>
      <link href="/2020/essay/%E5%AE%89%E5%88%A9/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%88%A9%EF%BC%88Win10%EF%BC%89/"/>
      <url>/2020/essay/%E5%AE%89%E5%88%A9/%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%88%A9%EF%BC%88Win10%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>一时兴起想做这个东西的整理，因为个人习惯的缘故，会找一些奇奇怪怪的工具挨个尝试。</p><a id="more"></a> <h2 id="主力软件"><a href="#主力软件" class="headerlink" title="主力软件"></a>主力软件</h2><p>这一部分是日常中使用最多的软件集合，基本是在诸多的淘汰筛选后的幸存者。</p><ol><li><strong>Notion</strong>：笔记类工具，模块化笔记的先驱之一。自从免费账户可以在一个工作区内无限创建block的时候开始，这个笔记就稳坐众多笔记软件之首（后面多多少少有尝试过一些别的，但总觉得差一些味道。）能够轻松地公开笔记本，以及导出为html或者md。自带的数据库功能非常惊艳，也是竞品没有的特色。对于它的桌面端，其实就是个网页的套壳，可以安装对应的enhancements插件提升桌面端体验。缺点是离线能力较差。</li><li><strong>Vivaldi</strong>：浏览器软件，多年的浏览器主力。Chrome内核。花样繁多的自定义功能，可以任意调节、隐藏的浏览界面。总能够调整到一个令人满意的风格。此外，自带邮件和RSS嗅探等诸多功能。缺点是体量较大，并没有比Chrome更快。极特色功能是快捷指令。（现由于吃内存过多且有时候反应不够迅速改为火狐。）</li><li><strong>FireFox</strong>：浏览器软件，在Linux下够快，在国内同步书签够方便，比Vivaldi更简洁。89版火狐颜值在线。</li><li><strong>VS Code</strong>：编辑器软件，码字和码代码的主力。自建脚本和异常灵活的快捷键都是它的优势。对于诸多文件格式都有合理的高亮方案。各式脚本也是花样繁多。常用的包括特殊注释高亮、AI自动补全、GitLens功能。VSC和GitHub的相性非常出色。同样带有Vivaldi那样的快捷指令。</li><li><strong>Mail</strong>：Win10自带的邮件软件，可以很好地使用Outlook和学校邮箱，风格简单明了，和Win10当然相性是最好的。</li><li><strong>Edge</strong>：PDF阅读器。流畅的阅读体验和极快的打开速度，和Surface的笔也是非常般配，写写画画体验甚好。更新Chrome内核后可以完全替换Chrome，加上轻量的主题系统，很不错。</li><li><strong>便签</strong>：Win10自带应用，支持Surface笔，打开迅速。在遇到需要短时间记录信息的时候使用（就不用新建txt了）。</li><li><strong>Listary</strong>：强有力的文件搜索软件和启动器。快速导航到打开文件夹的能力非常强悍。对于程序员而言，能在文件浏览器内飞速在当前位置打开cmd是非常必要的功能。</li><li><strong>Logseq</strong>：新兴的笔记软件，优势是自带PDF标注功能，可以生成图谱。并且支持卡片式笔记。</li></ol><h2 id="主力软件辅助"><a href="#主力软件辅助" class="headerlink" title="主力软件辅助"></a>主力软件辅助</h2><p>这一部分软件是为了弥补之前的软件的一些缺陷而偶尔使用的软件。</p><ol><li><strong>Chrome</strong>：出于多种原因，这个软件还是得用。</li><li><strong>Typora</strong>：尽管编辑任务已经全部交给VSC了，偶尔也需要使用Typora查看一下内容或者导出为特殊风格的PDF。如果只是码字的话，这个软件也是非常好用。（但不知道为什么会有点慢）</li><li><strong>OneNote</strong>：写写画画的时候，就会打开这个软件。</li><li><strong>Aurora Music</strong>：界面美丽的音乐播放器。在不想使用流媒体打扰自己的时候，一个小巧精美的本地播放器总是有用的。</li><li><strong>One Commander 3</strong>：资源管理器，自带预览功能和部分文本预览功能，支持分栏、多Tab等功能，比Win10原版管理器高效很多。缺点是不兼容Listary的快捷指令。</li></ol><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>这一部分是一些辅助工具。</p><ol><li><strong>Snipaste</strong>：截屏工具。可以在任意界面截屏，提取色号，对截屏批注，或者将截屏钉在桌面上。非常实用且简单的软件，使用频率也异常高。</li><li><strong>QuickLook</strong>：快速查看文件的软件。使用空格可以快速打开md等文本文件，以及图片文件、音乐文件等等。只是需要浏览图片文件，而不用修改的情况下使用。</li><li><strong>ModernFlyouts</strong>：一个装饰性软件。将音量增减、亮度增减、大小写转换等空间，用更符合Fluent Design的规格呈现出来。</li><li><strong>f.lux</strong>：自动调节屏幕色温软件。在夜晚变得温暖。</li><li><strong>SSR</strong>：酸酸乳，方便地飞出高墙。</li><li><strong>AutoHotKey</strong>：实现按键重映射的软件。由于个人习惯使用”Ctrl+W”这样的指令关闭软件，然而Win10没有一个方便的修改快捷键的方案，所以使用这个软件重映射。此外一些按键也可以通过这个方法冻结。</li><li><strong>Fences</strong>：桌面管理软件。将桌面的图标自动归类到预设的格子中。至少桌面是整洁的。</li><li><strong>SpaceKeteer</strong>：查看文件占用空间的软件。将文件占用的空间按照饼状图呈现出来，并可以下降到更深的文件夹查看更细致的占用空间情况。方便快速找到占用空间大的无用文件。</li><li><strong>火绒</strong>：防火墙软件。能查看并阻止具有启动权限的软件自启，还具有管理右键菜单种种功能。（现已停用。）</li></ol><p>大概就是这样了。实在是没啥稀奇的。因为个人使用习惯的缘故，凡是能塞到Web里的软件，都交给浏览器负责了，所以具有客户端的软件大多是小修小补的功能性软件或者，放不进Web里的大软件（比如Anaconda，Unity…）。可能真正稀奇古怪的软件都在手机里吧。以及上述部分介绍实在简单地过分了点（比如Vivaldi和VSC），这些软件等到之后在整理的时候补上更完整的表述吧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>投子记</title>
      <link href="/2020/essay/%E6%89%8B%E8%AE%B0/%E6%8A%95%E5%AD%90%E8%AE%B0/"/>
      <url>/2020/essay/%E6%89%8B%E8%AE%B0/%E6%8A%95%E5%AD%90%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>冬天总是有诸多值得称赞的优点，空空荡荡的周日晚上的光华楼便是其中之一。总是寒冷这样的东西更有利于思考，热气则与之相反。所以我讨厌在并不很冷的场合开热空调的人，但对于那些在夏天开冷空调的人也喜欢不起来。 —— 在回寝室的路上，手上握着一个全家买的饭团，我不得不这样想。</p><a id="more"></a>  <p>希望是一种复杂的东西，情感也是。比如晚上学校的林荫道上，依偎黏糊在一起的情侣到处都是。他们希望从这样的关系中获得什么东西，是类似信赖还是被称作目标的东西？我想起之前一个朋友说，大学里是比较孤独的，人常常会丧失自己的立场变得软弱起来，这个时候需要一个能够依靠的人。是这样的吗？果然是复杂的东西。 —— 在回寝室的路上，看着在林荫道上走着的几对情侣，我不得不这样想。</p><p>这个时候和我一样呆在这个教学楼里的人，在想一些什么事情？在这个宁静的、有些寒气的、漆黑的晚上？这里的人应该各有各的愉悦或者担忧的事情（它门总是到处都有）。只是这一份宁静就足以使人感到长久的快乐，但哪怕一点点动静都会突然破坏这一份美好，变得尴尬起来。 —— 傍晚在教学楼里准备实验报告的时候，发现整栋楼里没有几个人的时候，我不得不这样想。</p><p>美好的食物是一个事件，而不是一个东西。只有在那个时刻，吃下的那个特定的食物，它的美味才会发挥出来，变成记忆里的某种东西。于是常常听到，“之前某一次吃的和这一次不一样，那一次要更加……”这样的言论，但终于怎么找寻都遇不到“那次”的食物。莫名地对于这些即将吃下的食物的期许会成为巨大的负担，让第二次被品尝的食物肩负的责任和第一次迥然不同。它不提供美味，而提供“像那样的美味”的体验。从另一个角度来看，被吃下的食物就变化了。所以食物是一个事件，一旦被吃下了，就不会再次到来。 —— 傍晚有朋友给我发来消息，说这一次的烤馒头，他不小心点多了并觉得不太好吃的时候，我不得不这样想。</p><p>白天在寝室睡觉的人是奇怪的东西。出于习惯的考虑，或许我并不批评那些午睡的人，也不批评那些晚起的人，也不批评生物钟颠倒的人。而是在下午三四点、傍晚六七点莫名其妙地睡觉，晚上也睡得充足的人。我不知道为什么我会觉得这一部分人奇怪或是莫名其妙，但总之这个事实令人不爽。仿佛生活是这样困难的东西，就连白天也没有行动的能力。 —— 傍晚我回到寝室，发现寝室里有人开着空调正在睡觉，我不得不又一次逃离这里的时候，这样想。</p><p>快乐也是一种匪夷所思的东西。在挥拍的时候，我并不觉得多么快乐。球以美妙的弧线和速度落在另一半球场的时候，我也不觉得多么快乐。球击中球拍的某个部位，那个部位将震动传递到我的手上，然后传递给我的大脑，于是我觉着我击中了球。但这样就能使人快乐吗？我是因为快乐，才此时站在球场上的吗……或许是类似成就感的东西吧？比起这些劳神费力的工作，今天的明亮的月亮更加令人觉得舒畅。 —— 站在球场上，击回一颗球并且出界的时候，我不得不这样想。</p><p>人的喜好总是难以捉摸。有一波人喜欢这样一些东西，另一拨人喜欢那样一些东西。对于一部分人索然无味的点，在另一部分人眼中则诱人到异常。越是容易被大众所喜爱的事物，越是有着广泛的概念，类似可爱、温暖这些字眼；越是小众冷门的事物，框定的范围就越狭窄。我想当这些广泛的关键词被使用的时候，或许只是出于惯性地使用了它门，而非真正如此认为，或者它没有构成真正表示喜恶的理由，又或者出于语言的匮乏，才如是表达；而当一些狭窄的关键词被使用的时候，或许是出于时髦而使用了它门，而非真正如此认为……人总是无法称心如意地创造自己的语言，因为语言是用来交流的工具。 —— 当我在动漫的弹幕里发现了一大片“可爱”之类字眼的时候，不得不这样想。</p><p>大多数问题没法回答也没什么价值，但问题都会或多或少使人感到好奇，而没有答案的问题就会使人沮丧。我自然不希望人是如此容易被理解且无聊的东西 —— 他们应该更复杂多变，但多变或许促使了另外一种无聊的诞生。完。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件安利</title>
      <link href="/2020/essay/%E5%AE%89%E5%88%A9/%E6%8F%92%E4%BB%B6%E5%AE%89%E5%88%A9/"/>
      <url>/2020/essay/%E5%AE%89%E5%88%A9/%E6%8F%92%E4%BB%B6%E5%AE%89%E5%88%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这里是一些安利的 Chrome 插件（新开了 “安利” 的 Tag），从原来的网站页独立出来。就是一些古怪的插件而已。</p><a id="more"></a>  <p>由于我使用的浏览器 Vivaldi（现为 Firefox）提供了太多的功能，这些功能部分与一些非常优秀的插件冲突。但出于个人习惯，不对这类优秀插件进行记录，但欢迎告知。</p><ol><li><a href="https://chrome.google.com/webstore/detail/embark-new-tab-page/aeajehgeohhgjbhhbicilpenjfcbfnpg" target="_blank" rel="noopener">Embark</a>：一个 Tab 插件，新 Tab 为数字时钟，背景为一些风景照。</li><li><a href="https://chrome.google.com/webstore/detail/mainichi/dfekdjmdikicceaiokcmmchenpilglhn" target="_blank" rel="noopener">Mainichi</a>：一个 Tab 插件，新 Tab 为一个小色块，里面是不同的图片，及其对应的日语平假名、日文汉字及读音。</li><li><a href="https://chrome.google.com/webstore/detail/ 几枝 /hfohpokminpknagcgncibpacohagppjn" target="_blank" rel="noopener">几枝</a>：一个 Tab 插件，新 Tab 为横置或竖置的两句古诗（标注作者和标题），以及一些不算艳丽的波浪做底。</li><li><a href="https://chrome.google.com/webstore/detail/new-tab-startup-quotes/bljnhgkajocmhlflgefahihojeajhjji" target="_blank" rel="noopener">New Tab Startup Quotes</a>：一个 Tab 插件，新 Tab 为一句企业家的名言、鸡汤，背景为白色。</li><li><a href="https://chrome.google.com/webstore/detail/imagus/immpkjjlgappgfkkfieppnmlhakdmaab" target="_blank" rel="noopener">Imagus</a>：方便快速地查看 Web 中的图片。</li><li><a href="https://chrome.google.com/webstore/detail/kami-extension-pdf-and-do/ecnphlgnajanjnkcmbpancdjoidceilk" target="_blank" rel="noopener">Kami</a>：阅读并批注 PDF，可以和 Google Drive 同步。作为 PDF 阅读器，功能强大。</li><li><a href="https://chrome.google.com/webstore/detail/minimal-scrollbar/ekopmclclddpoipchmcbhifohhbmjafd" target="_blank" rel="noopener">Minimal Scrollbar</a>：缩小浏览器默认的粗大的滚动条。</li><li><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a>：管理使用的网络代理方案。</li><li><a href="https://chrome.google.com/webstore/detail/ 沙拉查词 - 聚合词典划词翻译 /cdonnmffkdaoajfknoeeecmchibpmkmg" target="_blank" rel="noopener">沙拉查词</a>：网页上快速查询英文词汇，很方便。</li><li><a href="https://chrome.google.com/webstore/detail/ 为什么你们就是不能加个空格呢？/paphcfdffjnbcgkokihcdjliihicmbpd" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a>：自动给中英文加上空格。注意：这个功能和部分文字框存在冲突（例如 Overleaf。）</li><li><a href="https://chrome.google.com/webstore/detail/nutab/hbflaeaeaoabekejplknlenmohgoaodj" target="_blank" rel="noopener">nuTab</a>：一个 Tab 插件，插件为一个空白的 Markdown 界面，可以随时修改。并且可以添加喜欢的网站到该界面方便随时访问。（非常适合建立待办的方法。）</li><li><a href="https://chrome.google.com/webstore/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa" target="_blank" rel="noopener">RSSHub Radar</a>：主动嗅探网页支持的 SSR 资源，包括 B 站漫画等等。</li><li><a href="https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk" target="_blank" rel="noopener">Notion Web Clipper</a>：Notion 官方的内容收纳工具，不过没有印象笔记的同样插件好用。</li><li>Sala Key：快捷键系统。由于离开了 Vivaldi，需要使用一套新的快捷键方法。这个方法比普通快捷键更快，比如连击 w 视为关闭 Tab。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stopping by Woods on a Snowy Evening</title>
      <link href="/2020/essay/%E8%AF%97%E6%AD%8C/Stopping%20by%20Woods%20on%20a%20Snowy%20Evening/"/>
      <url>/2020/essay/%E8%AF%97%E6%AD%8C/Stopping%20by%20Woods%20on%20a%20Snowy%20Evening/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-foTXzpUZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1060914" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>如<em>Out of the Rolling Ocean the Crowd</em>中所言，这里是接受委托翻译的原诗，以及个人的拙劣的翻译。</p><a id="more"></a>  <h2 id="原诗"><a href="#原诗" class="headerlink" title="原诗"></a>原诗</h2><h3 id="Stopping-by-Woods-on-a-Snowy-Evening"><a href="#Stopping-by-Woods-on-a-Snowy-Evening" class="headerlink" title="Stopping by Woods on a Snowy Evening"></a>Stopping by Woods on a Snowy Evening</h3><p>by Robert Frost</p><blockquote><p>Whose woods these are I think I know.<br>His house is in the village though;<br>He will not see me stopping here<br>To watch his woods fill up with snow.</p><p>My little horse must think it queer<br>To stop without a farmhouse near<br>Between the woods and frozen lake<br>The darkest evening of the year.</p><p>He gives his harness bells a shake<br>To ask if there is some mistake.<br>The only other sound’s the sweep<br>Of easy wind and downy flake.</p><p>The woods are lovely, dark and deep,<br>But I have promises to keep,<br>And miles to go before I sleep,<br>And miles to go before I sleep.</p></blockquote><h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><h3 id="驻足林间雪夜"><a href="#驻足林间雪夜" class="headerlink" title="驻足林间雪夜"></a>驻足林间雪夜</h3><p>我想我认识这个林子的主人，<br>他的屋子就在不远处的村里；<br>他不知道有人在这里驻足，<br>为看着他的林子灌上冬雪。</p><p>我的小马驹必觉得古怪，<br>为他所停之地，附近没有农家<br>在林子与结冰的小湖间，<br>在这年最幽暗的傍晚里。</p><p>他晃起他刺耳的铃铛<br>问我是否搞错了什么。<br>这之外只有细簌声响，<br>是习风吹拂雪花滑落。</p><p>这个可爱、幽暗而深邃的林子呵，<br>但我还有需要遵守的诺言，<br>在安睡前还有数里路得走呵，<br>在安睡前还有数里路得走。</p><h2 id="遇到的值得推荐的翻译"><a href="#遇到的值得推荐的翻译" class="headerlink" title="遇到的值得推荐的翻译"></a>遇到的值得推荐的翻译</h2><h3 id="雪夜林驻"><a href="#雪夜林驻" class="headerlink" title="雪夜林驻"></a>雪夜林驻</h3><p>林主我应识，屋舍村中栖。<br>不见我驻马，独看雪满枝。<br>小马当踟蹰，何故停荒隅？<br>今岁最黑夜，幽林间冰湖。<br>摆颈响铃语，问讯何差池。<br>万籁皆寂寂，雪软风依依。<br>佳林何幽深，有约不能迟。<br>前路几多远，方到入梦时。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>不太想谈对于这首诗歌的理解。倒是想说说翻译的过程。翻译这首的难点或许在于原诗的那种微妙的意境，是一层轻薄的纱，一捅就破。读到后面，仿佛有一种”小桥流水人家“的味道。但又不那么有力，而是亲切地、温和地满进来，是哀而不伤的味道。</p><p>这个翻译的事情挺好玩的。本来只是友人让我帮忙想想。于是思考翻译的途中，自己为了整理思路翻译了一个版本。既然翻译出来了，不妨拿来做一做盲评，于是拣选了一些已有的翻译给大家评价。这个评价的结果姑且不言，整个过程实在是充满了乐趣。讨论的人群壮大起来，传来传去，突然有一种雅集的味道。想想以后或许还能够组织一点点这样的趣味活动，解解乏。</p><p>以及我考虑之后听从了大家的意见，把第二节后两句最开始的第一个”且“字去掉了。此外由于自己水平不够，于是完全放弃了对于原诗韵律的呈现，不得不说是一个相当大的缺陷。欢迎读者也尝试一下咯。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌？ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Out of the Rolling Ocean the Crowd</title>
      <link href="/2020/essay/%E8%AF%97%E6%AD%8C/From%20the%20rolling%20ocean/"/>
      <url>/2020/essay/%E8%AF%97%E6%AD%8C/From%20the%20rolling%20ocean/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>一位友人突然由于翻译课找到我，邀请我一起翻译佛洛斯特的诗歌<em>Stopping By Woods on a Snowy Evening</em>，想起了早些时候翻译的这一首惠特曼的诗。所以放一个原文在这里当作一个记录，翻译稿已经不太找的到了。欢迎有兴趣的读者自行尝试翻译。</p><a id="more"></a>  <blockquote><p>Out of the Rolling Ocean the Crowd<br><strong>Walt Whitman</strong><br>Out of the rolling ocean, the crowd, came a drop gently to me,<br>Whispering I love you, before long I die,<br>I have travel’d a long way, merely to look on you to touch you,<br>For I could not die till I once look’d on you,<br>For I fear’d I might afterward lose you.</p><p>Now we have met, we have look’d, we are safe,<br>Return in peace to the ocean my love,<br>I too am part of that ocean, my love, we are not so much separated,<br>Behold the great rondure, the cohesion of all, how perfect!<br>But as for me, for you, the irresistible sea is to separate us,<br>As for an hour carrying us diverse, yet cannot carry us diverse forever;<br>Be not impatient—a little space—know you I salute the air, the ocean and the land,<br>Every day at sundown for your dear sake my love.</p></blockquote><p>这首诗原文很清晰，但恐怕翻译起来难度不小。就以最后一句为例，实在是很难搞定这种英文表达带来的奇妙感受。Anyway，我先尝试完成佛洛斯特的那首小诗吧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌？ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被打断的马七</title>
      <link href="/2020/essay/%E9%9F%B3%E4%B9%90/%E8%A2%AB%E6%89%93%E6%96%AD%E7%9A%84%E9%A9%AC%E4%B8%83/"/>
      <url>/2020/essay/%E9%9F%B3%E4%B9%90/%E8%A2%AB%E6%89%93%E6%96%AD%E7%9A%84%E9%A9%AC%E4%B8%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>上海音乐学院歌剧院建成没有多久，第一次进这个厅。但体验实在一言难尽。</p><blockquote><p>地点：上音歌剧院<br>时间：2020年11月8日<br>指挥：张亮<br>乐团：上海爱乐交响乐团<br>座位：乐池正前方偏音乐厅后部<br>开始前的食物：港式餐厅</p></blockquote><a id="more"></a>  <p>　　《马七》本身是一部晦涩的作品，在此之前听了很多次也不得要领。由于这部作品的冷门，对于这种部作品的讨论也很少。令人印象最深刻的果然还是第一乐章最开始的那个标志性的不和谐音。比较有趣的地方是第一次见识到这么多配器的同时使用。吉他、曼陀铃、管锺、钢片琴、沙锤、锣等等。特别是曼陀铃的声音，十分独特有趣。（当时我听到曼陀铃的时候想了很久这个乐器是什么，发现是曼陀铃之后又在乐池里找了一阵子。果然我对这个曲目非常不熟悉。）最后的疑惑是，现场的吉他应该是加了扩音器的。但是在马勒的时代，扩音器也被使用了吗？如果没有，后面的观众想必听不见吉它的声音吧。<br>　　<br>　　但听完的感悟果然还是我不懂这部作品。不知道它在描绘什么样的意境，有什么样的故事。虽然其名为夜曲，在第三乐章依旧十分张扬。我实在没太懂。乐团现场演绎平平，不过众多的独奏没有明显翻车还算不错。</p><p>　　然后是上爱。不知道是不是由于这是新开放的音乐厅，观众尚没有建立起好的礼仪。在第一个乐章结束的时候，竟然传来了不小的鼓掌声。甚至有一些没能及时入场的观众在这个时候入场，使第二乐章和第一乐章完全割裂，意境全无。更甚的是，在后面每一个乐章间，观众依旧鼓掌，声音甚至更大了。实在不太能理解。</p><p>　　以及进场的手续问题。为了进场，经过了检查健康码、形成码、两次验票种种繁杂冗余的步骤，是在给人留下了很糟糕的印象。想上一次听贝多芬也不是如此场景，实在滑稽。</p><p>　　总而言之，是一场不太妙的演出。也很难给人留下深刻的印象。着实有些失望。最后回寝室的路上。听见一起去现场的乐迷朋友说，上交的某场演出，有一次因为观众在乐章间鼓掌，指挥转过身用指挥棒指着那个鼓掌的区域良久。上交的观众确实是不鼓掌的，在我印象里。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joseph&#39;s S8</title>
      <link href="/2020/essay/%E7%89%A9%E5%BF%97/Joseph&#39;s%20S8/"/>
      <url>/2020/essay/%E7%89%A9%E5%BF%97/Joseph&#39;s%20S8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-PhkRjGOZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="472141225" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>　　今日他的使命至此终结。把他的自动开机，闹铃取消后，关机放在一边，顿时五味杂陈。从此之后，Joseph 的蓝牙配对菜单少了这样一个朋友。多图预警。</p><a id="more"></a> <p>　　他的前任是黑莓 Z10，另一个手机巨头的绝唱。在 2017 年，年初，三星上半年期间 Galaxy s8 发布。那个时代的安卓机统一为魅族初创的三合一 Home 键，苹果仍停留在粗笨的 iPhone 6 时代的风格。高考结束后不久，这样一个手机出现在了我的手中。我还记得很清楚，当时坐在地铁上，我小心翼翼地，把他放在了他的包装盒里。父亲问我为什么不多用用，我不记得我回答了什么。但那是真正的，满足的感觉。s8 回应了我的期待。</p><p>　　快四年过去了。这一系列依此发布了 s9，s10，s20 三部。整个手机圈也出现了翻天覆地的变化，国产手机全面崛起，屏下指纹、120 瓦充电、120Hz 高刷，并抢先进入 5G 时代。经历了萨德事件和 Note7 事件，推出 s8 的三星在 17 年已经在国内市场站在边缘。如今三星已沦为了每年年报的 Others 角色，而苹果仅以自研芯片和 iOS 站稳脚跟。手机的形态也是千变万化，从三星、小米各自给出一套方案，随后苹果发布 iPhone X，将刘海屏推向市场。安卓机沦为一片刘海和水滴屏的世界，其后挖孔屏和机械结构升降屏也出现在了市场。</p><p>　　非常遗憾。</p><p>　　我的 s8 是当时被称为“烟晶灰”的一个颜色，机身通体颜色保持暗银色，在深沉的光线下会透出紫色。在当时一众 5.4 寸手机中引入 5.8 寸 18：9 屏幕（当然之前还有突破性的小米 Mix 一代。）鹤立鸡群。流畅的曲面设计和完全对称的真反面，让整个手机变成一个深邃的鹅卵石，在平面上几乎一个可以滚动的水珠。前面板上下边框宽度完全对称，左右边框则被曲面屏隐藏起来，完成了在那一年最为令人惊艳的作品。我很庆幸当时我做出了正确的选择，在之后几年一直至今我从未遗憾。</p><p>　　s8 基本是这段时间陪伴我时间最长的物件。刚拿到手机时会不断地倒腾各种新奇的功能，开发无数新鲜的玩法。恰好 s8 是一个藏宝系统，即使在我前几天仍在使用的途中我也能发现新鲜的功能。后面慢慢热情消却了，手机更多变成了一个工具而非一个玩具。收发信息、扫码付款变成了他的常态工作。但是每一次，当我把他放在桌子上的时候，新消息进入了我的手机，他那圆润的边框闪烁起一阵流光溢彩，我便能再一次欣赏他的风姿。</p><p>　　两个月前，我去掉了他的壳子。起因是我希望给后背清清灰，但就是这样的一个瞬间，我拿起他的时候，仿佛发现了一个新的东西，一种新的体验。是令人感动的手感和难以置信的轻便，从此他便以这样的姿态继续存在在我的生活中。三年多过去了，我还是偶尔会抱怨他突然卡起来，偶尔又掉电迅速。但毕竟已经有些年纪了，我便不为难他。</p><p>　　“手机”这样的工具，由于时时刻刻呆在自己身边，沾染了自己的气味，变得人性。从图标到壁纸，系统组件的颜色，各式工具的选择和搭配，都是手机用户性格的烙印。每次到晚上十一点时，看见他提醒我去查看明日的日程；到十二点时，他提醒我去休息。尽管我都不太听他的，但是仍为他的执拗感到快乐。我今天中午进入食堂的时候在想（那个时候，s8 正放在我的桌子上），他知道自己就要离开我了吗，他知道自己之后提醒休息的是另一个人了吗（这部手机之后会交给母亲，她或许希望继续使用，不过这个看她）。我是该为他知道“我”是我而高兴，还是为他不知道“我”是我而高兴呢？</p><p>　　或许之前就是所谓的恋旧吧。我不愿意把这个理解为是我习惯于自己的习惯，而状况在改变时感受到的不习惯。而是一种更加复杂的东西，或许是一种真挚的喜爱和抱歉的心情。</p><p>　　这么多年后，我还想得起，当时在三星专卖店，第一次看到它的时候，听见的那首歌。那一切的场景，都如此生动。啊，哎。很高兴遇到你，在那个时候，那个地点。</p><p>　　以下是他陪伴我走过的地方，见证过的风景。</p><center><img src="/images/Things/s8/1.jpg" width="80%" height="80%" />摄于17年9月4日，复旦大学南区，刚刚入校。</center><center><img src="/images/Things/s8/2.jpg" width="80%" height="80%" />摄于17年9月7日，复旦大学南区，住宿区楼下的猫。</center><center><img src="/images/Things/s8/3.jpg" width="80%" height="80%" />摄于17年9月20日，复旦大学本部，社团招新。</center><center><img src="/images/Things/s8/4.jpg" width="80%" height="80%" />摄于17年9月23日，家乐福里的奇怪物种。</center><center><img src="/images/Things/s8/5.jpg" width="80%" height="80%" />摄于17年9月28日，前往张江参加中秋活动，从张江回本部途中。</center><center><img src="/images/Things/s8/7.jpg" width="80%" height="80%" />摄于17年10月01日，遇见我喜欢的专辑。</center><center><img src="/images/Things/s8/9.jpg" width="80%" height="80%" />摄于17年11月11日，去同济蹭的音乐会。</center><center><img src="/images/Things/s8/10.jpg" width="80%" height="80%" />摄于17年12月11日，正在上大物课的时候往窗外望去。</center><center><img src="/images/Things/s8/11.jpg" width="80%" height="80%" />摄于17年12月12日，为了给嘉祥的校友加油，在校门前录像时天气甚好。</center><center><img src="/images/Things/s8/12.jpg" width="80%" height="80%" />摄于18年1月25日，寒假回家，和三弟重访三星堆。</center><center><img src="/images/Things/s8/13.jpg" width="80%" height="80%" />摄于18年2月15日，家里对面的湖，湖旁的樱花树开了。</center><center><img src="/images/Things/s8/14.jpg" width="80%" height="80%" />摄于18年3月18日，相辉堂开膛演出。</center><center><img src="/images/Things/s8/15.jpg" width="80%" height="80%" />摄于18年4月27日，去同济蹭的踢踏舞，坐在第一排正中央。</center><center><img src="/images/Things/s8/16.jpg" width="80%" height="80%" />摄于18年5月4日，复旦旦苑的54套餐，一点也不好吃。</center><center><img src="/images/Things/s8/17.jpg" width="80%" height="80%" />摄于18年7月9日，丹霞地貌，在前往甘肃支教途中。</center><center><img src="/images/Things/s8/18.jpg" width="80%" height="80%" />摄于18年7月18日，调研当地非遗时特意造访的一个“景点”，其实只有一个小寺庙。</center><center><img src="/images/Things/s8/19.jpg" width="80%" height="80%" />摄于18年8月19日，和同学一起去乌镇。乌镇的墙很美。</center><center><img src="/images/Things/s8/20.jpg" width="80%" height="80%" />摄于19年1月17日，期末季结束后去看现代艺术展。</center><center><img src="/images/Things/s8/21.jpg" width="80%" height="80%" />摄于19年5月27日，校庆的那天，食堂里的西瓜。</center><center><img src="/images/Things/s8/22.jpg" width="80%" height="80%" />摄于19年7月5日，去珠三角调研时，一群人去点都德吃早茶。“菜单上的通通来一份！”</center><center><img src="/images/Things/s8/23.jpg" width="80%" height="80%" />摄于19年7月19日，和Bobby去看《不眠之夜》，我将再去一次。</center><center><img src="/images/Things/s8/24.jpg" width="80%" height="80%" />摄于19年8月1日，抵达新加坡，第一次去鱼尾狮。</center><center><img src="/images/Things/s8/25.jpg" width="80%" height="80%" />摄于19年9月8日，第一次听到管风琴的独奏。</center><center><img src="/images/Things/s8/26.jpg" width="80%" height="80%" />摄于19年10月10日，新国立Utown的裸眼3D绘画，应该是一个到处旅游的画家画的。</center><center><img src="/images/Things/s8/27.jpg" width="80%" height="80%" />摄于19年12月4日，将离开新加坡前和Bobby吃的一顿鳗鱼饭，芥末很棒。</center><center><img src="/images/Things/s8/28.jpg" width="80%" height="80%" />摄于21年1月7日，返回成都前先前往了哈尔滨。抵达的第一天晚上，民宿小区里的兔子。这里一点都不冷。</center><center><img src="/images/Things/s8/29.jpg" width="80%" height="80%" />摄于20年1月8日，前往拜访圣索菲亚大教堂，可惜它还在装修内饰。</center><center><img src="/images/Things/s8/30.jpg" width="80%" height="80%" />摄于20年1月10日，和三弟前往滑雪的途中。</center><center><img src="/images/Things/s8/31.jpg" width="80%" height="80%" />摄于20年5月1日，和几位朋友徒步峨眉山。见到洗象池的时候，刚好两腿抽筋，跪在了面前。</center><center><img src="/images/Things/s8/32.jpg" width="80%" height="80%" />摄于20年5月2日，峨眉山的日出。</center><center><img src="/images/Things/s8/33.jpg" width="80%" height="80%" />摄于20年9月23日，贝多芬！</center><center><img src="/images/Things/s8/34.jpg" width="80%" height="80%" />摄于20年10月3日，在光华楼附近看到一个眯着眼睛在草地上打滚的猫。</center><p>感谢你，我的 s8。</p>    <div id="aplayer-OFAHVHLk" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5052770" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物志铭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‘Monster’观感（下）</title>
      <link href="/2020/essay/%E8%A7%82%E6%84%9F/Monster%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2020/essay/%E8%A7%82%E6%84%9F/Monster%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>请注意：该版本目前为草稿！请谨慎食用。</p></blockquote>    <div id="aplayer-WpmHliKV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="461353" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="评价：★★★★★"><a href="#评价：★★★★★" class="headerlink" title="评价：★★★★★"></a>评价：★★★★★</h3><p>　　这里是 Monster 剧评的后半部分。这一部分主要讨论人物塑造和主题问题。由于讨论内容的特殊性，将不可避免地剧透。请未观看过该部作品的读者一定不要进入后续剧情章节，除非各位觉得剧透并不是那么严重的问题。此外，本文作者没有经过任何仔细研究，本文内容请视为完全主观甚至胡说八道的。</p><a id="more"></a>  <h2 id="一个概述"><a href="#一个概述" class="headerlink" title="一个概述"></a>一个概述</h2><p>　　对于本部分的内容，个人并不希望将人物和其对应的主题区分开；而是以某些角色为核心，在阐述这些人物是如何构造的同时，讨论这篇人物对应的主题。这样的结构之所以可以实现，得益于 Monster 主题的多元性和模糊性。在观看的过程中我不得不认为，不同角色承载的主题是截然不同的，然而其整体又构成了一个大的主题（有的人说是“人性”，但个人并不认为是非常好的概括吧，这个概括太偷懒了。）</p><p>　　此外，不得不承认 Monster 涉及的众多主题，包括小人物身上承载的主题，是难以逐一梳理的。类似博德曼律师承载的“对于正义的执念”，迪特身上承载的“在接下来的日子寻找快乐”，以及 511 院长引出的“爱的教育”。这些小单元都有自己的精彩和值得思考的问题。我们将直接对这些问题放弃讨论。而将注意力放在以下二级标题的四个主题和对应的人物上。</p><p>　　在这一部分结束后，我将试图对于整部作品提出一些有趣的问题。由于这部作品充分留白的性质（我当然指的不是剧情上合理的解释这样的问题），一些问题存在一定思考的空间。在此之后，是对整部作品及本人的评价的一个简单总结。</p><p>　　P.S. 在本章节开始前，我试图部分回收上半部分的观点，对于 BGM 的批评。本作的 BGM 在大多数情况下是合理的，但是也不乏出戏的 BGM。上半部分中可能将这一点说得过重了一点，在此声明。</p><h2 id="葛利马、超人苏坦纳、没有悲喜的"><a href="#葛利马、超人苏坦纳、没有悲喜的" class="headerlink" title="葛利马、超人苏坦纳、没有悲喜的"></a>葛利马、超人苏坦纳、没有悲喜的</h2><p>　　葛利马首先出现在第 40 集，名为“Grimmer 的章节”。以葛利马为题的集数分别为第 42 集“The Adventures of the Magnificent Steiner”，及第 71 集“The Magnificent Steiner’s Rage”。期间自 52 集开始，葛利马承担罪责开始逃亡并进入暗线调查卢恩海姆，一直到 68 集重新进入主线。</p><h2 id="约翰、怪物、没有名字的"><a href="#约翰、怪物、没有名字的" class="headerlink" title="约翰、怪物、没有名字的"></a>约翰、怪物、没有名字的</h2><h2 id="天马、医生、无所适从的"><a href="#天马、医生、无所适从的" class="headerlink" title="天马、医生、无所适从的"></a>天马、医生、无所适从的</h2><h2 id="怪物是谁？"><a href="#怪物是谁？" class="headerlink" title="怪物是谁？"></a>怪物是谁？</h2><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
      
      
      <categories>
          
          <category> Draft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两只金乌（下）</title>
      <link href="/2020/essay/%E6%9D%82%E8%AE%B0/%E4%B8%A4%E5%8F%AA%E9%87%91%E4%B9%8C%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2020/essay/%E6%9D%82%E8%AE%B0/%E4%B8%A4%E5%8F%AA%E9%87%91%E4%B9%8C%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　金乌每日自阴影处起飞，连续飞翔一日到阴影处停歇，凡飞过之处，皆一片光明灿烂。</p><p>　　　　——《华嵇纪-卷三》</p><a id="more"></a>  <h2 id="古怪的画家（一）"><a href="#古怪的画家（一）" class="headerlink" title="古怪的画家（一）"></a>古怪的画家（一）</h2><p>　　当他从上级那里接到任务时，很诧异。</p><p>　　他从来都只是一个抓小偷小贩的警察，没什么能耐，更对不上人们称呼的“可敬的人民卫士”。除了可以每天每夜在一个地方蹲岗而无抱怨之外，毫无特色。上一次立功，就是因为在一个酒店的门前，他连续守了两个月，每日就吃些简单干粮过活。当嫌疑人终于大摇大摆出现在他的面前的时候，他差点没有力气抓捕嫌疑人。这都是些不足挂齿的事情，但是这次不一样。他突然觉得有什么，可以让他一下子飞黄腾达的机会；但也同样，可能意味着再也无法升迁。收到上级给他的资料后，他收拾收拾立刻就出门了。今天晚上……他想着这个事情，习惯性地整理了自己的制服，让它更笔挺了一些。一点差错都不能有，一点都不能。</p><p>　　他要拜访的第一位，9 点整，是住在那个临海的小片区的著名画家。听说这不算个不近人情的人，我还是直接去吧。他这样想着。咚咚咚，他敲响了这栋别致的小房子的门，并喊着“画家先生”。</p><p>　　伴随着一些不清晰的嘟囔和开门声，一个看起来还没太睡醒的不算年轻的年轻人出现在了门口，他立刻整顿了一下表情，立得更笔直了一些。几番寒暄后，他挤进了画家的门。他开门见山，立刻就击中了这一次希望讯问的东西。“先生，您知不知道那个叫做‘金乌’的盗贼？”对方没有回答，他突然觉得有些不知所措，他也愣在了那里。看着对方不知道如何形容的表情，他从包里掏出了一张纸，小心地给对方展示了一下。这是最最重要的证物，是串联起所有东西的物品。绝对不能弄坏，他这样想，于是只给对方草草地看了一下，连让对方碰一碰的机会都没有。</p><p>　　这是上级交给他的物证，从“金乌”的上一个据点里找到的。为什么说那个是“金乌”的上一个据点，是因为这个空荡荡的房间里写着“金乌”标志性的台词。除此之外有些生活的痕迹，以及在现场找到的这一张剪报和那张有烫疤的纸片。但是这些东西，对于这个尚且木讷的警察来说，并不意味着什么，唯一的线索就是眼前这个头发乱糟糟的画家。</p><p>　　见到对方表情仍然毫无变化，但做出了一个“看完了”的示意，他不得不收回了这张纸。然后掏出了那份剪报，但这一次，对方甚至没有把报纸全部抽出来就塞了回去。看来他想起这个事情了，他想，这是乘胜追击的时刻。在他正想开口的时候，想不到对方先开口了。“那么，警察先生造访寒舍，有何贵干？”他不得不觉得非常窘迫，好像自己的资质浅薄被对方看出来了，他更加紧张地坐直，摆出大势的样子，“没有什么，想知道您是否知道这位‘金乌’？”这一次我要堵住对方，于是立刻又说了一句，“这张纸是从‘金乌’逃逸的藏身处找到的。”</p><p>　　对方愣住了。果然我将住了他一军，他满意地想着。看着对方起身，他的内心也更加激动。“不，我想我不认识。”如此突如其然的拒绝，他突然觉得线索都断掉了，只剩下今晚还有机会。对方又在叽里咕噜地说些什么，但他没听确切。只是听到对方好像在询问自己的意见什么的，于是立刻拒绝了对方的请求，说了几句告辞的话，逃也似地离开了那里。</p><p>　　这是个古怪的画家，太糟糕了。我什么线索也没有找到，他一边摇头，一边大迈步，一边挥着双手的时候想着。不，有个事情，我需要确认一下。他停在了路口，走到最近的电话亭，拨下了画家家里的电话。这可真是个有钱人。</p><p>　　无人接听。</p><p>　　这个画家去了哪里。在这个短短的时间，这不对劲。这个，这哪里有问题。契机……顶着一头乱蓬蓬头发的画家、没睡醒的画家、装作不知情的画家，在我离开后的这一刻钟内，离开了自己的房间——为什么这么做，为什么这么做。只有一个事情起了变化，他从我这里得知了“金乌”的事，他得知了有人拿到了“金乌”的把柄，这个指向“金乌”的线索。</p><p>　　这个画家他慌忙地离开了自己的房间，原因只能有两个：他是“金乌”，他害怕地逃离了自己安稳的小房间；他是“金乌”的同党。是这样的，是这样的。这个木讷的小警察抓住了立大功的机会。抓住这个机会，抓住这个画家！这一切的想法充斥了他的脑袋，甚至在他还没听到“无人接听”的声音完全消失的时候，他就已经完成了这样伟大卓越的思考。抓住一切机会，抓紧一切时间。回头，去找那个古怪的画家。</p><p>　　他立刻离开了电话亭，朝着刚才来的路风风火火地行进。我不能太夸张，不能太张扬。这样打草惊蛇，我要镇定。于是他选择了用不正常的速度摇摆着双腿，装作若无其事地行进的样子，而不至于跑起来。很快他来到了画家的房前。他在门口观察了一小会，确认房间里暂时没有活动的痕迹，靠近了一些，从窗户外里看。里面果真没人。他跑啦，还是他去通风报信啦。</p><p>　　“您在干什么呀，先生？”他被吓了一大跳。他趴在窗户上，看着房间里的摆设如痴如醉，完全没注意到声音的来源，也完全没注意到自己像个白天里的贼。“这户人，这户人你看见了吗？你认识他吗？住在里面的那个画家？啊，你认识他吗？”他甚至没看见自己在和谁说话，也没注意到自己的领子也歪了，就吐出了一连串问题。当他说完，还在喘着粗气的时候，才注意到地上站这个不太高的，挂着报筒的小报童。这个小报童往门前看了一眼，“我知道他看了今天早上的报纸。”报纸？事情变复杂了，这个画家先看了报纸然后才离开。“你什么时候送的报纸？”“十分钟前。”复杂了，好家伙，这个报纸。“我要一份报纸！”他几乎是抢一般的，从报童手里夺过一份报纸。</p><p>　　在看到报纸的标题的时候，他突然快乐了，他破解了一切的谜题，他终于觉得自己不是个愚昧的人。他知道自己应该去哪里，去找谁，做些什么。他将报纸的钱和应该找零的钱一下子扔个报童，把报纸塞进了自己的包，离开了画家的家。</p><h2 id="屋顶的金乌（五）"><a href="#屋顶的金乌（五）" class="headerlink" title="屋顶的金乌（五）"></a>屋顶的金乌（五）</h2><p>　　我握着手里的报纸，慢悠悠地往博物馆走。今天虽然没有什么事情，但其实应该画一些什么画的。画室里还躺着昨天没有画完的一幅写生画——我正在描摹我的画室周围的动人景色。但显然这个突然发生的事情更加吸引我的注意，所以我正握着我的报纸走在通往博物馆的路上。</p><p>　　很快我走到了一个汽车站台附近，等到了一辆电车坐上去，继续完成我通往博物馆的行程。这个时候显然不是大家出行的时间，电车里基本上没有什么人。司机躲在那个幕布后面安静地驾驶着这辆车，让它看起来仿佛是自己动起来的——它确实是自己动起来的，但是它是怎么自己动起来的？作为一个艺术家，我是搞不懂的。但我应该动用我的创造力，去想象，它是怎么动起来的。既然叫电车，应该就是用“电”这种东西吧。“电”从上面那个管子里输到车的内部，这个东西通过“某种方式”驱动了轮胎，带着我们往前走。但“电”究竟是什么呢？这我就不懂了。</p><p>　　我看着窗外的景色莫名其妙地流动而不知原因，茫然地进行一些无厘头的思考的时候，我抵达了目的地附近。这是当地最富盛名的博物馆，有着号称全国最多、最全的藏品集，当然也配备着号称最先进的防盗措施和足够的安保人员。这样宏大的规模，即使不是周末也会有诸多游客和当地的小学组织的春游队伍造访。它总是和医院一样，熙熙攘攘的。</p><p>　　这是一栋简洁明了的建筑，有红色的素面墙壁，上面贴着白色的瓷砖；整体形状基本是一个巨大的立方体。不同面墙上有着不同样式的浮雕，并且也不是完全的平面，而是有轻微地波涛样的起伏。对于一般人来说，是非常古怪的样式；但从我的角度来看，这实在是一个别致的建筑，兼具着一种古典美和现代性。我曾经伏在这个建筑周围，连续几天研究墙壁上的图案流连忘返。里面的藏品就更不用说了，作为一个以传说为题材绘画的画家，这简直是不可多得的宝地。</p><p>　　但今天吸引我到这里来的，是别的东西。我注意到今天博物馆和往日的情况有着明显的差异：博物馆四周的安保人员并没有出现，而停着不少的警车。博物馆的门尽管开着却没有进进出出的游客样貌的人，更别说那些吵闹的、穿着时髦俏皮的小学生了。警车旁和门前都站着些胖大警察，穿着我方才才端详过的那种制服，三三两两地讨论一些什么。这个时候我才注意到，警车外面还拉着一条警戒线，把整个博物馆的大门围出了一个半圆形，半圆形外是几个拿着笔和纸，正在刷刷书写着的人。那些应该是记者了吧。我一边这样想着，一边也确认了今天的特殊情况让我到不了博物馆里。于是我找到了一家能看见大门附近样子的咖啡馆的座位，随便要了杯咖啡，从书架上拿出来一本不知道什么国家的作家写的翻译过来的书看了起来。</p><p>　　书的内容很滑稽，也不太有趣，讲的是一个渔夫，竟然愚蠢地在休渔期开始前的最后一天，睡过了而没能出海，被他的妻子连着骂了七天七夜的故事。而且我也总是不能很认真地看这本书，因为隔壁正坐着一个标致的年轻人（穿着虽然不算名贵但绝对讲究），他拿着笨重的钢笔在一沓纸上发出沙沙的声音。当然我没法打断他，说“你静静”。因为他看起来在做正事，而我只是个游手好闲地看滑稽剧的人。</p><p>　　当我抬起头有意无意地看向他的时候，他也突然抬起了头看向了我。他的眼睛很精致，眼角略微下垂，是很适合做速写的那种。“你是画家先生吧？”他侧了侧他的脑袋，“刚才，有一位先生告诉我，一位可敬的画家先生将会到这里来，并交给了我一张画家先生的照片。那上面的人像极了你。”我第一次觉得不妙。</p><h2 id="古怪的画家（二）"><a href="#古怪的画家（二）" class="headerlink" title="古怪的画家（二）"></a>古怪的画家（二）</h2><p>　　在他的面前，突然出现了这样一个人：一个严肃的男人——或许他可以这样认为。这个人穿着警察的制服，看起来有板有眼。警察交给他一张干净的纸条（神秘兮兮地），纸条上是干净的文字。“记者先生，一会这里会出现一个穿着随意的还算青年的人，他是一个画家。他会是今天‘金乌’盗窃案的关系人。”纸条后面贴着一张符合这个描述的小照片。就是这么一段话。作为一个岌岌无名的小记者（与梦想相悖），从来不曾有什么惊天大报道这样的事情（就业以来）。从来都是去一些小打小闹的地方，采访一些琐事。其实今天，他完全不应该到这里来。只是出于“记者的嗅觉”，他来到了这里，然后收到了这样一张纸条。他感激地看着那个离他远去的可敬的警察先生，并又一次看着手上的纸条。</p><p>　　他现在正坐在路边的一个咖啡馆，正对着那个“金乌”宣扬将要偷窃的博物馆（记者的情报总是比大众来得灵通）。于是他开始预演，这个神秘的画家和“金乌”的关系。实际上，他只是在一叠稿纸上写来写去，但是完全无法集中注意力。以致于他的笔发出的声音太大影响了周围的人这一点，他也没有察觉。他如此投入地进行着自己漫无边际的假想（这是职业所需！），甚至没有注意到旁边的客人已经换了一个。当他终于觉得自己口渴了，想要去抓住桌边的咖啡时，他注意到了。旁边的那个桌子上的顾客变了，变成了一个自己从未见过的男性。穿着随意，还算青年，出现在这里，这个早晨，和照片上的人非常像。这个人皱着眉头，露出一副想笑却有不想笑，一种恼怒却又谨慎的神情（完全不坦率的人）。</p><p>　　他受惊似的立刻移回了自己的视线，小心翼翼地装作继续写着稿子（不能打草惊蛇），并时不时地朝那边看去。那个画家好像看一本书出了神。那是怎样一本书，这本书和“金乌”的关系是什么。他知道，在战争时期，人们会使用两本一样的书作为密码本，然后通过标注页码和字的位置来传递密码。密码本。那本书回是密码本吗？（这太离谱了）他立刻收回了自己的目光，开始侧起自己的耳朵努力地听那边的一声一响。突然他意识到，对方正在抬头看着自己，他立刻慌张了起来，抬起了头，看着对方。“你是画家先生吧？”他尽可能地做出随意的样子，以免这样吓到对方。于是他意识到自己需要，更加严肃地、完整地告诉对方缘由（保持专业素养）。“刚才，有一位先生告诉我，一位可敬的画家先生将会到这里来，并交给了我一张画家先生的照片。那上面的人像极了你。”（愣头愣脑）他突然意识到自己不该说这么多，但说到这里他已经发现那个画家地表情发生了巨大的变化。是某种抽搐一样的表情，仿佛白天看见了什么怪物一般。</p><p>　　就在这个时候，天空中一阵巨大的轰鸣声。首先是一个灰色的头从博物馆上方露出来，然后声音越来越大，形态越来越完整，露出了两个翅膀。这个巨物的头遮住了刚从云里钻出来的太阳照下的光线，四周闪烁着诡秘的光影。顿时从那个巨物上，他感受到了一种压迫感，他甚至没能注意到那个画家的惊诧表情，和远处正在博物馆附近工作人员的混乱情况。直到这个庞然大物慢慢从视线里消失的时候，这种轰鸣中的奇怪寂静才慢慢消失，对话才成为了可能。他这个时候才注意到了对面一脸受到严重惊吓样的画家（嗯？）。“不过是飞行器，先生不必如此受惊。”（职业素养）他希望自己能够将话题拉回刚才的对话。就在这个时候，越过画家呆楞着的肩膀和头颅，他看见了后面的博物馆门前的样子。</p><p>　　那里的警察乱成一片。有一两个警察拿着黑色的盒子喊来喊去，警察开始四处跑动。有的警察手上拿着黄色警戒线，有的警察手上拿着棒子。他们开始无规律地、沿着各种方向地绕着整栋楼行进，留下剩下的一两个警察操着黑盒子大喊大叫。旁边的记者群体不甘寂寞，在警戒线外疯狂地闪着自己的闪光灯。那边发生了什么事情？尽管他这样急切地希望知道正在上演的一切，也不能撂下这个重要的画家（毕竟是关系人）。他迅速拉起了画家的右手，用自己的右手在桌上拍了一把钱，足以付清两个人的用餐（先这样吧），迅速超那个方向跑去。</p><p>　　在他拽着还没回过神来的画家跑到那群混乱的人附近的时候（至于这么吃惊吗），他只听见了这样的几句话。“‘金乌’比预告的时间早来了数个小时，尚未得得知博物馆蒙受损失情况，但‘金乌’的标志性留言已经出现在了博物馆的一面内墙上。”这显然是另一个记者正在一边疯狂地做着笔记一边无心念出来的话。</p><h2 id="屋顶的金乌（六）"><a href="#屋顶的金乌（六）" class="headerlink" title="屋顶的金乌（六）"></a>屋顶的金乌（六）</h2><p>　　在我面对着这个奇怪的记者不知道该说什么的时候，天上似乎响起了一阵轰鸣。嗯，是飞行器的声音。我感觉到我的头上产生了一大片阴影。但是……这是什么样的感觉呢：被“某个人物”恶意地玩弄。仿佛这个场景我在什么时刻经历过，在数年前，或者数天前；或者是精心策划好的。这个阴影有某种象征，让我突然觉得恐惧。就在同一个时刻，我捕捉到了我身后的一些细碎的声音，是一些人快跑的声音。<br>　　<br>　　事情的异变我也从正对着我看的那个眼睛精致的记者那里看出来了。他似乎说了什么，但是我完全没听清他在说什么。他直愣愣地看着我，或者说我的背面，他注意到了什么我也注意到了的事情。于是他立刻拽起了我的手，就在同时站了起来把我顺时针拽了九十度。我听见了远去的飞行器的声音、口哨的声音、人物跑动的声音、手掌拍到桌面上的声音、铜币落地的声音、有人高喊“金乌”的声音。我感到我的眼前的光景在不断地变化，并且感到自己正在任由那个记者的摆布。在我夺回了自己的意识的时候，我发现我已经站在博物馆前的警戒线旁了。</p><p>　　我对那个鲁莽的记者完全没有了兴趣，我只注意到了这样的一个现场。一群乱成一团的警察，以及一群乱成一团的记者。我发现我很快理解了这里发生了什么。“金乌”如同其预言的一样，来到了这个博物馆，拿走了一样东西。但是与预告不同的是，他出现在了一个不正确的时间，拿走了一个不值钱的东西，留下了标志性的那一段话，然后消失了。</p><p>　　很快我的耳朵告诉我，现场找到了一张新的纸条。纸条上是另一个预告，市内的另一个博物馆，一周之后的同一个时间，他将再次出现。这就是“金乌”么。我不禁哑然。这是我被拽到博物馆前的十分钟后，我花了这些时间掌握正在发生的一切，以及将要发生的一切。在这十分钟之后，我才意识到了这样一个事情。我的左臂被那个记者紧紧地抓住，我的右手周围突然出现了一个银色的铁环。我很快反应过来这是什么东西。然后看见了这个铁环，上面有一根链子，这个链子连到的另一端，是今早拜访我的、当时身板铁直、现在满脸通红的民警。</p><p>　　如今那个自己被玩弄的感觉越来越明显。就在我想着这样的事情的时候，眼前开始出现白色的飞沫，飞沫越来越稠密、覆盖了我的所有视线。随后我能看见的彩色的事物都变成了黑色，我完全进入了黑白雪花相间的世界。</p><h2 id="金乌的自白（一）"><a href="#金乌的自白（一）" class="headerlink" title="金乌的自白（一）"></a>金乌的自白（一）</h2><p>　　今天他去迎接那个著名的画家。画家因为蒙受了错误的冤屈，被他亲手送进了监察室。后来想起，他觉得自己当时实在是过于鲁莽，竟没有对着整个事情有些许怀疑。正当要按照手续对那个画家开始审理的时候，画家的嫌疑立刻被洗清了。因为”金乌“的又一次到访。这一次”金乌“再一次比他所预告的时间提前了数个钟头，搞得警察再一次颠八倒七。但如同上一次一样，被盗走的既不是博物馆最值钱的东西，也不是最有名的东西——只是一些花里胡哨的小玩意。</p><p>　　这完全一样的手法立刻让画家摆脱了冤屈，但是警署里完全乱成了一团。上司怒不可遏，拎起手边的东西就砸。他吓坏了，因为警察这一次部署不周有一部分自己的责任。好在后面上司没有怪罪下来。今天他接到上司的命令，去监察室带出画家先生，并赔几句礼，表示警方的歉意。</p><p>　　待他走到监察室外面的时候，仿佛画家已经听到了自己的声音。他听见里面传来断断续续的声音。“那张肖像，是你给的吗？”。他愣在了原地，肖像是指什么。“那张肖像，是你给的吗？”“肖像？”“那……看来不是你给的。果然是这样，呵呵，哈哈哈。”然后是几句非常局促干瘪的笑声。“来吧，你该带我出去了”</p><p>　　他打开门，看到了门口站着的画家。画家看起来神采奕奕，并露出异常嘲讽的表情。画家的眉毛高高吊起，并伸出一只手搭在他的肩膀上。“走吧。”他不知道该说些什么，他完全没有理解那个所谓的“肖像”是指什么，于是他忘记了赔礼道歉，只是木讷地沿着警察署的走廊一直往前。走到警察署的门口，画家收回了自己的手，又咯咯地笑了两声，附耳道，“我是‘金乌’，你并没有错。”然后转头出去了，留下他完全地愣在原地，脑中回荡着这个画家的最后一句话，以及那嘲讽的笑声。他完全不想追上去，再拷上他的手铐，但却不知道为什么。</p><h2 id="《华嵇纪-后记》（未发表）"><a href="#《华嵇纪-后记》（未发表）" class="headerlink" title="《华嵇纪-后记》（未发表）"></a>《华嵇纪-后记》（未发表）</h2><p>　　……</p><p>　　为了完成这部书，我花了很长的时间阅读整理文献，不知多少春秋，约莫半辈子。</p><p>　　某一个时刻，一个灵感进入了我的脑海：我想杜撰一个假的故事，埋在这本书里。我第一个想到的是太阳的形象，于是构想了太阳的某种使者，起名为了“金乌”。这样的形象在这个名字下渐渐具体了起来。我把关于这个生物的描述穿插在了一些别的有名的神话生物中间，草草得对这种生物加以勾勒。没有人质疑这样的形象，由于这部书其他的部分过于详实充盈。几乎所有研究者都将这部书推崇备至，成为一种典范。以至于从来没有研究者找到我来询问我关于“金乌”的事情。</p><p>　　退休以后，我停止了传说方面的研究工作，接任了一个小乡镇的图书馆管理员，偶尔也养养小花。工作很舒适，这个小镇子的优美环境也令人心旷神怡，是适合偶尔翻翻书的环境。一切都是恰到好处。</p><p>　　……<br>　　<br>　　这部分后记，已嘱托我在乡镇里的子女在我去世之后公布。我不太想承担诸多学者的对于这个事情的质疑和各种批评，但也有些许遗憾不能看到诸位老学究的气愤神情——那这部书就这样了，我能够确认，本书的其余部分都是依循已有的文献和实地采风拿到的信息完成的，仍然具有相当的研究价值，这一点还请诸位放心。</p><p>　　——　灯徽氏</p><h2 id="金乌的自白（二）"><a href="#金乌的自白（二）" class="headerlink" title="金乌的自白（二）"></a>金乌的自白（二）</h2><p>　　多年以后我还能回想起发生在博物馆那里的闹剧，和现场那些惊慌失措的警察的大喊与跑动。我当时还对飞行器对我造成的影响感到诧异，但后来也就发觉了，这是一个笑话。这些事情是我在监察室里想到的，尽管我在那里并没有呆上几天。直到后面我看见一脸歉意的那个看起来死板的民警的时候，更加觉得好笑。他之前并不知道“金乌”是什么，他将我错怪成了“金乌”。但是给记者纸条的人却不是民警（这是我在监察室里知道的信息）。那个给出字条和我的照片的人，或许就是真正的“金乌”，或许什么也不是。我当然不知道记者那个被塞照片的故事是真是假，也不知道民警矢口否认自己给过纸条和照片这件事情是真是假。但胆大妄为的“金乌”不久之后开始了新的挑战。</p><p>　　“金乌”并不是一个独立的存在，只有扮演“金乌”的和相信“金乌”的人一同存在的时候，“金乌”才有价值。否则缺少任何一方，“金乌”都会变成一个巨大的笑话。然而当这一对冤家就这样出现的时候，“金乌”就诞生了。但终归有什么契机，提到这个莫须有的“金乌”，然后膨胀开来，一发不可收拾。于是人们开始捕风捉影，希望从那些古怪的幻影中抓到“金乌”的影子。于是“金乌”用这种方式活了下来，并逐渐真实而更加被深信不疑。“金乌”的死亡只有所有人都将“金乌”视为一种理所应当的却又无趣的存在、而不再被提起的时候，才会真正来临。</p><p>　　所以这个看起来辉煌的“金乌”，或许那封莫名其妙的信中提到的“金乌”都是合理的“金乌”。它门是同一个概念的东西，有着不同的体现但又拥有同样的名字。于是我不会感到困扰了。所谓“金乌”，或者一些别的神话传说，都是建立在这样的情况下的，无非是这些故事如何诞生、如何被传递下来、又如何影响到人群的认知这些细节上的差异。</p><p>　　于是我回到了自己的画室里。我忘记了那天晚上我吃的一些什么，以及如何回到了自己的屋子。在跨进门框的时候，一种新的创造的想法从我的思想里诞生。我走进画室里面，着了魔地用着奇怪色彩的颜料，涂抹奇怪的形状。那是像生物又不像生物的东西，有着深紫色和腾黄色混在一起的羽毛组成的弯曲的翅膀和圆柱体组成的双脚。这个类似生物的东西，从它类似嘴的器官朝着画布外面的人喊叫。于是站在画前的人感到了画家拥有的幸福。</p><h2 id="《两只金乌》后记"><a href="#《两只金乌》后记" class="headerlink" title="《两只金乌》后记"></a>《两只金乌》后记</h2><p>　　实际上，本文的初衷只是为了讽刺在保研过程中的一些荒唐事情，于是故意起了一堆古怪的名字。比如“两只金乌”本就是一个映射性的名字，至于它的内涵在本人动笔之初则完全说不清楚。最开始动笔也只是讽刺了一些自己身上和其它同学身上遇到的这个糟糕事件的经历（因为这类事件太多，突然有了写讽刺小说的念头。）然而在写作的过程中间，我似乎感觉到自己的观念产生了些许变化：最开始我感到滑稽的是一些规定和官方操作，后面不小心发现了遵守部分规定而对另一部分规定不满的我这种人的滑稽。于是原来那样简单的象征意义就完全不同了，因此我需要一个复杂的矛盾，把一切揉起来，随后产生了本文的“下篇”。</p><p>　　但这篇胡乱的文章发展至今，已经一定程度地偏离了最开始的想法，并随着时间的流逝和“两只金乌”构思的完成，创作的热情开始大幅度衰减。然而每一次重新写，都会觉得“这一次的想法好像和上一次不太一样”，于是需要花费更多的时间去考虑。文笔越来越抽象古怪也是没办法的事情。但所幸最后还是来到了自己希望表达的部分，同时又担心这样结尾太过草草，于是机械降神式地生硬地解释“两只金乌”的含义。<strong>但这个结尾并没有什么意义。</strong></p><p>　　话说回来，这是本人第一次完成类似这样的小说。莫名其妙地觉得有趣却又无聊。或许不在一个合适的契机下，不会有类似的文章出现了。</p><p>　　最后感谢所有能够忍耐如此无聊啰嗦的文风看到这里的读者，并祝愿你们不会再一次碰到这样无趣的作品了。</p><p>　　廙水</p><p>　　2020-12-6</p><hr><p>　　<strong>题外话 3</strong>：这一篇由于种种原因，推进速度慢于预期。可能情况是由于已经产生了较为完整的构思，反而对细节如何填充完整瞬间索然无味。</p><p>　　<strong>题外话 4</strong>：好像因为各种各样的原因搁置了很久。于是再一次提笔续写发现变得更加困难，看来这个工作不能再拖下去了——恐怕其会变得和冰上行一样不了了之。</p><h2 id="修订"><a href="#修订" class="headerlink" title="修订"></a>修订</h2><p>　　暂无</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站安利</title>
      <link href="/2020/essay/%E5%AE%89%E5%88%A9/%E7%BD%91%E7%AB%99%E5%AE%89%E5%88%A9/"/>
      <url>/2020/essay/%E5%AE%89%E5%88%A9/%E7%BD%91%E7%AB%99%E5%AE%89%E5%88%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这里是一些安利的网站（新开了“安利”的Tag）。基本上是各种奇怪网站的合集，包括一些主流的工具、值得推荐的资源收集。覆盖面不会很大。</p><a id="more"></a> <h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><ol><li><a href="http://mohu.org/info/symbols/symbols.htm" target="_blank" rel="noopener">$ \LaTeX $ 语法快速查询</a>：一个简单的网站，用来查突然忘掉的语法。</li><li><a href="https://material.io/resources/color/" target="_blank" rel="noopener">Material Color Tool</a>：支持 Material Design 的组合配色方案。提供一个非常简单的色盘，用来快速确定自己喜欢的颜色。</li><li><a href="https://feed43.com" target="_blank" rel="noopener">Feed43</a>：用来对网站自建 RSS 的网站。可以手动对一些未提供 RSS 链接的网站，通过建立爬取规则生成 RSS 文本，从而在阅读器中订阅。</li><li><a href="https://trello.com/" target="_blank" rel="noopener">Trello</a>：老牌看板网站，用来管理团队项目进展。竞品有 Notion 及 GitHub Board。</li><li><a href="https://mubu.com/" target="_blank" rel="noopener">幕布</a>：快速整理写作的网站。基本思路是利用“层级关系”。</li><li><a href="https://www.remove.bg" target="_blank" rel="noopener">removebg</a>：自动移除背景的网站工具。效果一般，和 PPT 抠图效果不相上下。支持少量免费的外接 API 用来自动抠图。</li><li><a href="https://www.photopea.com" target="_blank" rel="noopener">photopea</a>：线上简易 PS，基本上可以完成大部分图片操作。</li><li><a href="https://pixlr.com" target="_blank" rel="noopener">PIXLR</a>：线上简易 PS，比上面那个更加好用。</li><li><a href="https://www.overleaf.com" target="_blank" rel="noopener">Overleaf</a>：线上 LaTeX 写作，免除手动配置 tex 环境之苦。支持中文，但是中文支持度不够。</li><li><a href="http://gitd.cc" target="_blank" rel="noopener">GitHub代下载</a>：用来下载 GitHub 的 Release 文件等，不是所有的文件都能下载，但是速度极快。</li><li><a href="https://drive.google.com/" target="_blank" rel="noopener">Google Drive</a>：对于 AI 研究者最大好处，其支持在线上空间运行 python 文件，并提供完全免费的 8GB 的独立显卡借用，具有完整的 Torch 等环境用以神经网络训练。24 小时重连一次，速度尚可接受。</li><li><a href="https://www.notion.so/" target="_blank" rel="noopener">Notion</a>：笔记类应用的极致，功能简洁而不简单，颜值能打，存在大量的模板可供选择。缺点有二：不支持笔迹，不支持离线。</li><li><a href="https://dida365.com/" target="_blank" rel="noopener">滴答清单</a>：清单类应用最推荐者。支持微信转发新建任务，支持全平台、免费功能够用、支持在系统日历（如微软 Mail）订阅。缺点：月视图收费。</li><li><a href="https://www.innoreader.com/" target="_blank" rel="noopener">Innoreader</a>：RSS 阅读器，简洁明了，功能够强。之前被墙过一段时间，目前又可正常工作了。默认一小时抓取一次。可以和 Feed43 搭配使用。</li><li><a href="https://nipponcolors.com" target="_blank" rel="noopener">日本の伝统色</a>：日本传统色，UI 和颜色都相当棒的网站。</li><li><a href="https://www.makeamap.cn" target="_blank" rel="noopener">易制地图</a>：绘制虚拟地图。</li><li><a href="https://www.dicecho.com/module" target="_blank" rel="noopener">Dicecho</a>：COC模组评价网站。</li><li><a href="https://www.tunemymusic.com/zh-cn/" target="_blank" rel="noopener">TuneMyMusic</a>：用于将网易云等流媒体平台的歌单导入到Apple Music等其他流媒体。</li><li><a href="https://coolbackgrounds.io/?rel=appionn" target="_blank">Cool Backgrounds</a>：低多边形等简单图形背景生成器，适用于PPT制作等需要简洁背景的场合。</li></ol><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><ol><li><a href="https://zh.d2l.ai" target="_blank" rel="noopener">动手学深度学习</a>：这本书的网络资源，中文翻译，支持线上运行代码，并自带交流区。</li><li><a href="https://tour.golang.org/welcome/3" target="_blank" rel="noopener">A Tour of Go</a>：Go 语言的线上学习书籍，支持线上运行代码。风格轻快。（需要梯子。）</li><li><a href="http://www.shakespeares-sonnets.com" target="_blank" rel="noopener">Shakespeare’s Sonnets</a>：莎士比亚十四行诗的线上平台，可以查看所有的十四行诗。</li><li><a href="https://wd.bible/" target="_blank" rel="noopener">微读圣经</a>：线上圣经阅读。支持和合本、英王钦定本多版本对照阅读。</li><li><a href="https://waltwhitman.com" target="_blank" rel="noopener">Walt Whitman</a>：怀特·惠特曼生平及诗集。</li><li><a href="https://www.hplovecraft.com/" target="_blank" rel="noopener">The H.P. Lovecraft Archive</a>：爱手艺个人网站，包括其生平、著述等等。</li><li><a href="https://waltwhitman.com/" target="_blank" rel="noopener">Walt Whitman and his Poems</a>：怀特·惠特曼个人网站，包括其生平及诗歌。</li></ol><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ol><li><a href="https://pixabay.com/zh/" target="_blank" rel="noopener">Pixabay</a>：拥有大量优质高清图片的网站，适合寻找壁纸。主要是照片类别，动物照片尤其多。（头图下载自该网站）</li><li><a href="https://wallpapershome.com" target="_blank" rel="noopener">WallpapersHome</a>：拥有大量优质高清图片的网站，抽象图片尤其多。有不少从各类操作系统中抽出的系统壁纸。</li><li><a href="http://simpledesktops.com" target="_blank" rel="noopener">Simple Desktops</a>：拥有大量优质高清图片的网站，多为抽象简洁的图片。主要由纯色背景及小图标组成。</li><li><a href="https://21wallpaper.design" target="_blank" rel="noopener">21 Wallpaper</a>：每数个月由不同设计师设计多组壁纸，提供免费下载的古怪项目。风格差异巨大，目前由于新冠暂停运行，官网上宣称 21 年重启该项目。</li><li><a href="http://www.musictool.top" target="_blank" rel="noopener">音乐搜索器</a>：用来在多平台搜索音乐的网站。支持下载网易云、QQ 等多类流媒体的音乐文件（支持版权限制及伪无损下载）。</li><li><a href="https://cn.imslp.org/wiki/Main_Page" target="_blank" rel="noopener">Imslp</a>：全球最大的乐谱下载网站，古典区必备网站。有多个版本的乐谱，甚至一些手写稿影印版。</li><li><a href="https://storage.googleapis.com/download.tensorflow.org/data/shakespeare.txt" target="_blank" rel="noopener">莎作全集</a>：莎士比亚毕生作品组成的 txt 文件，可以用来做 NLP 任务。（需要梯子。）</li><li><a href="https://new.shuge.org/view/hong_lou_meng_tu_yong/" target="_blank" rel="noopener">书格</a>：用来搜古籍的地方。网站 UI 很不错，内容尚待更深入探索。</li><li><a href="https://www.fontsquirrel.com" target="_blank" rel="noopener">Font Squirrel</a>：一个下载免费字体的网站。</li><li><a href="https://www.allhistory.com/map" target="_blank" rel="noopener">All History</a>：一个地图工具，能找到各个时代的地图划分和重要历史事件，可靠性未知。</li><li><a href="https://airpano.org.cn" target="_blank" rel="noopener">Airpano</a>：一个看各地360度风景的网站。（用来判断什么地方适合旅游？）</li><li><a href="https://ytenx.org/byohlyuk/KienxPyan" target="_blank" rel="noopener">现代汉语常用简繁一对多字义辨析表</a>：如其名。</li><li><a href="https://cn.dll-files.com/" target="_blank" rel="noopener">DLL-FILES.COM</a>：用来下载缺失的DLL文件。</li><li><a href="https://wechat.privacyhide.com/?ref=appinn" target="_blank" rel="noopener">微信公众号RSS生成器</a>：效果和Feed43类似，不能显示文章内容，但可以爬取更新。</li><li><a href="https://icons8.com/" target="_blank" rel="noopener">ICONS8</a>：图标网站。</li></ol><h3 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h3><ol><li><a href="http://conceptnet.io" target="_blank" rel="noopener">Concept Net</a>：NLP 最大的知识图谱之一，可以查找没些词的同义词、反义词、常用词组等等。该知识图谱通过计算语言学建立，而非人工标注。</li><li><a href="http://wordnetweb.princeton.edu/perl/webwn" target="_blank" rel="noopener">WordNet</a>：NLP 的重要知识图谱之一，用来搜索不同词的各种不同的意象。</li><li><a href="https://demo.allennlp.org/reading-comprehension" target="_blank" rel="noopener">AllenNLP demo</a>：AllenNLP 的一些模型的线上调用，方便查看一些句子的 dependency tree 以及其他。</li><li><a href="https://storage.googleapis.com/chimera-painter/index.html" target="_blank" rel="noopener">Chimera Painter</a>：谷歌使用神经对抗网络，生成2D或者3D的怪物图像。（需要梯子。）</li><li><a href="https://deepmoji.mit.edu" target="_blank" rel="noopener">Deep Emoji</a>：一个将文字映射到Emoji的Demo网站。</li><li><a href="https://ai-art.tokyo/en/?ref=appinn" target="_blank" rel="noopener">AI Art</a>：将肖像或者风景艺术化的网站（效果奇佳）。</li><li><a href="https://thispersondoesnotexist.com" target="_blank" rel="noopener">this person does not exist</a>：通过 GAN 网络生成的世界上不存在的人物的头像，看起来很逼真。每一次刷新会生成一张新的图。（担心隐私泄漏的场合，可以使用上面的图片代替真人照。）</li><li><a href="https://sojo.im/slscq/" target="_blank" rel="noopener">申论生成器</a>：生成一篇奇怪的文章。</li><li><a href="https://www.xiaodigu.cn/gpwz/" target="_blank" rel="noopener">狗屁不通文章生成器</a>：生成围绕一个问题的文章。</li><li><a href="https://storage.googleapis.com/chimera-painter/index.html" target="_blank" rel="noopener">Chimera Painter</a>：AI 绘画一个怪兽。</li><li><a href="https://www.nvidia.com/en-us/research/ai-playground/?ncid=so-twi-nz-92489" target="_blank" rel="noopener">Gaugan</a>：英伟达的小玩具，将涂鸦变成风景画。</li><li><a href="https://mubert.com/render?utm_source=appinn.com" target="_blank" rel="noopener">Mubert</a>：根据风格AI作曲的网站。</li></ol><h3 id="奇怪内容"><a href="#奇怪内容" class="headerlink" title="奇怪内容"></a>奇怪内容</h3><ol><li><a href="https://www.casebook.org/intro.html" target="_blank" rel="noopener">CaseBook</a>：一个 Jack the Ripper 相关咨询的款热爱好者搭建的网站，内含关于这个事件的相当细节的信息。</li><li><a href="https://lab.magiconch.com/nbnhhsh/?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">能不能好好说话？</a>：将现在网络语言的奇怪缩写翻译回正常普通话的网站。对于“xmsl”这些词汇搞不清楚的，可以在这里搜一搜，老年人日常学习资源。</li><li><a href="https://nbviewer.jupyter.org" target="_blank" rel="noopener">nbviewer</a>：可以把 GitHub 中的 pdf 文件之类的放进这个网页，获得一个新的链接。通过该链接，可以直接在浏览器中打开该 pdf，而避免下载。适合用来放置 CV 等线上资源。</li><li><a href="http://intrologic.stanford.edu/applications/herbrand.html" target="_blank" rel="noopener">Introduction to Logic</a>：奇怪的逻辑学辅助工具。反正我用不来。</li><li><a href="https://www.typingclub.com/" target="_blank" rel="noopener">EdClub</a>：通过游戏的方式学习正确的打字姿势。类似闯关游戏的思路，不断地学习更正确地使用键盘。</li><li><a href="https://femurdesign.com/theremin/" target="_blank" rel="noopener">Theremin</a>：模拟特雷门琴的声音，在触屏设备上尤其好玩。此外，可以尝试不同音阶系统的钢琴。</li><li><a href="https://www.futureme.org" target="_blank" rel="noopener">futureme</a>：给未来的自己写信。非常简单。</li><li><a href="https://app.ww.calm.com/" target="_blank" rel="noopener">Calm</a>：白噪声网站。大部分功能收费，但是简单的自然环境音仍可以使用。</li><li><a href="http://lotrproject.com/map/#zoom=3&amp;lat=-1684.5&amp;lon=1500&amp;layers=BTTTTTTTT" target="_blank" rel="noopener">Map of Middle Earth</a>：魔戒地图。</li><li><a href="https://iamthecu.be" target="_blank" rel="noopener">在线魔方</a>：在网页端里的三阶魔方。（好像并没有什么用。）</li><li><a href="https://tool.mingdawoo.com/lang/nearby_word" target="_blank" rel="noopener">近邻词汇查询</a>：大概是用Word Embedding搞出来的近邻词查询，仅供一乐。</li></ol><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><ol><li>感谢 Nof 提供【工具类】*1，【资源类】*2，【奇怪内容类】*1。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题更新Ver 1.0</title>
      <link href="/2020/tech/Hexo/Hexo%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0Ver%201.0/"/>
      <url>/2020/tech/Hexo/Hexo%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0Ver%201.0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本 Post 用以记录 Ver1.0 涉及的更新内容及其方法：</p><ol><li>增加并修改 Title 图标及颜色。</li><li>新增更新时间及排序方法。</li></ol><p><strong>注意</strong>：该方法对应的文件类型为<code>scss</code>/<code>css</code>/<code>pug</code>/<code>js</code>。可能和以<code>ejs</code>为主的主题存在些微区别，但方法大致相同。</p><a id="more"></a>  <h2 id="增加并修改Title图标及颜色"><a href="#增加并修改Title图标及颜色" class="headerlink" title="增加并修改Title图标及颜色"></a>增加并修改Title图标及颜色</h2><p>首先找到 theme 对应的 style 文件。在本主题中，该文件路径为：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="symbol">\t</span>hemes<span class="symbol">\m</span>aupassant<span class="symbol">\s</span>ource<span class="symbol">\c</span>ss<span class="symbol">\s</span>tyle.scss</span><br></pre></td></tr></table></figure><p>在其中找到 title 对应的部分。这个工作可能不是那么容易，需要先进入<code>index</code>（在我这里是<code>index.pug</code>）文件查看。那么我们同时打开<code>idnex.pug</code>文件。这个文件路径为：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="symbol">\t</span>hemes<span class="symbol">\m</span>aupassant<span class="symbol">\l</span>ayout<span class="symbol">\i</span>ndex.pug</span><br></pre></td></tr></table></figure><p>在其中找到关于 Post 和 Post-title 对应的代码往下找就行了。在我的主题中，这部分文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.post-meta&#x3D;post.date.format(config.date_format)</span><br><span class="line">    if post.categories.length &gt; 0</span><br><span class="line">        span&#x3D; &#39; | &#39;</span><br><span class="line">            span.category</span><br><span class="line">                for category in post.categories.toArray()</span><br><span class="line">                    a(href&#x3D;url_for(category.path))&#x3D; category.name</span><br></pre></td></tr></table></figure><p>从这里得知 style 文件中的应该修改的是在<code>.post-meta</code>这里，对其进行修改、增加风格就可以了。比如对于显示阅读时间的部分，是按如下方式修改的，这只是一个咖啡的图标而已。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.time</span> &#123;</span><br><span class="line">            &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">                <span class="attribute">color</span>: <span class="number">#9c786c</span>;</span><br><span class="line">                <span class="attribute">font-family</span>: <span class="string">"FontAwesome"</span>;</span><br><span class="line">                <span class="attribute">content</span>: <span class="string">"\f0f4"</span>;</span><br><span class="line">                <span class="attribute">padding-right</span>: <span class="number">0.3em</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这里的修改相当地繁琐，故不一一列举，方法都是一样的。</p><h2 id="增加Update时间及按照该时间排序"><a href="#增加Update时间及按照该时间排序" class="headerlink" title="增加Update时间及按照该时间排序"></a>增加Update时间及按照该时间排序</h2><p><code>updated</code>是 Hexo 默认的关键字，可以如同<code>date</code>关键字一样，转化为符合时间格式的特殊数据结构，因而可以用以比较时间。所以为了增加 update 时间，在每一个文件的 title setting 的部分加上一个<code>updated</code>字样即可。</p><p>但是只是这样做是不可以排序的，使用 Config 文件中的<code>order by:</code>也无法达到希望的效果。所以这里借助 top 插件的代码。找到文件<code>generator.js</code>。该文件位置在：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_modules\hexo-generator-index-pin-top\<span class="class"><span class="keyword">lib</span>\</span></span><br></pre></td></tr></table></figure><p>将这个文件中用来比较的 date 均改为 updated，即可。</p><p>对于后面风格化的设置，参见上一小节的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题更新记录</title>
      <link href="/2020/tech/Hexo/Hexo%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/"/>
      <url>/2020/tech/Hexo/Hexo%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo 主题更新记录。本页面用以记录 Blog 主题的累积更新。</p><a id="more"></a>  <h2 id="Ver-0-0"><a href="#Ver-0-0" class="headerlink" title="Ver 0.0"></a>Ver 0.0</h2><p>从<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">maupassant</a>主题开始。</p><blockquote><p>Maupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：</p><p>Typecho：<a href="https://github.com/pagecho/maupassant/" target="_blank" rel="noopener">https://github.com/pagecho/maupassant/</a><br>Octopress：<a href="https://github.com/pagecho/mewpassant/" target="_blank" rel="noopener">https://github.com/pagecho/mewpassant/</a><br>Farbox：<a href="https://github.com/pagecho/Maupassant-farbox/" target="_blank" rel="noopener">https://github.com/pagecho/Maupassant-farbox/</a><br>Wordpress：<a href="https://github.com/iMuFeng/maupassant/" target="_blank" rel="noopener">https://github.com/iMuFeng/maupassant/</a><br>Ghost: <a href="https://github.com/LjxPrime/maupassant/" target="_blank" rel="noopener">https://github.com/LjxPrime/maupassant/</a></p></blockquote><h2 id="Ver-1-0"><a href="#Ver-1-0" class="headerlink" title="Ver 1.0"></a>Ver 1.0</h2><p>更新时间：2020-10-16</p><p>更新内容：</p><ol><li>新增<code>Pinned</code>图标及字符，至 Title 栏。</li><li>新增项：<strong>更新时间</strong>及<strong>更新次数</strong>。文章会根据更新时间排序。<ol><li>在 Index 页，若有更新，则显示更新时间及其更新次数，反之显示创建时间。</li><li>在文章内容页，默认显示所有。</li><li>该功能尚有一定缺陷。即，不能使用默认的 Title setting 中的 date 代替 updated 标签。需要手动建立 updated 项。</li></ol></li><li>调整了 Title 栏图标颜色。</li><li>增大了文章标题大小。</li><li>调整了 Title 和正文、文章与文章之间的距离。</li><li>Index 页面文章间增加横线。</li><li>开启 Categories 计数。</li><li>在顶栏增加 Tags 栏。</li><li>调整 Index 界面显示的文章数目；取消 Archive 界面的分页。</li></ol><h2 id="Ver-1-1"><a href="#Ver-1-1" class="headerlink" title="Ver 1.1"></a>Ver 1.1</h2><p>更新时间：2020-10-20</p><p>更新内容：</p><ol><li>Navigator 的顺序修正，使其支持跳转到依据更新的时间的上一篇或者下一篇。<ol><li>修改方法：找到<code>node_modules/hexo/lib/plugins/generator/post.js</code>，将第四行改为“updated”即可。</li></ol></li></ol><h2 id="Ver-1-2"><a href="#Ver-1-2" class="headerlink" title="Ver 1.2"></a>Ver 1.2</h2><p>更新时间：2020-11-20</p><p>更新内容：</p><ol><li>原【Collection】板块易名为【Bookmark】。</li><li>原【Timeline】的icon修改。</li></ol><h2 id="Ver-1-3"><a href="#Ver-1-3" class="headerlink" title="Ver 1.3"></a>Ver 1.3</h2><p>更新时间：2020-12-01</p><p>更新内容：</p><ol><li>将【随笔】分类下的所有文章调整为繁体。由于使用的为简化的转换模型，所以部分繁体字可能会出现用法上的错误，请见谅。</li></ol><h2 id="Ver-2-0"><a href="#Ver-2-0" class="headerlink" title="Ver 2.0"></a>Ver 2.0</h2><p>更新时间：2021-05-27</p><p>更新内容：</p><ol><li>打开了评论模组。</li><li>网址迁移到<a href="joseph-hails.site">新域名</a></li></ol><h2 id="Ver-3-0"><a href="#Ver-3-0" class="headerlink" title="Ver 3.0"></a>Ver 3.0</h2><p>更新时间：2021-09-07</p><p>更新内容：</p><ol><li>将站点标题改名为“嘲哳”。</li><li>将【随笔】分类下的所有文章调整为简体。</li><li>将原分类“学科”与“学术”合并。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动检测Typo</title>
      <link href="/2020/tech/Hexo/%E8%87%AA%E5%8A%A8%E6%A3%80%E6%B5%8BTypo/"/>
      <url>/2020/tech/Hexo/%E8%87%AA%E5%8A%A8%E6%A3%80%E6%B5%8BTypo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Typo 是一个相当烦人的东西（实际上只是自己懒得多次检查 Typo，有的时候就算发现了也会懒得改。）。所以打算自己找一个可以自动检查 Typo 的脚本。我本来以为这是一个技术上成熟的东西，然而并没有。勉勉强强在 GitHub 里找到了一个对付 Typo 的 Repo：<a href="https://github.com/shibing624/pycorrector" target="_blank" rel="noopener">PyCorrector</a>。这个工具是为了中文设计的，是否能对英文使用暂时存疑。</p><a id="more"></a>  <p>我这里暂时不打算多费口舌讨论它的原理，以及是否有更好的竞品之类的问题。（我相信现在的中文 NLP 水平肯定不止如此。）若希望寻求技术细节，请进入上述的链接。直接进入使用环节。</p><h2 id="工具配置"><a href="#工具配置" class="headerlink" title="工具配置"></a>工具配置</h2><p>这个工具首先需要通过 Pip 安装下述 Package：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install https:<span class="regexp">//gi</span>thub.com<span class="regexp">/kpu/</span>kenlm<span class="regexp">/archive/m</span>aster.zip</span><br><span class="line">pip install pycorrector</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：上述两个步骤请不要颠倒，否则可能会出现依赖问题。</p><p>这样就完成了安装。这里粘贴该包的使用的 Demo：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pycorrector</span><br><span class="line">corrected_sent, detail = pycorrector.correct(<span class="string">'少先队员因该为老人让坐'</span>)</span><br><span class="line">print(corrected_sent, detail)</span><br></pre></td></tr></table></figure><p>它会返回纠正过的句子以及哪些部分是需要纠正的。但是它这个工具的准确率实在不行，这个纠正句子基本是不能信的。</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>但是上面只是获得了环境，为了更好地使用，不得不写了一个新的脚本。由于这个工具的准确率实在不行，而且速度也并不快，所以为了避免每一次对所有文件的搜索，系统维持了一个名为<code>checked.json</code>的文件，里面存有已经检查过的所有文件。如果你希望重新检查该文件，则从该文件中移除对应的名字即可。此外，每一次检查回将错误信息记录在一个名为<code>log.txt</code>的文件中。这两个文件都会储存在 Hexo 最外层的文件夹中。</p><p>每一次运行该程序都会覆盖<code>log.txt</code>，并且将每一次检查过的新文件加入<code>checked.json</code>文件。具体代码附在该链接中：<a href="https://josep-h.gitee.io/code/analysis.py" target="_blank" rel="noopener">Link</a>，请自行下载。该文件中的地址可能需要微调。我将其放在 Hexo 根目录的名为<code>update</code>的子文件夹中。</p><p>最后可以将其加入 update 脚本中，这样每一次更新可以获得新的 log 文件查看是否有 Typo。最后再吐槽一句，它的准确率不行(它甚至使用的还是结巴分词……)。如果各位发现了更好的工具，敬请告知。</p><p>最后三点注意：</p><ol><li>第一次由于所有文件都没有检查过，所以会非常缓慢。请耐心等待。</li><li>该脚本刚开始运行时，会导致系统一点小卡顿，这是加载大型语言模型产生的正常情况，不用慌张。</li><li>如果在写作某篇文章时不希望加上自动 Typo 修正的功能，可以在该篇文章最开始的设定中添加一行：<code>typo: false</code>。该功能我写了，但是没有单独测试。若有问题我之后再改吧。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‘Monster’观感（上）</title>
      <link href="/2020/essay/%E8%A7%82%E6%84%9F/Monster/"/>
      <url>/2020/essay/%E8%A7%82%E6%84%9F/Monster/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-AMFLuugo" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="28844056" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="评价：★★★★★"><a href="#评价：★★★★★" class="headerlink" title="评价：★★★★★"></a>评价：★★★★★</h3><p>　　于我而言，这是一部非常独特的作品。在我有限的观看过的作品中，本部作品算不上天衣无缝，有很多不可回避的硬伤（甚至是剧情上的），但并不妨碍这部作品仍在值得推荐的清单中。本来这部作品是打算好好整理之后再完成这篇评价，但是又觉得这部作品中后期带来的感觉会随着时间流逝慢慢散掉，所以在此之前抓住这个感觉，先记下来吧。由于内容太长，为避免过于影响观感，考虑分为上下两篇。上篇是对于 Monster 的批评以及剧情上的讨论；下篇会把注意力放在人物和主题刻画上。</p><p>　　<strong>注意</strong>：本篇内容分为概述和对剧情讨论两部分。由于提前得知剧情会对观感又非常大的影响，在概述中我将尽力避免过于直白的剧透；但是请未观看过该部作品的读者一定不要进入后续剧情章节，除非各位觉得剧透并不是那么严重的问题。此外，本文作者没有经过任何仔细研究，本文内容请视为完全主观甚至胡说八道的。</p><a id="more"></a><h2 id="总体感受"><a href="#总体感受" class="headerlink" title="总体感受"></a>总体感受</h2><p>　　本部在一个很“黑暗”的氛围下，用一种使人感到不太愉悦的叙述方式引导主线前进。故事本身并不太新颖，是带有某种恐怖色彩的侦探抓罪犯的故事，混合着公路片的些许风格。在这个过程中又插入了不少的小插曲，小插曲设计算不上精妙，有些部分甚至有些拖沓和套路。以及和动漫这种呈现形式非常不相称的恶意和压抑（相较于大多数作品而言都是。）</p><p>　　最草率的概括可以把故事区分为三个阶段：阴谋的展开；双方拉锯；结局。阴谋展开和结局属于正常的节奏（相较于长篇而言），而在双方拉锯则保持着一种诡异的节奏，有一种反复前功尽弃的挫败感。这段大概在 30 集左右，加上本部作品各种叙述上的些微问题及特色，基本能劝退大多数观众。</p><p>　　但是在这诸多指责之后，我仍然会选择推荐这部作品。这绝对不是一部用来找乐子消遣的作品；但也不是将立意摆得高大上的作品——至少作品没有给出一个核心的要旨。作品的态度仅是讲一个故事而已，而且我得承认这部作品讲故事的方法很高明。</p><p>　　这也绝对不是主流的作品，在中长篇动漫中，主题的选择更属于特立独行的类别。相较于一些热门的作品来说，能找到的议论这部作品的文段更是少之又少。其中不乏评论认为，这部属于“黑深残”作品或者“故作深沉”。对于这些意见，个人持中立态度。我看见的是一个讲故事的野心和这个故事张牙舞爪的鲜明姿态。至于它是否“黑深残”还是什么，还是交给诸位读者评判吧。同样，也有不少评价说，这是一部讲述“人性”的作品。“人性”这种评价实在隔靴搔痒，故本人对这个观点也持中立态度，还请诸位观众自行评判。</p><p><strong>小批评</strong></p><p>　　此外，即使未观看过该作品，我也希望提前做一个小批评，作为一个预警，以便更容易接受该作品或者考虑是否直接放弃。该部作品叙事节奏略微拖沓。Monster 的主线剧情展开是顺利且干净利落的。线索与线索联系紧密，基本没有断节。甚至大多数时候，是先陈述某人物通过某线索找到了下一个目的地之后才开始补充这些线索的由来。这让故事整体的节奏自然灵活，有一种压迫感。</p><p>　　所以我希望指责的拖沓并不是指故事主线的推进，也不是对插曲、倒叙类似部分的指责，而是细节的节奏问题。这部作品擅长放大细节，例如人物的眼神变化、光影的变化等等，不能否认这样的叙述手段让更幽暗的环境变得更加瘆人，然而这样的处理并不总是得体，在某些时候会营造出一种错误的观感，让剧情内短暂的时间（如十多秒的对峙）被错误地渲染，让一些本来应该紧张的瞬间变得缓慢、松弛，紧张感尽失。</p><hr><p><strong>注意</strong>：后部分涉及大量剧透，请未看过该作品的读者三思后继续。</p><hr><h2 id="其他指责"><a href="#其他指责" class="headerlink" title="其他指责"></a>其他指责</h2><p>　　上述对这部作品的节奏问题做了一个批评，之后需要先陈述更多的批评。由于后续内容和剧情紧密相关，故移入分割线之后。</p><h3 id="剧情逻辑问题"><a href="#剧情逻辑问题" class="headerlink" title="剧情逻辑问题"></a>剧情逻辑问题</h3><p>　　本部作品剧情存在诸多不合理之处。由于该作品经常使用倒叙的方法——让一部分事实在故事的后期突然出现，使得一部分不太符合逻辑的内容被习惯性地忽视。这些问题本身是致命的（然而后面我会试图回避掉这个严重的问题），它们的存在让故事的推进存在着牵强和不合理之处。最为不合理的部分集中在约翰和罗伯特上。</p><ul><li>约翰</li></ul><p>　　约翰作为本作的核心人物，他的个人能力被无限地放大了。其中最费解的是艾斯勒医院杀人案中，院长三人是如何被约翰杀死的。在这个时刻，约翰处于半昏迷状态，并完全没有行动能力，他如何获得毒药以及如何预料到院长会吃他的房间的糖果诸多问题都是难以解释的。</p><p>　　其次是约翰的强大洗脑能力。法兰兹.拨纳帕达的洗脑能力来自于他的心理学知识，以及长期的洗脑教育；而约翰的洗脑能力却仿佛只需要几句话就可以完成，甚至让对方死心塌地。姑且不论那些思想脆弱的杀人犯这样本来就不安定的因素，剧情中展示了不少次约翰洗脑普通人（或者说生活不那么顺利的人）的过程，总之还是有些费解的，这是些微牵强的设定。</p><p>　　以及约翰的存在感问题。约翰先后换过多次养父母，而这些养父母均在收养约翰不久后被杀害。这一系列事件由于极高的相似性被联系在了一起，却从未有官方人员发现了这个被收养的儿子的事实（即使警官已经发现了这些夫妇都没有子嗣这个特征），这并不是合理的现象，只能说是为剧情服务了。</p><p>　　但约翰相关的剧情逻辑的问题并未那么严重——我们可以将约翰自身视作作品中一个超凡的存在，他的存在是不现实的，而带有“神”的色彩的。这一系列的不合逻辑，是来自于约翰自身的神性。这和所谓的“主角光环”并不相同。这个作品存在这样一个预设：“只有怪物才能做到。”于是他做到了。作为一部动漫作品，我们可以接受出现超自然的夸张的设定，约翰的存在正是如此。</p><ul><li>罗伯特</li></ul><p>　　而另一个难以解释的角色是罗伯特。罗伯特最大的疑点在于，他如何接近的博德曼律师的。博德曼律师作为律师界的新星，其合伙人毫无疑问也应该是律师界的大名鼎鼎人物。然而罗伯特在富翁休伯特的案件中被天马用枪射伤至天马被捕间约莫一年时间，罗伯特如何获得这样的地位并且成为博德曼律师合伙人的？只能说是另一个费解的问题了。</p><p>　　然而这些不正常的推进，并未影响故事的逻辑主链。律师由另一个听命于约翰的角色顶替也是完全可以的。只能说是作者希望让故事里的每个角色有自己的结局吧，就像没有看到最后的风景的罗伯特那样。</p><h3 id="不合时宜的BGM"><a href="#不合时宜的BGM" class="headerlink" title="不合时宜的BGM"></a>不合时宜的BGM</h3><p>　　在大多数时候，BGM 都是一部作品的加分项，然而却不是这部作品的。这部作品的 BGM 并不合适。大多数时候，它的 BGM 都处于若有若无的状态，这基本符合了 Monster 整体的灰暗画风。即使完全没有 BGM，我也不会因此指责。但是很遗憾的，在众多的 BGM 中混入了一些违和的，过分欢快的音乐。这些音乐出戏到甚至让我认为我正在观看一部别的作品。</p><p>　　这不是指这部作品不能使用欢快的音乐，但在这部作品的任何时刻，都没有存在纯粹的快乐。更多时候仿佛是死亡才能带来慰藉，而活着的愉悦着的人都遭受着或曾遭受了非人的命运。例如在妮娜和迪特在一起闲逛的时候，这两个满身疮痍的人，互相安慰（并都担心着天马）；因为在这短短的闲暇里获得了快乐，而使用一个非常欢快的背景音乐，这是非常不合适的。</p><p>　　此外其他的 BGM 并未给我留下非常深刻的印象，比较平庸，或者说这是一部不太需要 BGM 的作品：只要 BGM 不发挥太差，就都可有可无。很遗憾它没有达到及格线。后面是本部作品中鲜有的两首配得优秀的作品。</p>    <div id="aplayer-OiryLgbC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="461404" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>    <div id="aplayer-lbUzauVc" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="461406" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="不必要的展开"><a href="#不必要的展开" class="headerlink" title="不必要的展开"></a>不必要的展开</h3><p>　　尽管前面对叙事节奏做了一个批评，但并不是批评的全貌。节奏的失衡不仅仅来自于那种特殊的叙事风格，也在一些展开上有所体现。Monster 塑造了很多生动的人物，或喜或悲的人物有很多，但是是否所有的人物都需要展开？Monster 中出现的人物（尤其是前期）基本上都获得了自己的一个小归宿。而这些人物的出现，有的与主线有密切联系，而有的只是刚好和“主题”有轻微的呼应。以妮娜的经历为例，妮娜打工的咖啡厅老板罗素先生，身份是一个杀人犯。但问题在于为什么需要将妮娜所在的餐厅设计成一个杀人犯，而不是一个普通人？关键在于罗素那句“砂糖的味道”。如果这句话没有出现，那么这一段背景设定的意义就不存在了。</p><p>　　但相反的，舒克警官出现则是意义不明。作品在舒克警官的登场及遭遇上花费了大功夫，他也很好地起到了一个“工具人”的作用串起了这个案件，但是只是造出了一个和天马被陷害案相仿的结构，舒克警官自身是没有立起来的角色，对于故事发展的作用也非常有限。和舒克形象类似的有博德曼律师——博德曼律师大可不这样费笔墨给出一个背景。</p><p>　　为了更直观地表达上述批评的含义，我举出派特罗夫院长事件作为对应的例子。私以为派特罗夫院长和“宝宝”是处理得相当出色的两次展开，其有血有肉及其登场和退场的方式较舒克和博德曼都是更加自然合理的。　　</p><p>　　当然这个挑剔未免苛刻了点。作为一个如此宏大的案件，如果牵扯的人物太少反而是一个奇怪的点。（甚至本文出现的众多巧合，比如葛利马和罗伯特曾是好友这样的设定已经有些过于刻意了。）但是这些人物如何登场、如何退场、如何在后续中发挥自己的作用，都是值得费心的事情。私以为 Monster 并没有把这一点处理得非常好，使得节奏拖沓问题更加严重。</p><hr><p>　　好像前面各种指责，把这部作品批得体无完肤。但并不如此，这部作品具有的特点是那么独特，让我完全可以忽视前面的诸多问题将其纳入我的推荐。正如前文所言，其剧情设计、人物设计、叙事手段设计都是独树一帜的。我将试图讨论一下这几个点，之后进入最为复杂的主题篇章。</p><h2 id="关于剧情"><a href="#关于剧情" class="headerlink" title="关于剧情"></a>关于剧情</h2><h3 id="时间表"><a href="#时间表" class="headerlink" title="时间表"></a>时间表</h3><p>　　以下表格部分根据回忆重现部分剧情，肯定存在错误之处。标注黑体为重要事件。其中，短期支线剧情均省略。</p><div class="table-container"><table><thead><tr><th>标记</th><th>事件概述</th><th>线索</th></tr></thead><tbody><tr><td>暗线</td><td>1950 年代，小镇屠杀惨剧</td><td></td></tr><tr><td><strong>波纳伯塔</strong></td><td>1960 年代，波纳伯塔入住红玫瑰宅邸，举办朗读会</td><td></td></tr><tr><td><strong>511</strong></td><td>1960 年代，511 幼儿之家</td><td></td></tr><tr><td>葛利马</td><td>1961 年，《超人苏坦纳》在西德开播，持续两年</td><td></td></tr><tr><td>博德曼</td><td>1968 年，休特芬·博德曼以通敌之罪被捕</td><td></td></tr><tr><td>查培克</td><td>1969，查培克与科拉休会面</td><td></td></tr><tr><td><strong>安娜&amp;休伯特</strong></td><td>1970 年，马尔戈特·兰卡与安娜非法越境德国，安娜越境失败</td><td></td></tr><tr><td>博德曼</td><td>1971、1972 年，博德曼夫妇相继离世</td><td></td></tr><tr><td><strong>安娜</strong></td><td>1974 年，安娜前往布拉格旅游，与军人结婚后为躲避优育计划私奔。军人被捕后杀害</td><td></td></tr><tr><td><strong>安娜&amp;波纳伯塔</strong></td><td>1975 年，双胞胎出生</td><td></td></tr><tr><td><strong>安娜&amp;休伯特</strong></td><td>1976 年，兰卡写信给安娜：“三只青蛙”</td><td></td></tr><tr><td>休伯特</td><td>1977 年，汉斯格鲁古·休伯特与兰卡分别，卡尔出生</td><td></td></tr><tr><td>查培克</td><td>1979 年，米朗·科拉休出逃</td><td></td></tr><tr><td>安娜&amp;休伯特</td><td>1980 年，休伯特前往三只青蛙，遇到安娜和双胞胎</td><td></td></tr><tr><td><strong>波纳伯塔&amp;妮娜&amp;查培克</strong></td><td>1981 年，双胞胎之女被查培克和波纳帕达带入红玫瑰</td><td></td></tr><tr><td><strong>波纳伯塔&amp;双胞胎</strong></td><td>波纳帕达策划红玫瑰屋惨案。三只青蛙失火</td><td></td></tr><tr><td><strong>波纳伯塔</strong></td><td>波纳帕达从捷克到西德</td><td></td></tr><tr><td><strong>约翰&amp;沃尔夫&amp;511</strong></td><td>1984 年，沃尔夫将军于捷克边境发现双胞胎并带回，并将约翰放入 511</td><td></td></tr><tr><td><strong>511</strong></td><td>1985 年，511 起火案</td><td></td></tr><tr><td><strong>约翰&amp;天马</strong></td><td>1986 年，李贝特夫妇谋杀案</td><td>故事的起点</td></tr><tr><td><strong>双胞胎</strong></td><td>双胞胎居于海德堡佛多拿家，约翰失踪</td><td>511 之家</td></tr><tr><td>波纳伯塔</td><td>1989 年，柏林墙倒塌。波纳帕达逃至庐恩海姆，出版《安宁的家》</td><td></td></tr><tr><td>查培克</td><td>彼得·查培克在米朗·科拉休的协助下逃到德国，定居法兰克福，举办朗读会</td><td></td></tr><tr><td>约翰&amp;休伯特</td><td>1992 年，兰卡隐退，定居奥芬巴赫</td><td></td></tr><tr><td>约翰&amp;休伯特</td><td>休伯特司机和管家遇害</td><td></td></tr><tr><td>约翰&amp;休伯特</td><td>1993 年，休伯特朋友及竞争对手遇害</td><td></td></tr><tr><td>约翰&amp;休伯特</td><td>1994 年，休伯特会计遇害</td><td></td></tr><tr><td><strong>约翰&amp;天马</strong></td><td>1995 年，天马和约翰重遇</td><td>艾娃的目击</td></tr><tr><td><strong>天马&amp;约翰&amp;休伯特</strong></td><td>1995 年 5 月，佛多拿夫妇及记者遇害。休伯特园丁遇害</td><td></td></tr><tr><td>休伯特</td><td>1995 年 12 月，兰卡被杀</td><td></td></tr><tr><td><strong>天马&amp;查培克</strong></td><td>1996 年 2 月，土耳其街案件</td><td>极右四人（宝宝，查培克现身）</td></tr><tr><td><strong>天马&amp;约翰&amp;休伯特</strong></td><td>1996 年，慕尼黑，休伯特继承案</td><td>绘本出现，三只青蛙，休伯特线结束</td></tr><tr><td>511&amp;天马</td><td>1996 年，布拉格，511 院长被杀</td><td>511 磁带，511 线结束</td></tr><tr><td><strong>伦克</strong></td><td>1997 年，布拉格，伦克找到红玫瑰宅邸</td><td>怪物的情书和安娜的画像</td></tr><tr><td><strong>天马</strong></td><td>布拉格，天马越狱案及艾娃求生案</td><td>休特芬·博德曼之子入场</td></tr><tr><td><strong>查培克&amp;约翰</strong></td><td>艾娃被宝宝和查培克带至法兰克福指认约翰</td><td>四人组希特勒计划</td></tr><tr><td>约翰</td><td>约翰抵达红玫瑰宅邸，玫瑰宅邸被烧</td><td>46 具白骨</td></tr><tr><td>查培克</td><td>1998 年，法兰克福连环杀人案，宝宝和查培克死亡</td><td>查培克线结束</td></tr><tr><td><strong>ALL</strong></td><td>卢恩海姆事件</td><td>波纳伯塔线结束</td></tr></tbody></table></div><p>　　以上是结合个人记忆以及参照<a href="https://book.douban.com/review/7459626/" target="_blank" rel="noopener">该链接</a>的结果。从一个角度看，上述区分把剧情划分为故事开始前和故事开始后两部分，而整个故事主线是追寻“过去发生了什么”，或者“怪物是如何诞生的”。所以这个故事是一半在往前推进，另一半在往后推进：一直到故事的结尾，故事的最初推动者才终于现身。所有人的行动是明线，过去发生了什么是暗线；从另一个角度看，故事的明线是天马如何追踪约翰，暗线是约翰如何完成自己的计划。这条线索是故事的大主线，在这个故事线中，天马只是故事推动者而非主角；至于天马线，我们将会将更多注意力放在天马所承载的主题上，所以剧情部分我们先将其略过不表。</p><p>　　而这条线索核心在于妮娜。妮娜是故事最开始的参与者，妮娜的记忆是走往过去的核心。然而妮娜的记忆被上了几道锁：佛多拿，红玫瑰&amp;查培克，妮娜&amp;波纳伯塔。以妮娜为核心的上述过去的主线顺序为：妮娜被母亲放弃，妮娜被波纳伯塔抓入红玫瑰宅邸，波纳伯塔放还妮娜，妮娜见到约翰并给约翰讲述经历，妮娜和约翰逃离国境，妮娜被放入 47 号孤儿所，妮娜成为李贝特养女。其中，被母亲放弃的部分，是关于约翰动机的揭示，这是在故事最后的最后才出现的内容；红玫瑰宅邸由于内心的恐惧不愿回忆，在心理医生多词帮助下未能成功；和约翰讲述经历的回忆是贯穿全剧的最大的反转，也是“怪物”诞生的重要契机；逃离国境及其之前的回忆由于李贝特案件而被封锁。</p><h3 id="几点补充"><a href="#几点补充" class="headerlink" title="几点补充"></a>几点补充</h3><p><strong>明暗线的连接</strong></p><p>　　关于妮娜的记忆存在一个争议，主要来自于“妮娜向约翰讲述红玫瑰宅邸”一处。有观点称：约翰在接受了妮娜的故事之后，决定自己成为怪物，将妮娜洗脑忘掉红玫瑰宅邸事件，然后自我洗脑，让自己成为红玫瑰宅邸事件的亲历者，并代替妮娜成为怪物。这个观点个人认为并不可靠（事实上这里有诸多的解释，放在这里的不是我最开始的解释，在思考之后认为目前的解释更加合理。）</p><blockquote><p>（约翰）内心真正渴望把妹妹的可怕经历全部承受最后才会以为那是自己真实的记忆。妮娜也应该是受到了很大的精神创伤所以在讲述过程中主客互换，类似希望对面这个倾听的“自己”才是真正的自己之类的。      ——$S^2$</p></blockquote><p>　　所以约翰在根据自己相信的记忆行动，而这个记忆是属于妮娜的。这个意义上，正向时间里，妮娜的明线（寻找自己的记忆）和约翰的暗线是呼应的；约翰在正向时间中的明线是和妮娜过去时间中的暗线呼应的。换句话说，约翰是活在过去的，没有失去记忆的妮娜。对于这个呼应关系，核心在于“女装”的约翰。在土耳其街约翰就以女装的身份出现过，这里是对这个镜像的最初提示，和最初的“女装”约翰对应，一直链接到最后章节，母亲放弃妮娜，天马自问<strong>“母亲放弃的是谁”</strong>这个问题。请格外留意这个问题，私以为这是理解约翰线的最为重要和初始的线索。所以两组明暗线交织在一起，并借用妮娜回忆的问题不断反复，由天马和伦克发现的物证对应妮娜回忆起的记忆，完整地再现出过去发生的一切。这种叙事结构非常地精巧，让这种不断地插叙倒叙的叙事结构也能有序地进展，并且留足了悬念。<br>　<br><strong>OP 与明暗线</strong></p><p>　　说到悬念，不得不提起 Monster 的 OP。这是非常独特的 OP，甚至一直到中后期之前都无法理解 OP 的含义。OP 中的所有元素，排除掉心惊胆战、“孤立无援”的天马，各种元素都是指向的三只青蛙、红玫瑰宅邸事件，以及所谓的“最后的风景”。这样的 OP 是很隐晦的，即使将后面各类事件的关键元素凑在一起我们也不能得知含义，这也是叙事结构异曲同工的效果。天马和伦克发现的物证只能说明当时发生了什么，例如红玫瑰宅邸事件的存在性，而不能探寻其动机；而这个动机的部分则存在在妮娜的回忆里。比如那个贯穿始终的断章取义，“人可以成为任何东西，但是不能成为怪物。”相较而言，ED 的信息量不太多，我们就不多琢磨了。</p><p><strong>两个反转</strong><br>　　<br>　　以及在红玫瑰宅邸登场前，出现了一个大 Trick，即 511 幼儿之家。这是一个华丽的障眼法，不仅吸引了观众也吸引了天马的注意力。似乎在 511 幼儿之家故事就到达了一个源头，然而事后证明这这只是对红玫瑰宅邸的拙劣模仿。是非常自然且优秀的展开，而 511 幼儿之家的前院长的改过自新也是对应结局的暗示。</p><p>　　关于剧情，最后想要提到的“究竟是谁进入了宅邸”这个大反转。这个反转绝对留够了线索，但是观众基本上（或者说我）难以想到。这里约翰说了一句“梦醒了”，于是立刻毁掉了自己一手建立的黑道银行，前往卢恩海姆。故事在这里发生了非常有趣的变化，关于“怪物是谁”的讨论也在这里第一次浮上水面，也是终幕的拉开。</p><p>　　后续关于人物和主题部分，请见本作品剧评（下）</p><h3 id="几点更新"><a href="#几点更新" class="headerlink" title="几点更新"></a>几点更新</h3><ol><li>为了方便，将 Anna Liebert 译为“妮娜”，而不考虑其本名；约翰同理。Franz Bonaparta 统一译为“波纳伯塔”，并将该角色的其他名字也用该名字代替。</li><li>附上维基剧集链接：<a href="https://en.wikipedia.org/wiki/List_of_Monster_episodes" target="_blank" rel="noopener">List of <em>Monster</em> episodes</a>。</li><li>在思考之后，接受$S^2$对于“关于剧情-几点补充-明暗线的连接”中妮娜失忆原因的见解，并将原始版本放置在这个位置：关于妮娜的记忆存在一个争议，主要来自于“妮娜向约翰讲述红玫瑰宅邸”一处。有观点称：约翰在接受了妮娜的故事之后，决定自己成为怪物，将妮娜洗脑忘掉红玫瑰宅邸事件，然后自我洗脑，让自己成为红玫瑰宅邸事件的亲历者，并代替妮娜成为怪物。这个观点个人认为并不可靠，我更倾向于：妮娜的故事让约翰自以为自己是亲历者而变成了怪物（这个观点的暗示来自于，妮娜讲述了几天几夜这个故事），妮娜自己出于回避忘记了红玫瑰宅邸。但无论如何，妮娜失去了逃离三只青蛙之前的记忆，而约翰记得哪些事件则是不清楚的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo开启RSS</title>
      <link href="/2020/tech/Hexo/Hexo%E5%BC%80%E5%90%AFRSS/"/>
      <url>/2020/tech/Hexo/Hexo%E5%BC%80%E5%90%AFRSS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　想了想还是打开 RSS 吧。其实没有什么特别的目的，只是对于一些（我觉得没有）正使用 RSS 的朋友一些方便吧。对于 RSS 感兴趣的，可以点击这个链接：<a href="https://en.wikipedia.org/wiki/RSS" target="_blank" rel="noopener">Link</a>。顺便这里作为一个小小的 Memo，慢慢地记录一些推荐的 RSS 源。</p><a id="more"></a>  <h2 id="关于RSS"><a href="#关于RSS" class="headerlink" title="关于RSS"></a>关于RSS</h2><p>　　这是一个相当有历史感的东西，现在推荐算法之类的东西遍地都是，让这种不太智能、比较僵硬的获取信息的方法显得有点过时（但 Blog 啊什么都是过时的东西了）。但是总有一些信息是希望主动获取的，而这样的信息分布在各种各样的网站，逐个逐个地打开是一件令人烦恼的事情。所以干脆把它们放在一起，这就是 RSS 的初衷。<br>　　然而 RSS 和 Blog 相性并不是很好。Blog 体现着维护这个网站的主人的诸多用心，各种各样的细节都是经过多番考量的结果，是毫无疑问的个人维护的思想的小庄园，通过 RSS 来阅读这些信息未免会失去这片园地的主人希望提供的信息。但无论如何，为了方便还是提供了这样一个链接（因为对于主人来说，打开这个服务并不是困难的事情）。后面也会简单记录一下基于 Hexo 的 Blog 开启 RSS 的方法。<br>　　为了使用 RSS，需要一个 RSS 阅读器和订阅源。<br>　　<strong>关于阅读器</strong>：前段时间，由于某些不太清楚的原因，国内封禁了一批 RSS 阅读器的服务提供者，类似 Feedly 这样的网站，本人原来使用的 Inoreader 并未能幸免。然而最近本人发现 Inoreader 突然恢复了功能，仿佛某个老友突然造访，还是令人高兴。<br>　　<strong>关于订阅源</strong>：订阅源是由各个网站提供的链接，可以用来告诉 RSS 阅读器自己的网站存在了更新。由于 RSS 在国内非常不主流，大多网站也并未提供对应的 RSS 源。搜索有趣的 RSS 源是一件费时间，但是能长时间给人愉悦的工作。本文也希望用该部分内容记录一些优秀的具有 RSS 源的网站。</p><h2 id="RSS源"><a href="#RSS源" class="headerlink" title="RSS源"></a>RSS源</h2><p>本栏欢迎 RSS 用户推荐。</p><ol><li><a href="https://sspai.com/feed" target="_blank" rel="noopener">少数派</a>：挺有趣的科技宅关注点聚集地。</li><li><a href="https://www.theguardian.com/music/classicalmusicandopera/rss" target="_blank" rel="noopener">守护者 - 古典音乐</a>：一些古典音乐的信息。</li><li><a href="http://www.yankodesign.com/feed/" target="_blank" rel="noopener">Yanko Design</a>：设计作品呈现，偶尔能有不错的点子。</li></ol><h2 id="Hexo如何启用RSS"><a href="#Hexo如何启用RSS" class="headerlink" title="Hexo如何启用RSS"></a>Hexo如何启用RSS</h2><p>　　这个工作相当的简单。</p><ul><li>安装 npm 脚本，用以生成富文本 xml 文件。</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-feed</span><br></pre></td></tr></table></figure><ul><li>打开 Hexo 最外层的<code>_config.yml</code>文件，在其中添加下述代码：（请仔细观察，文件中是否已经存在此代码。）</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">    <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><ul><li>然后在任何一个位置标记上 RSS 源的链接，类似<code>**/atom.xml</code>这样的链接。例如本站的 RSS 是：<code>https://josep-h.gitee.io/atom.xml</code>。（这个链接可以在每篇文章右边的 Links 的最后一排找到。）</li></ul><p>　　这样就可以通过 RSS 阅读器获取信息了。需要注意的一点是，这样拉取的信息是不完整的，例如文内放置的音乐不会呈现在部分 RSS 阅读器中（这个情况在 Inoreader 中存在。）</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两只金乌（上）</title>
      <link href="/2020/essay/%E6%9D%82%E8%AE%B0/%E4%B8%A4%E5%8F%AA%E9%87%91%E4%B9%8C/"/>
      <url>/2020/essay/%E6%9D%82%E8%AE%B0/%E4%B8%A4%E5%8F%AA%E9%87%91%E4%B9%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　相传在盘古开天辟地后不久，天地间仍处在某种混沌，在这漫长的时间中诞生的是一种金色的鸟，它被人们称为金乌。</p><p>　　　　——《华嵇纪-卷三》</p><a id="more"></a><h2 id="金乌-（一）"><a href="#金乌-（一）" class="headerlink" title="金乌 （一）"></a>金乌 （一）</h2><p>　　“金乌”是我在乡下采风的时候，偶然从小镇里的一个当铺的老板那听来的事情。他显然不是很清楚金乌具体是什么，只是神神叨叨地说这是一种不可靠近的神鸟，通体金色，凡靠近之物均不可逃脱灰飞烟灭的命运。看着他一脸的严肃，这毫无疑问勾起了我的好奇心，开始在坊间搜索关于这个“金乌”的故事。我发现这里的像我这样的年轻人，大都不太知道这个事情；但老人们或多或少都听过这个故事。他们对于这个事情的表述没能更加详细，只是慢慢得知了所谓“金乌”可能是复数的存在，甚至可能是一个“种族”，如果我们能这样称呼。</p><p>　　这样无谓的搜索持续了约莫两周的时间，也接近了我采风得到的假期的时间的尾声。尽管期间一直在这周围打探“金乌”的故事，但总归觉得这还是在迷雾里的一个东西，是一个比传说更为难以信任的东西。但我相信所谓传说皆具有某种源头，而这个源头就是我感兴趣的东西。抱着最后的期待，我走进了当地的图书馆的古籍区，打算在这里碰碰运气。</p><p>　　正当我搜索到一部叫做《华嵇纪》的时候，我突然产生了某种灵感，笃定这本就是我一直在寻找的东西了。我顺着他的编号朝着书架上寻去的时候，却发现这本书不在架上。它被借走了？我很失望地回到检索处。这些小挫折难以击败我这样折腾的人，于是我开始不依不饶地询问检索处的工作人员，连珠炮地询问着，“这本书现在在哪里？”，“哪里有它的副本或者有谁知道这本书情况？”等等的问题。工作人员陷入了某种茫然，慌乱地回答着：“它不在书架上吗？”，“哦哦，我不清楚它的情况，但我认为图书管理员或许知道”。然后我追问道，“那图书管理员现在在哪呢？”。工作人员便又开始吱吱唔唔了。</p><p>　　尽管工作人员的无用超出了我的想象，但还是给我指出了一个方向，“在那边有个小梯子，那个梯子一直往上，通向一个小阁楼间。阁楼间里是我们图书管理员的办公室，你去那里问问。”这是我知道的一切新鲜的信息了。</p><p>　　尽管不怀什么期待，我还是爬上了这个梯子，见到了一个空空的小房间——里面空无一人。这是一个非常非常小的房间，四处的装潢也是崭新的，仿佛家具是刚刚才被搬放至此，没有任何沾上的灰尘，这对一个阁楼来说简直难以置信。这里摆放的东西也让我认识到这里的工作人员很快会回来。于是我暂时离开了图书馆，到了对面的一家面馆，打算随便吃点什么。但这里的人山人海的吃饭场景让我食欲全无。匆匆吃完，发现现在还没到图书馆上班的时间，不得不在旁边的一家小茶馆里面整理这段时间采风的成果。然而由于我过于执着于金乌，自己的工作进展反而是一筹莫展，觉得这次的采风终归是失败了。</p><p>　　对自己的工作感到失望之后，我再一次回到了那个阁楼里的小房间。“不，我不知道有这本书。哦，或许说我听说过，但不详细了解。”，“不，我不是古籍区的管理员，我是图书馆的管理员。”，“你不该来找我，你应该去三楼的那个总管理部。他们或许会知道。”然后我得知了如何到达图书馆三楼——这实在是非常费劲的一条路。</p><p>　　在我找到他们所指的总管理部的房间时（事实上，我在中间绕了很多很多的路，三楼有非常繁复的办公室设置，每一次我敲开一扇门，都会有一个铁板一样的脸出现告诉我，“对，我们是总管理部，但不我们不负责你希望询问的内容。不是我们这里，你应该去检索处问清楚。”），我第一次感到如释重负。</p><p>　　“请问，我在找一本叫做《华嵇纪》的古籍，请问你们知道这本书现在在哪里吗？检索处告诉我这本书并没有被借阅，但……”我试图组织我的语言。“但它不在这里对吧？”管理人员看着我。“对，我想……”我注意到他直愣愣地看着我，但还是不得不接下去，“我想知道这本书在哪里，我想立刻借阅它。对，我想立刻借阅它，我赶时间。”</p><p>　　他看了我好一阵子，好像仔细的考究着我的眼睛和鼻子的位置是否正确一样最终得到了准确的结果一般，终于开口了。“你的情况我清楚了。你希望立刻借走一本没有被标注为借出的书，或者他的副本……”此刻他桌上的电铃响了，然后他结束了到嘴边的言论，说了句失陪然后快步离开了办公室。我窘迫地站在那里。</p><p>　　大概一刻钟后，管理人员回到了办公室，在自己的椅子里坐下，在文件里一阵翻找之后，“对的，对的。我知道了，我今天早上刚刚收到一份整理的古籍清单。清单显示你要的那本书，在一楼小梯子通往的阁楼里存放着。不过那本书非常破败了，你可能看不到它。如果你想看到这本书，你需要找那里的管理员。”“可是我刚刚从那里过来”，我小声抗议。“如果可以”，管理人员看着我，“你能告诉我你找那本书做什么？我看过那本书，或许还记得什么。”我感到我露出了一个吃惊的表情。“真的？那太好了，我在找关于‘金乌’的事情，请问您知道吗？”“对，我知道，那个‘金乌’。”</p><h2 id="金乌-（二）"><a href="#金乌-（二）" class="headerlink" title="金乌 （二）"></a>金乌 （二）</h2><p>　　“如果我没记错的话”，他说了这句话后停了下来，开始在文件堆里翻找着什么东西，尽管我们都知道他翻找的动作并不会帮助他回答这个问题。“《华嵇纪》里确实有着关于‘金乌’的记录，但还是不甚详细。有这么一句话，‘相传在盘古开天辟地后不久，天地间仍处在某种混沌，在这漫长的时间中诞生的是一种金色的鸟，它被人们称为金乌。’我记得很清楚。”</p><p>　　我草草地在笔记本上记下这句话，这基本上是这段时间最为切实、明确的进步了，但还是，存在于语言这种转瞬即逝的载体之中，甚至我连自己是否有一部分字没听清而理解错误都全然不清。就在我这样思考的时候，声音在这个房间中的混响也结束了，于是我不得不重复一遍他的话以得到确认。他点了点头，同时示意自己也不记得更多的细节了。“总之你可以去一楼阁楼拿到那本书，如果一切顺利的话，它应该在那里。”</p><p>　　事情发展至此，我不敢认为关于“金乌”，我能从这本书里找到更多的细节，于是我点了点头，对他表示感谢，然后离开了。但我很快意识到，在这个小镇里，对金乌感兴趣的不止我一个。</p><p>　　在我的上次徒劳的搜索后的两天的早晨，我所居住的宾馆前台告诉我有一位女士曾经给我打过电话，关于“金乌”的事情。我很激动地记下那个电话号码，向宾馆道谢后匆匆忙忙走到外面的电话亭，拨下那个号码。不一会，我听到听筒里传来一个女性的声音，“请问您是那天搜索那个‘金乌’的先生吗？”“是的是的，请问女士是？”</p><p>　　我明显感觉到对方有些许迟疑，但还是立刻答道，“我也是搜索‘金乌’的人之一，我在小镇的图书馆里和检索处询问一本叫做《华嵇纪》的时候，检索处工作人员告诉我，就在两天前有位先生也问过这部书的事情，她给了我一个电话，于是我迟疑地打了过来，发现接电话的是宾馆的前台……所以……”听到对方这样说，我不免失望——这意味着对方知道的信息应该不比我更多。我把我收集到的信息一五一十地告诉了她。“这样吧，我希望再去一次图书馆。我想自己找到那本古籍看看。”我感到些许无奈，但还是只能回答说，“好，我也打算这样做来着。不然就明天吧？”然后是一些琐碎的约定。</p><p>　　第二天，早晨八点半的时候，我在图书馆的门口看见了一位端庄的女性，相当文质彬彬。既然是追踪“金乌”的人，自然是一个研究传说或者民俗之类的学者了（除了我这种仅仅出于游手好闲性质的）。我向她挥了挥手，示意她我就是那个搜索金乌的先生。</p><p>　　“哦，早。”“嗯，早。”套路的见面礼结束后，还是有些许尴尬。“那我们进去吧？”在进去的过程中，我再一次简单地向她说了一遍自己那天在图书馆里的糟糕经历。这一次我有了明确的目的地，那个曾向我背诵过《华嵇纪》内容的管理人员。我直觉地知道这是位某种意义上的“该书籍”的最高管理者。</p><p>　　因为我已经来过了三层的总管理部，这一次我很快找到了这个地方，见到了上一次的那个管理人员。我示意让女士先进去说明来意，自己也紧跟着进去了。管理人员的回复和之前并没有什么差异，依然是让我们去一楼阁楼间找图书管理员。但我们不依不饶地问了许久，管理人员表示自己在下午会给我们一个回复，关于那本古籍现在在哪里、是否可借阅这种种问题都会一一告知我们。我们心满意足地离开了三楼总管理部。</p><p>　　“现在我们去哪里？去一楼阁楼吗？说不定能直接看到《华嵇纪》。”我点头表示同意。不久后我们站在了一楼阁楼间的地板上。这里的一尘不染等等特点完全如同上次，这一次书籍管理员正坐在我们进门正对的那个办公桌上。上面的台灯发出橙黄色的光线，让整个房间的整洁呈现出了一种奇特的氛围。“嗯……那个……”站在我身旁的女士打算开口，“我们是来询问关于《华嵇纪》的事情的。总管理部的人说，这部书现在正在你们这里，请问我们能看一下吗？我们只对这本书的一部分感兴趣。”“啊，很遗憾！我们并不知道这本书在哪里，正像我们之前告诉过你们的这样。这样的书籍不会经过我们管理员之手，而是直接交给古籍管理员。”“但我们怎么找到这个古籍管理员？”“这个我也告诉过你们了。”图书管理员很不悦地看着我们两个。</p><p>　　很快图书管理员似乎看出她的态度太强硬，便补上了几句。大概是说她确实不知道情况，这些书不经由她们之手，我们找到古籍管理员一定能要到这本书云云的话。并且对总管理部管理人员记忆的段落表示不予评论，“我没看过这本书，它压根没到我的手上。”然后又紧接着说，建议我们不要接着找这本书给图书馆带来麻烦云云的话，又表示那本书没有什么价值云云。我们简单地堆笑应付了一下就离开了。</p><p>　　“我查找了这里的所有文件，关于那本《华嵇纪》的。”管理人员转动着他的小转椅，“记录这有关它信息的，有且仅有我说的那个关于古籍的清单，除此之外，我找到了一些专家。他们有的肯定地表示我的回忆是精确的，但这本书恐怕已经不容易找到了。它或许作为重点的保护对象保护起来了。”我们正想追问更多的细节，但管理人员露出某种无可奉告的神情，把我们请出了总管理部。</p><p>　　这个时候我才突然想起，“你是为什么需要找到这部书？”这位动人的女士回答道，“我是研究民俗的学者。我在研究中发现在一系列讨论宇宙生成的传说记载中，都提到了一个名为‘金乌’的生物，他们表示，这种生物在传说中的地位不可动摇。但是在我查找一切关于‘金乌’的论证之后，发现他们不可避免地引用了这本名为《华嵇纪》的古籍。然而我跑遍了大半个都城，都没找到这部神秘的古籍，我一直追踪至此，找到了关于它的些许线索终于也在这里断掉了。”</p><p>　　她停止了讲述看着我，似乎想听听我寻找金乌的理由。面对这样认真的学者，我对自己的画家身份感到羞愧，也耻于告诉这位博学的女士自己仅仅是处于好奇才这样大费周折的，于是我尴尬地笑了笑，没有出声。</p><h2 id="《华嵇纪-卷三》"><a href="#《华嵇纪-卷三》" class="headerlink" title="《华嵇纪-卷三》"></a>《华嵇纪-卷三》</h2><p>　　相传在盘古开天辟地后不久，天地间仍处在某种混沌，在这漫长的时间中诞生的是一种金色的鸟，它被人们称为金乌。</p><p>　　金乌通体金黄，部分呈现赤红色，故也名赤金乌。金乌呈现鸟的形态，有宽阔的双翅，展翅可包揽视线中的全部天空。其全身仿佛被火焰包裹，以致耀眼夺目，人类不可长久直视。观看过久者眼睛会呈现异变，留下黑癍，之后该人若观察其余物体，皆会看见一淡黄色重影，并呈现出金乌的轮廓。</p><p>　　金乌每日自阴影处起飞，连续飞翔一日到阴影处停歇，凡飞过之处，皆一片光明灿烂。传说，金乌非晨起松枝所挂之露珠不饮，非夜雨后拔起之笋不食。后来，金乌渐渐隐去了踪迹，声称自己看见过金乌的人也明显变少。为铭记这种神鸟，世人为太阳起别名为金乌。（灯徽氏作。）</p><h2 id="现代的金乌（一）"><a href="#现代的金乌（一）" class="headerlink" title="现代的金乌（一）"></a>现代的金乌（一）</h2><p>　　由于各种寻找的尝试我都碰了壁，再加上自己的假期也已经在不知不觉中用尽，不得不起了归意。“这个传说虽然是从这里被我发现的，却不意味着这个传说只有这里才有。”我一边把我这几日的衣服收进包裹里一边这样想。我走到旅馆的柜台，把这几日的旅费和伙食费一并结了，突然起意想要给那位女士打一个电话。后来想想还是算了，就借旅馆的信纸随随便便写了些告辞的文字，放进了旅馆门口的邮筒然后就离开了。</p><p>　　后面回到了自己的寓所，却总是记挂着那个叫做“金乌”的生物。我尝试找了不少当地的民俗学家、民族学家，但也只能说是一无所获。有的民俗学家能说出《华嵇纪》的名字，而其他的则都摇头表示从未听闻。经过几日的折腾，虽然绘制的作品还在缓慢地推进，但心思总不在上面。每次画上几笔，便觉得索然无味，想要拿起画板就砸下去。想着“今天就到这里吧”，就掷下了笔，接着苦恼“金乌”的事情了。</p><p>　　反复苦恼了几日，一日在外出吃饭途中偶然发现散落在地上的报纸。报纸上用那种廉价的纸印着夸张的大号字写成的夸张的标题。我拾起这个报纸，报纸名为《日新日报（娱乐版）》。反复翻了几次。这个报纸的报社（日新报社）是当地非常有名的一家民营企业，除了专门刊登国际或者全国要闻的核心报纸，还有许多八卦花边、娱乐活动的周边报纸。我手上的这份《娱乐版》便是报道娱乐周边的小报。大标题是某某马术比赛，哪位哪位和哪匹哪匹又夺冠了。我随便翻了翻，寻人启事、招聘岗位、治疗脚气的广告什么的，真的是应有尽有。我想了想，带着报纸回到了画室，试探性地给报社打了一个电话，问了问刊登小边角启事的要求和酬金等等。心里盘算了一下，便联系报社，打算在该报的小角落连续登个一周的广告。</p><p>　　”先生们好，鄙人系某某画社画师，日前打算以本地传说为题绘制大型主题作品。但在‘金乌’这一主题上缺乏素材。望知情人士将信息材料邮寄给本人，经验证后将重金回报。“后面是我的地址、联系方式种种。带着这个短讯造访了报社，将之交给了报社之后，我并不期望能获得什么新信息，还是就回到画室接着开始自己不安稳的创作。</p><p>　　报纸所说的”以本地传说为题“这个，其实并不是胡诌的，也的确是我目前正在从事的创作。我本次前去采风也是希望搜集这方面的线索。然而七色鹿、玉蟾蜍此类，比起这神秘的”金乌“都突然间黯然失色，也不怪我看着空白的画布灵感顿失。看着满屋子混乱不堪的景象，我才反应过来，我现在还饿着肚子。</p><h2 id="现代的金乌（二）"><a href="#现代的金乌（二）" class="headerlink" title="现代的金乌（二）"></a>现代的金乌（二）</h2><p>　　伸伸懒腰，打算出去溜达一下。我习惯性地走到楼下的收信箱，打开收信箱的盖子，抖出一大堆信件。里面多是各地画展的过时的邀约等等，夹杂着一些通过不正常方式塞进我信箱的糟糕小广告。我把这些信件摞在一起，在桌上震了震，让它们看起来规整了一点，便准备扔到最近的垃圾箱里。</p><p>　　这个时候，一个包裹的有点凸起的信件吸引了我的注意力。这封信件不像那些喷着怪异味道香水的邀请函或者小广告，只是在信封上写着收件人的姓名和地址。我把这封信挑了出来揣在了衣兜里，把别的都扔进了垃圾箱，然后开始信步四处溜达。</p><p>　　回到画室，刚刚坐下准备泡杯热茶，才想起包里还装了一封奇怪的来信。我把它从衣兜里掏出来，平展在画桌上，起身去泡了杯热茶。</p><p>　　“画家先生敬启。”</p><p>　　这恭恭敬敬的样子，和这种看起来不太精致的包装，恐怕是哪里的穷酸书生吧。我用裁纸刀划开了信件表面，看见了里面的东西。是一根不明所以的黑色羽毛和一封有着清秀字体的书信。书信写得密密麻麻，显得非常缺少纸张的样子，但是在这众多的字迹里，我抓住了这样一个词：“金乌”。难道说，这个羽毛……？！我搁下了自己的水杯，迫不及待地抓起这封信，全然不顾这封信究竟是从哪里来的、为什么会寄给我，开始了阅读。</p><p>　　（事实上，我收到这封信的时候，已经是我在报纸上刊登启事后的一个多月了。尽管对“金乌”的好奇未减，但是出于养家糊口，我不得不把自己的精力重新集中到自己的传说主题的画作上。画作的进展异常地顺利，让我渐渐忘了我在报纸上登过启事这门子事——这个事实还是在我读完这封信件，正意犹未尽的时候突然想起的。）</p><p>　　以下是我收到的信件的原文，我承诺信件的内容没有经过任何修改，一字一句甚至连一个标点都没有被擅自动过，除了我隐去了信件寄件人及其朋友的姓名，用张三李四这样的名字代替了。</p><h2 id="现代的金乌（三）"><a href="#现代的金乌（三）" class="headerlink" title="现代的金乌（三）"></a>现代的金乌（三）</h2><p>画家先生敬启，</p><p>　　抱歉贸然给您寄来此信。鄙人深知这已经是您在《日新日报》上刊登征集信息启事的三周后了。近日您未继续在该报纸上刊广告，鄙人以为您或已经完成了创作，或因没有足够信息而未能继续创作。（鄙人真诚希望事情正如前者发展。）</p><p>　　正如前文所言，鄙人此番来信，是为画家先生提供些许关于“金乌”的信息。您也不需要给什么回报，如若能助力您作出名画，鄙人便已心满意足。</p><p>　　余下不表，鄙人不止在书中见到的“金乌”一词，而是自己亲眼看过几次。此事回忆起来，已是三四年前的事情。那时间，鄙人费尽心力准备某书塾的考核，成年累月翻阅经书。然枯燥之至，每过几日，必得起身，至林木葱郁之处放松身心。其间某日，艳阳高照，恍惚间，天地昏黑，轰响阵阵；狂风大作，芳草皆俯伏，盖一大鸟自云间飞过。鄙人见识短浅，竟一时愣在原地。待大鸟飞过，轰鸣渐消，鄙人方得回神。其势惊天动地，仿佛书中所述“金乌”，然并非金色，而是通身玄黑。</p><p>　　鄙人深觉惊骇，便连连造访此地。后又见得几次大鸟。数次后，鄙人以为，大鸟于太阳升起后数时后飞起，太阳落下前数时飞回。其与《华嵇纪》中所记相差甚大，其虽声势浩大，然无令人顶礼膜拜之气质，与鄙人所想象神鸟相差甚远。尔后几日，鄙人虽仍定期造访该地，但无缘再见到真身。然而，鄙人对此大鸟乃金乌这一观点深信不疑。</p><p>　　画家先生必嗤笑鄙人所见绝非金乌。先生请想，书中所记金乌距今已不知多少时日，其岂能千百年间丝毫不变，从未演进？金乌记述渐少，并非金乌隐其身遁其形，只因其演进变化，肉眼凡胎不能辨识之，而神鸟岂需隐身遁形！且以其遮天蔽日、芳草失色之形态，不做他想。</p><p>　　随信附有鄙人经过多次探访在博物馆中找到的类似“金乌”羽毛样式的样本，但颜色和大小与鄙人所见相差甚远，仅供您参考。此外在另一个包裹中是鄙人在金乌驶过地点拾到的一小片黑鳞，鄙人猜测此为金乌的爪上遗落，故也随信寄送。然黑鳞不能放入此信封，遂将其单独包装在另一信封中一同寄送。</p><p>顺颂时祺，</p><p>张三</p><h2 id="现代的金乌（四）"><a href="#现代的金乌（四）" class="headerlink" title="现代的金乌（四）"></a>现代的金乌（四）</h2><p>　　我看完这封信不禁哑然失笑——这不是现在时髦的所谓”飞行器“这样的东西吗？这终究是个每日读书读蠢了的书呆子罢了，出去散步竟然以为自己见到了什么不得了的东西。这个所谓金乌羽毛的东西，不就是类似螺旋桨的翼片这样的东西吗？实在是有点可笑了。想到这里，便也觉得自己也是值得笑话的角色。哪里有金乌这样的东西呢？居然还在最开始对那根羽毛产生了这样的无端的猜测。算了吧，让那”金乌“去吧。我把这个之前备受我期待的信件和那根黑色的羽毛揉在一起，丢到了我的废纸篓里，想到他提及的”黑鳞“，应该是早早就被我扔到收信箱旁边的垃圾箱里了。</p><p>　　抿了口桌上的热茶，我接着完成我的画作。<br>　　<br>　　这个事件之后，我对金乌的兴趣顿时减了大半；加上工作缠身，又任何搜索金乌的进展都碰了壁，完全没有任何推进。就算是我这样游手好闲的角色，也终于奈何不了这个神秘的传说，只得作罢。往后我的工作波澜不惊，金乌也完全从我的生活中淡去。几个月后我从那个小镇的图书馆那收到了一封明信片，意思是那边收进了一批古籍，诚邀热心读者前往云云。至于这是怎么回事我也不知道了。</p><h2 id="屋顶的金乌（一）"><a href="#屋顶的金乌（一）" class="headerlink" title="屋顶的金乌（一）"></a>屋顶的金乌（一）</h2><p>　　像往常一样，我坐在自己的画布前。然而我画室的样子已经完全不同，我用自己主题展赚到的一点钱，在原来城市的隔壁购置了一个新的画室：这个画室临海，其余两面为山。这里虽然看起来偏僻，但是去最近的城市还算方便。但由于不在城市里的缘故，前来拜访的客人还是少了许多，我也幸得个清闲。为了这里的美景，我特意凿通了一面墙，改造成了大玻璃，这样能一览外面的美丽风光，顺便也让画室看起来宽敞了很多。不知道是因为周围环境变化了的缘故还是什么，一时间灵感如喷泉般涌出，所以我也能全身心地投入在创作中。</p><p>　　在我搬了新家后约莫两三个月的某日早晨，我还在叠放被子的时候，听见一阵沉稳有力的敲门声。这个地方、这个点，不太会有人来的。“画家先生，”我听见门外有个浑厚的男声在喊，“麻烦您开下门。”行吧。“好，这就来。”我把刚要叠好的被子就扔在那，带上卧室的门，走到了客厅旁的玄关。我打开门，还没来得及询问对方是谁就注意到了对方的穿着。</p><p>　　门外站着可能有一米九的壮汉，全身站得笔直，穿着浅蓝色的笔挺制服，腰上跨了一个四方形的小包，带着令人愉悦的笑容。这是民警的制服，虽说谈不上熟悉，但还是能一眼认出来。我在那里愣了一小会，“请进，请进，民警先生。”对方鞠了一小躬表示回应，然后走到了客厅的沙发旁边。我示意他先坐，然后自己去厨房准备一些红茶。一会后，我回到客厅。“请问民警先生来鄙人的小画室做什么？”我一边将茶杯递给他。这位熟练地把杯子接过去，喝了一小口，然后把杯子放了下来，前屈自己的身子看着我，“先生，您知不知道那个叫做‘金乌’的盗贼？”</p><h2 id="屋顶的金乌（二）"><a href="#屋顶的金乌（二）" class="headerlink" title="屋顶的金乌（二）"></a>屋顶的金乌（二）</h2><p>　　我迅速回想起了半年前的报纸，当时铺天盖地地报道着“金乌”的“光荣事迹”，几乎这附近的所有博物馆都曾被他光顾过，然而每次都能逃脱。我当时也产生了一点小兴趣——那已经是我停止调查“金乌”后的一年多了。这个“金乌”之所以被称为金乌，是因为他的每一次偷盗的展品的现场墙壁都会抄录同一段话，这也就是我曾经记下的《华嵇纪》的那一段对于金乌的表述。尽管莫名奇妙，但这个盗贼还是被民间用“金乌”称呼。<br>　　<br>　　由于警察一时间的束手无策，加上政府的高额悬赏，当时还掀起了一阵“金乌学“研究的热潮，希望从这个角度揣摩这个高调的盗贼的意图。然而线索并没有比我自己搜寻的时候多出什么，“金乌学”研究爱好者没多久就销声匿迹了。后面关于”金乌“的报道也日益减少了。我揣摩警察局顾着脸面，把一些”金乌“案件藏了起来，或者塞给了别的连环案件，避免被民众指责为无能。我很早就注意到了这个盗贼，并开始了调查。但是如同我搜索那本古籍一般，我完全找不着这个盗贼的线索。这也难怪，若我能找到，警察也就真是吃白饭的了。</p><p>　　回过神来，我注意到了正端详着我的民警，我这才发现他进屋之后只说了那么一句话。不过，民警拜访我做什么？我一动不动地坐在那里，观察着这个民警的动静；这个民警也一动不动地坐在那里，观察我的动静。茶水慢慢开始不冒出白烟，外面的鸟声也逐渐停歇了。民警看起来是突然想起了什么，开始不再继续对我的观察，而是翻起了他的小腰包，然后从里面掏出了装在塑封袋里的一张皱巴巴的纸。他用弯曲的食指和拇指夹起这个塑料袋的一角，小心翼翼地把它夹着，移动到了我的面前。</p><p>　　这是有些年头的一张小纸，大概是 10 里面长宽左右。它的背面（我认为是背面，因为上面什么也没写）一片空白，除了各种经过蹂躏收获的褶皱以外，还有一个黑色的烫疤。这些褶皱看起来都已经棱角不清，应该是在某一个平整的东西下面压过了不少的时间才恢复成这样；黑色的烫疤中间基本已经碳化，周围辐射出棕色的烧痕。我想警察点点头，示意我看得差不多了，此时警察非常缓慢地转过了一个角度。在旋转的过程中，我们明显注意到在纸的另一半写着一行小字以及一串数字一样的东西。警察将其旋转了一百八十度后再一次静止了下来，他的手臂呈现出一种非常僵硬的角度。我指指面前的桌子，示意其完全可以把它放下来，但他摇摇头，等着我再接着观察那张来历不明的纸片。</p><p>　　纸片的另一面，正如我前文所说，是一串文字和另一串数字。那串数字我再熟悉不过，尽管我现在已经搬到了新的工作室，但那串熟悉的数字曾作为我与外界重要的联系而存在。上面那串文字则记录着我更加熟悉不过的东西。我将我的视线移开那张纸，疑惑地看着对面的民警。他的手臂由于维持着这个夸张的姿势而微微颤抖，但是他什么也没有说，他热切地看着我，我只好揣起手，更加仔细地看这张纸片。</p><h2 id="屋顶的金乌（三）"><a href="#屋顶的金乌（三）" class="headerlink" title="屋顶的金乌（三）"></a>屋顶的金乌（三）</h2><p>　　纸片上清清楚楚写着的，是我原来画室的详细地址以及电话号码。字体是用那种相对粗、并且很不适合书写这种语言的钢笔写成的，可以看到有一些字体的结构已经粘在了一起，但这不会影响这张纸条传递的讯息。这张纸的这一面无疑也有一块烫疤，只不过颜色更浅一点，基本上只是一片棕色。除此之外，我在这张纸上找不到任何的信息。</p><p>　　我解开了揣着的右手，四指指向民警并掌心朝上微弓，示意他可以把这张纸收回去了。他看见我的动作，点了点头。将他的别扭的手腕回转了一百八十度，保持着大臂和小臂的角度，将纸条放回了腰包，并从中掏出了另一个用档案袋包着的东西。不过这一次，他很轻松地把它放在了我的桌子上，然后再一次坐直，恢复了之前端详我的姿态。</p><p>　　我拿起档案袋，看着他打算询问是否可以拆开。这位民警用我刚才示意他收回的动作朝着我，示意我打开。我逆时针转着档案袋上的棉线，但里面是什么，我心里已经有数了。这是一个很轻的档案袋，里面可能塞着四五张 A2 大小的纸。揭开了档案袋的封口之后我抽出了里面的东西——准确说是还没有完全抽出，我看见了“日新日报”四个字之后就又塞了回去，顺时针将棉线缠好，打算再一次将它放在了桌子上。民警伸出手，在半空中就接过了档案袋，放回了自己的包里，然后回到了笔直的坐姿。</p><p>　　我看着他，等着他说些什么，但谁也没有打算说话。我起身拿起桌上的两个茶杯，去厨房添了一轮热水坐了回来。在我回来的时候，沙发上的凹陷尚未完全恢复。我把接好的热水推到他的面前，扶了扶自己的眼镜，“那么，警察先生造访寒舍，有何贵干？”。我感觉民警立得不能更加板正的身姿又直了一些，脸上没有什么表情，“没有什么，想知道您是否知道这位‘金乌’？”。我正想回复一些可有可无的套话的时候，对方打断了我，“这张纸是从‘金乌’逃逸的藏身处找到的。”</p><h2 id="屋顶的金乌（四）"><a href="#屋顶的金乌（四）" class="headerlink" title="屋顶的金乌（四）"></a>屋顶的金乌（四）</h2><p>　　果然，这种戏剧性的发展居然落到了我这个过着平平无奇的人的身上。我不知道是该庆幸还是该咒骂几句——因为我突然觉得，这是一个能够接触到“金乌”的好机会。不过！？我突然觉得哪里不对劲。我突然想起了数月以前，和我一同造访图书馆的那位气质不凡的女士。总不会是她的，我这样想。于是我打消了我差点吸一口的凉气，端起眼前的热水。热水上的白烟尚且萦绕，彰显着它的温暖。字体，我怎么都不觉得那个字体是……噢，不对我糊涂了，那个是《日新日报》的剪报，并没有什么字体的存在。不过那烫疤像是落下的烟头造成的，这个时候哪里有女士抽什么烟啊。</p><p>　　这样我打定了结论，看着那个正等着我回复的、面无表情的民警，“不，我想我不认识。”这个时候我的热水回到了桌子上。“不过”，我果然还是想说些什么，“我对这个事情很有兴趣，或许是我遗漏了什么细节。如果可以的话，我可以参与你们的行动吗？如果能在现场看见什么……”“不行。”说着民警就站了起来，“今日打扰了，谢谢您的茶水，我这就告辞。”我还没来得及说更多话，就看见他三步两步走到了门口，向我弯了弯腰表示感谢，然后推门出去了，留下一个我还云里雾里地坐在原地。</p><p>　　这个时候，鸟叫便又清晰了起来。我完全不清楚刚才发生了什么，以及那个名为“金乌”的盗贼为什么要留下那份剪报。我的门铃响了。我本以为我会在门口看见那个僵硬的民警，但是在我打开门后，什么也没有出现。我注意到了躺在我门前的一方小小的报纸。今天的报纸——看来刚才的是报童吧。也对，可敬的民警先生根本就没有按门铃什么的。我拿着报纸回到了刚才的桌子旁，实现不由自主地被报纸的标题吸引了：“金乌”向警察发出挑战，10 月 19 日，他将造访本市博物馆，“盗取”世界名画。这巧了，就是今天吧。</p><p>　　想着自己没什么事情干，于是开始整理自己的着装打算出门先去附近的餐厅随便吃点什么，先去博物馆里面逛逛，看看这个“金乌”到底是对什么东西感兴趣。于是我随便弄了些早餐就出门了。在我关上门的时候，我分明听见了屋里的电话传来的铃声。既然我已经关了门，如果是编辑部的催稿啊什么的，那请尽管过来吧！于是我一摇一摆的往博物馆的方向去了。然后我在路上发现了一两只正模仿着我动作的鸽子，也在那里一摇一摆的。我扇了扇手上的报纸，把它们吓跑了。</p><hr><p>　　<strong>题外话 1</strong>：到目前为止，《两只金乌》一篇的长度已经超过预期了（啰哩吧嗦将近万字了吧？），将这么个长文章放在一起未免太挑战自己的笔力和读者的耐心了，故在此阶截断，将后面的部分放置《两只金乌》（下）或者（中）继续。</p><p>　　<strong>题外话 2</strong>：这一部分创作实在是预料之外的事情，感觉我已经一定程度地偏离了初衷，但是希望在朝一个还行的方向发展。本小说的实质是不会变化的，只是呈现的结构发生了预期之外的发展而已。是件好事。</p><h2 id="修订"><a href="#修订" class="headerlink" title="修订"></a>修订</h2><ol><li>经读者建议，将“现代的金乌（一）”中的“觅食”一词改为“吃饭”。</li><li>将“现代的金乌（四）”及“屋顶的金乌（四）”中的“博物馆”改为“图书馆”。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode模板</title>
      <link href="/2020/tech/VSC/VSCode%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/tech/VSC/VSCode%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Snippets 即快速地插入代码片段的方法。可以通过快捷键或者自动补全生效。这里简单地记叙一下在 VsCode 下使用 Snippets 的方法，以防后日遗忘。</p><a id="more"></a><h3 id="如何配置？"><a href="#如何配置？" class="headerlink" title="如何配置？"></a>如何配置？</h3><p>Snippets 对于不同类别的文件可以使用不同的配置文件。例如对于 Markdown 来说，可以通过选择<code>File -&gt; Preferences -&gt; User Snippets</code>路径进入指令栏，输入 Markdown 进入相应的配置文件。当然也可以通过在命令栏输入<code>preferences: snippets</code>进入。<br>简单的配置文件如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">"newblog": &#123;</span><br><span class="line">"prefix": "nb",</span><br><span class="line">"body": [</span><br><span class="line">"---",</span><br><span class="line">"title: $1 ",</span><br><span class="line">"updated: 2020- $2 13:53:09",</span><br><span class="line">update_ct: 0</span><br><span class="line">"date: 2020- $2 13:53:09",</span><br><span class="line">"layout: page",</span><br><span class="line">"toc: true",</span><br><span class="line">"mathjax: true",</span><br><span class="line">"tags: [ $3 ]",</span><br><span class="line">"categories: [ $&#123;4|随笔, 技巧, 学科|&#125; ]",</span><br><span class="line">"---",</span><br><span class="line"><span class="string">"&lt;!--more--&gt; $0 "</span></span><br><span class="line">],</span><br><span class="line">"description": "create a new blog"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里的<code>prefix</code>便是触发 Snippets 的前置。Body 是主体，其中<code>$0</code>表示光标出现的位置。</p><p><strong>特殊之处</strong></p><ul><li>多光标可以通过<code>$1</code>，<code>$2</code>等表示，其表示先后到达的顺序，可以通过 Tab 键到达下一个光标位置完成修改。</li><li>同时也可以设置<code>${1|A, B|}</code>，获得到达具体位置之后的选项。</li><li>此外可以绑定变量、设置多光标等等，这里暂时用不到故忽略。</li></ul><p>除此之外，我偶然发现了一个可以添加当前时间地点的参数设定的方法，将上面的设定改写为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">"newblog": &#123;</span><br><span class="line">"prefix": "nb",</span><br><span class="line">"body": [</span><br><span class="line">"---",</span><br><span class="line">"title: $TM_FILENAME_BASE ",</span><br><span class="line">"updated: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",</span><br><span class="line">update_ct: 0</span><br><span class="line">"date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",</span><br><span class="line">"toc: true",</span><br><span class="line">"mathjax: true",</span><br><span class="line">"tags: [ $1 ]",</span><br><span class="line">"categories: [ $&#123;2|随笔,技巧,学科,学术|&#125; ]",</span><br><span class="line">"---",</span><br><span class="line"><span class="string">"&lt;!--more--&gt; $0 "</span></span><br><span class="line">],</span><br><span class="line">"description": "create a new blog"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这个修改的版本可以自动读出当前该文件的名字（去除尾缀）作为 Blog 的标题，读出当前的时间。基本上可以完全懒人操作了。更多的设定参考链接 <a href="https://www.clloz.com/programming/assorted/2020/09/14/vscode-snippet/" target="_blank" rel="noopener">如何使用Snippets</a></p><p>以本文为例，获得的结果为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">VSCode模板</span> </span><br><span class="line"><span class="attr">updated:</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-03</span> <span class="number">20</span><span class="string">:13:50</span></span><br><span class="line"><span class="attr">update_ct:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-03</span> <span class="number">20</span><span class="string">:13:50</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[</span> <span class="string">]</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">[]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Smart-Suggestion"><a href="#Smart-Suggestion" class="headerlink" title="Smart Suggestion"></a>Smart Suggestion</h3><p>不知为何，Markdown 默认是不支持自动调起 VSCode Suggestion 的。解决方法有 2：</p><ol><li>在 Shortcuts 中找到 <code>Trigger Suggestion</code>，通过快捷键手动调起。</li><li>手动地将该设定添加到<code>settings.json</code>中：</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">"[markdown]": &#123;</span><br><span class="line">    "editor.quickSuggestions": &#123;</span><br><span class="line">      "other": true,</span><br><span class="line">      "comments": false,</span><br><span class="line">      "strings": false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这样就没有遗憾了。该方法参见链接 <a href="https://deepns.github.io/tech/enable-quick-suggestions-for-markdown-in-vscode/" target="_blank" rel="noopener">Enable quick suggestions for Markdown in VS Code</a> 。</p><p>更多详情参见：<a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets" target="_blank" rel="noopener">Vscode官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本工具 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go常用语法</title>
      <link href="/2020/tech/Go%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/tech/Go%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>开始正式学习 Go，参考该网站 <a href="https://tour.golang.org/welcome/5" target="_blank" rel="noopener">link</a>。</p><a id="more"></a>  <h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="Import"><a href="#Import" class="headerlink" title="Import"></a>Import</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似 C 语言，Go 程序通过调起各种包(Packages)运行，在 Import 中是调起的其他包的路径。除此之外，Go 默认也是从 main 开始运行，所以 main 函数仍然是不可缺少的。</p><p>为引入这些包，需要这样写</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"main"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="Export"><a href="#Export" class="headerlink" title="Export"></a>Export</h3><p>在 Go 中，大写字母开头的值是视为 Exported 的，可以为外界调用，反之则不是。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(math.Pi)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如在下述的程序中，<code>math.pi</code>就是不可调用的，并得到这样的报错：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./prog.go:<span class="number">9</span>:<span class="number">14</span>: cannot <span class="built_in">ref</span>er to unexported name math.pi</span><br><span class="line">./prog.go:<span class="number">9</span>:<span class="number">14</span>: undefined: math.pi</span><br></pre></td></tr></table></figure><h3 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h3><p>函数定义基本和 C 语法相同，但仍存在一些差异：例如他的形参数据类型放置在形参名字后面，例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，当连续多个形参使用相同的数据类型时，可以省略除了该序列中最后一个外的所有数据类型声明，例如上面的例子可以重写为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义多返回值的函数也是可以的，形式如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(x, y <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> y, x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，可以在函数头上声明返回的值的 name，从而在 return 语句时不加强调。然而这种方法并未得到提倡，因为在很长的函数中，似乎可读性并不强。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">split</span><span class="params">(sum <span class="keyword">int</span>)</span> <span class="params">(x, y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">x = sum * <span class="number">4</span> / <span class="number">9</span></span><br><span class="line">y = sum - x</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述函数应当返回（7,10），即（x,y）对应的值。</p><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>使用 var 语句声明变量。声明的方法如同函数形参，例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c, python, java <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">fmt.Println(i, c, python, java)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且参数是可以定义在 package level 的，即上例中的 c, python…除了简单的声明变量，还可以初始化，变量的数据类型和初始化的数据相关。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i, j <span class="keyword">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> c, python, java = <span class="literal">true</span>, <span class="literal">false</span>, <span class="string">"no!"</span></span><br><span class="line">c, python, java := <span class="literal">true</span>, <span class="literal">false</span>, <span class="string">"no!"</span></span><br></pre></td></tr></table></figure><p>如果未显式地声明，而仅仅是使用 var 定义，则同时定义不同的数据类型是可以接受的。此外可以使用<code>:=</code>代替这种情况。</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span></span><br><span class="line"><span class="keyword">string</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">int8</span> <span class="keyword">int16</span> <span class="keyword">int32</span> <span class="keyword">int64</span></span><br><span class="line"><span class="keyword">uint</span> ...</span><br><span class="line"><span class="keyword">byte</span></span><br><span class="line"><span class="keyword">rune</span> (<span class="keyword">int32</span>)</span><br><span class="line"><span class="keyword">float32</span> <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">complex64</span> <span class="keyword">complex128</span></span><br></pre></td></tr></table></figure><p>这些数据类型没有初始化时，会被赋给 0 值，如<code>int</code>对应 0,<code>srting</code>对应空字符串。</p><p><strong>类型转换</strong></p><p>类型转换使用<code>a = T(b)</code>完成，如下例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">42</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float64</span> = <span class="keyword">float64</span>(i)</span><br><span class="line"><span class="keyword">var</span> u <span class="keyword">uint</span> = <span class="keyword">uint</span>(f)</span><br></pre></td></tr></table></figure><p>在 Go 中，类型转换是<strong>必须</strong>显式声明的。</p><p><strong>常量</strong></p><p>常量的声明和普通变量相同，但是需要在开头加上一个 const。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Pi = <span class="number">3.14</span></span><br></pre></td></tr></table></figure><p>需要注意的是，常量不可以使用<code>:=</code>定义。</p><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>指针的形式和 C 相似，都是通过<code>*T</code>表示。定义如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> *p <span class="keyword">int</span></span><br><span class="line">i := <span class="number">1</span></span><br><span class="line">p = &amp;i</span><br><span class="line">fmt.Println(*p)</span><br></pre></td></tr></table></figure><p>取地址方法及取值方法也和 C 相同。</p><h3 id="Struct-语句"><a href="#Struct-语句" class="headerlink" title="Struct 语句"></a>Struct 语句</h3><p>声明一个新类型方法如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">X <span class="keyword">int</span></span><br><span class="line">Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line">v := Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">x := v.X</span><br></pre></td></tr></table></figure><p>struct 中的值可以用<code>.</code>获得。也可以通过指针的方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v := Vertex(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">p := &amp;v</span><br><span class="line">p.X = <span class="number">1e9</span></span><br></pre></td></tr></table></figure><p>理论上需要通过<code>(*p).X</code>访问 X 值，然而 Go 允许，仅仅使用<code>p.X</code>直接对其进行访问。</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a [<span class="number">2</span>]<span class="keyword">string</span></span><br><span class="line">a[<span class="number">0</span>] = <span class="string">"hello"</span></span><br><span class="line">a[<span class="number">1</span>] = <span class="string">"world"</span></span><br><span class="line"></span><br><span class="line">primes := [<span class="number">6</span>]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>&#125;</span><br></pre></td></tr></table></figure><p>Go 通过这种方式来定义数组。他的访问和赋值都和 C 相同。Array 的长度是固定的，不可以在运行过程中修改的。在上述例子中存在一个类似 C 的初始化方法，在这个初始化中，尽管声明了 6 个整形的空间，但仅仅给了 5 个初始值，则最后的一个元素会被初始化为 0。</p><p><strong>Slide</strong></p><p>与之相关的是一个特殊的数据结构 Slide：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">primes := [<span class="number">6</span>]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span> = primes[<span class="number">1</span>:<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>这个的表现和 C 语言是完全一样的，然而和预期不同的是，这个 Slide 并不储存数据，而是仅仅类似于地址和指针一样的东西。对于 Slide 的更改会导致对于其截取的原数组的更改，并且其他包含相同元素的 Slide 也会立刻应用这些更改（因为他们只是取地址）。</p><p>对于 Slide 的元素截取和 Python 一样，可以使用<code>:</code>符号表示截取范围。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line">a[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">a[:<span class="number">10</span>]</span><br><span class="line">a[<span class="number">0</span>:]</span><br><span class="line">a[:]</span><br></pre></td></tr></table></figure><p>以上四种表达是等价的。Slide 存在 length 和 capacity 两个变量。前者为 Slide 包含的元素数量，后者为 Slide 所指向的 Array，从 Slide 包含的第一个元素开始计算的元素数。这两个值分别可以通过函数<code>len()</code>及<code>cap()</code>获取。</p><p>特殊的是，我们可以 extend Slide 的范围。对于以下的语句：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line">s = s[:<span class="number">0</span>]</span><br><span class="line">s = s[:<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>其并不是在 Slide s 中重新获得新的 Slide，而是在完成一次 Re-sldie。即<code>s = s[:4]</code>语句是针对最开始的长度为 6 的数组进行的。这仅仅发生在，数组的长度右端超过了 Slide 的长度并小于 Slide 的容量时才会发生，称为 Extend。</p><p><strong>Nil Slide</strong></p><p>空数组：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">fmt.Println(s, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line"><span class="keyword">if</span> s == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"nil!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Append</strong></p><p>类似 Python 的 list，Go 提供了一个可变长的数组。这个数组在元素超出容量时会自动再分配一个空间，然后返回的地址指向一个新的数组。其使用如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// append works on nil slices.</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">0</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// The slice grows as needed.</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// We can add more than one element at a time.</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Range</strong></p><p>类似 Python 的，他的 For 循环也可使用 Range 操作。Range 在每一个迭代返回一个计数器和一个对象对应的值。例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pow = []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> pow &#123;</span><br><span class="line">fmt.Printf(<span class="string">"2**%d = %d\n"</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不希望获得对应的值，则可以使用<code>_</code>代替位置。如果只希望使用 index，则只显式地记下一个值即可。如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> pow &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p>Map 的 0 值为<code>nil</code>，一个 nil 的 Map 既没有 key 也不能增加新的 key。Map 可以使用 make 函数初始化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Vertex)</span><br></pre></td></tr></table></figure><p>其中，string 是键值，Vertex 是 Map 指向的对象。Map 的访问是通过键值访问的，这个设定与 C 及 Python 都一致。下面是一个更完整的示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">Lat, Long <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Vertex)</span><br><span class="line">m[<span class="string">"Bell Labs"</span>] = Vertex&#123;</span><br><span class="line"><span class="number">40.68433</span>, <span class="number">-74.39967</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m[<span class="string">"Bell Labs"</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，Map 还可以如此初始化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex&#123;</span><br><span class="line"><span class="string">"Bell Labs"</span>: Vertex&#123;</span><br><span class="line"><span class="number">40.68433</span>, <span class="number">-74.39967</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"Google"</span>: Vertex&#123;</span><br><span class="line"><span class="number">37.42202</span>, <span class="number">-122.08408</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者干脆省略 Vertex 声明，改为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex&#123;</span><br><span class="line"><span class="string">"Bell Labs"</span>: &#123;<span class="number">40.68433</span>, <span class="number">-74.39967</span>&#125;,</span><br><span class="line"><span class="string">"Google"</span>: &#123;<span class="number">37.42202</span>, <span class="number">-122.08408</span>&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>对 Map 的其他操作</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delete</span>(m, key) <span class="comment">// 从字典m中删去Key及其对应的值。</span></span><br><span class="line">elem, ok := m[key] </span><br><span class="line"><span class="comment">// 如果ok == true，则字典m中存在键值key；</span></span><br><span class="line"><span class="comment">// 反之则不存在，并返回0值elem</span></span><br></pre></td></tr></table></figure><h3 id="Closure"><a href="#Closure" class="headerlink" title="Closure"></a>Closure</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">adder</span><span class="params">()</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum += x</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">pos, neg := adder(), adder()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pos(i),</span><br><span class="line">neg(<span class="number">-2</span>*i),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子里，函数 adder()相当于一个“函数模型”，调用这个模型获得的是一个函数的实体即 pos, neg。而这个 sum 是这个函数模型实体的参数，所以会逐渐累加，其效果如同 C 中的 static 变量。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="For-语句"><a href="#For-语句" class="headerlink" title="For 语句"></a>For 语句</h3><p>Go 仅含有这样一种循环语句。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ; sum &lt; <span class="number">1000</span>; &#123;</span><br><span class="line">sum += sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sum &lt; <span class="number">1000</span> &#123;</span><br><span class="line">sum += sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个和 C 的语法非常像。同样的，如果不需要这三要素中的某一部分，可以完全空出来，如同 C 的操作。如上第二个或第三个 For 循环。而在 Go 中，并没有专门的 While 语句，有上述第三种 For 循环代替。</p><p>更直接的，如果希望写出一个死循环，则可以如此写：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="If-语句"><a href="#If-语句" class="headerlink" title="If 语句"></a>If 语句</h3><p>和 For 语句一样，成分不需要使用括号包含。但是大括号是需要的，如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> sqrt(-x) + <span class="string">"i"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似 For 语句，If 语句可以在条件前增加一个初始化语句。该初始化语句的内容，在后面大括号范围内有效。例如下面的写法是有效的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> v := math.Pow(x, n); v &lt; lim &#123;</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%g"</span>, v) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Switch-语句"><a href="#Switch-语句" class="headerlink" title="Switch 语句"></a>Switch 语句</h3><p>Switch 语句和 C 语言相似，然而，Go 的 Switch 语句不会运行后面所有的部分，而仅仅运行满足条件的语句。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> os := runtime.GOOS; os &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"darwin"</span>:</span><br><span class="line">fmt.Println(<span class="string">"OS X."</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">"linux"</span>:</span><br><span class="line">fmt.Println(<span class="string">"Linux."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">// freebsd, openbsd,</span></span><br><span class="line"><span class="comment">// plan9, windows...</span></span><br><span class="line">fmt.Printf(<span class="string">"%s.\n"</span>, os)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上的程序仅会运行其中的一项，而非所有。同时这个初始化语句和 If 语句相同，是可以省略的。与 C 不同的是，这里的 Case 语句不需要是 Const，同时也不需要是整型。同时，Switch 是从上往下执行的，他会在任何一个满足条件的 Case 中停下并不再考察后面的 Case。</p><p>特殊的，我们可以声明一个不带有条件的 Switch 语句。此时，这个 Switch 语句的含义是传递一个 True 值。然而我们在 Case 的声明时，仅需要返回 true 或者 false 即可。换句话说，我们可以将其作为一个 if-then-else 的链使用。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">t := time.Now()</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> t.Hour() &lt; <span class="number">12</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good morning!"</span>)</span><br><span class="line"><span class="keyword">case</span> t.Hour() &lt; <span class="number">17</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good afternoon."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good evening."</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Defer-语句"><a href="#Defer-语句" class="headerlink" title="Defer 语句"></a>Defer 语句</h3><p>Defer 语句会暂停现在的所有执行，直到它环境里的其他语句执行结束后才会执行（即一个栈）。并且按照后定义的 Defer 先执行的顺序执行。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"world"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"!!"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"hello"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如上式的输出为<code>hello \n !! \n world</code>。</p><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><p>Go 没有类，但是可以在类上定义方法。这类方法的定义和其他函数有些许不同，需要在<code>func</code>关键词到方法名间增加一个 receiver。形式如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Vertex)</span> <span class="title">Abs</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Sqrt(v.X*v.X + v.Y*v.Y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := Vertex&#123;<span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">fmt.Println(v.Abs())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法也能为仅仅数据类型构造 Methods，然而它不能为其他 package 里的数据类型如此操作，或者对内建数据类型数次操作。如需要针对内建数据类型，则需要重定义：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> MyFloat <span class="keyword">float64</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f MyFloat)</span> <span class="title">Abs</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> f &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(-f)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(f)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := MyFloat(-math.Sqrt2)</span><br><span class="line">fmt.Println(f.Abs())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而，使用这样的 Receiver，不能对其含有的值进行操作。在我们需要操作其内容的时候，我们需要使用指针的 Receiver，如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Vertex)</span> <span class="title">Abs</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Sqrt(v.X*v.X + v.Y*v.Y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *Vertex)</span> <span class="title">Scale</span><span class="params">(f <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">v.X = v.X * f</span><br><span class="line">v.Y = v.Y * f</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := Vertex&#123;<span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">v.Scale(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>对于 Methods 来说，使用实体或者指向实体的指针操作实体中的参数都是可以的。</p><h2 id="Interface"><a href="#Interface" class="headerlink" title="Interface"></a>Interface</h2><p>Interface 一种特殊的数据类型，它是一系列 Methods 签名的集合。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Abser <span class="keyword">interface</span> &#123;</span><br><span class="line">Abs() <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a Abser</span><br><span class="line">f := MyFloat(-math.Sqrt2)</span><br><span class="line">v := Vertex&#123;<span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">a = f  <span class="comment">// a MyFloat implements Abser</span></span><br><span class="line">a = &amp;v <span class="comment">// a *Vertex implements Abser</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// In the following line, v is a Vertex (not *Vertex)</span></span><br><span class="line"><span class="comment">// and does NOT implement Abser.</span></span><br><span class="line"><span class="comment">// a = v</span></span><br><span class="line"></span><br><span class="line">fmt.Println(a.Abs())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们说一个 Type 实现了一个 Interface，如果它存在 Interface 中声明的函数的实现。这个实现不需要显式地声明，他们的名称相同即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> I <span class="keyword">interface</span> &#123;</span><br><span class="line">M()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">struct</span> &#123;</span><br><span class="line">S <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This method means type T implements the interface I,</span></span><br><span class="line"><span class="comment">// but we don't need to explicitly declare that it does so.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t T)</span> <span class="title">M</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(t.S)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i I = T&#123;<span class="string">"hello"</span>&#125;</span><br><span class="line">i.M()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述例子中，存在 Interface I，Type T。其中 T 实现了 Methods M，则可以说是 Type T 实现了 Interface I。这样的 Interface 让实现和使用解耦，我们只需要关心 Interface 或者其实现，而不需要两者兼顾。</p><p>从更根本的眼光来看，Interface 是一个元组：<code>(value, type)</code>。它保存一个类型及其对应的值。对 Interface 调用一个 Method，相当于调用其代表的 type 对应的 Method。</p><p><strong>关于 nil 值</strong></p><p>存在这样的情况：Interface 对应的值不存在。但是这种情况的 Interface 并不为空，其保存了对应的类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *T)</span> <span class="title">M</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> t == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"&lt;nil&gt;"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t.S)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i I</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> t *T</span><br><span class="line">i = t</span><br><span class="line">i.M()</span><br><span class="line"></span><br><span class="line">i = &amp;T&#123;<span class="string">"hello"</span>&#125;</span><br><span class="line">i.M()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的例子中，t 并没有被初始化，所以对应的值是 nil 的（因为它甚至只是一个指针。）。而若去掉代码<code>i = t</code>，则 Interface i 就是一个空 Interface，此时调用<code>M()</code>就会报错。</p><p><strong>关于空 Interface</strong></p><p>对于没有声明 Methods 的 Interface 被称为“Empty Interface”。这样的 Interface 可以指向任何一个数据类型。这样的情况被用在处理不确定数据类型的时候。</p><p><strong>关于 Interface 的 Type</strong></p><p>我们有的时候需要知道 Interface 指向的 Type 是什么，此时我们这样调用：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t := i.(T)</span><br></pre></td></tr></table></figure><p>如果 Type T 和 Interface i 的值完全相同，则会返回 i 对应的实体。如果类型不同则会报错。为了得知类型的同时不 raise error，我们采用下面的方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t, ok := i.(T)</span><br></pre></td></tr></table></figure><p>如果 ok 为真，则意味着两种数据类型相同，并返回值 t；若为 false，则数据类型不同，且会返回 T 的 0 值。在这个设定下，我们可以这样写：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">do</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> v := i.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line">fmt.Printf(<span class="string">"Twice %v is %v\n"</span>, v, v*<span class="number">2</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">fmt.Printf(<span class="string">"%q is %v bytes long\n"</span>, v, <span class="built_in">len</span>(v))</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">"I don't know about type %T!\n"</span>, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个语句比较 v 的类型。</p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><p>Error 是一类内建的 Interface。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> error <span class="keyword">interface</span> &#123;</span><br><span class="line">    Error() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="params">(<span class="keyword">float64</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有的函数都会返回一个 error 值，若 error 值等于 nil，则表示成功运行。他可以像上述代码的后半部分那样使用。</p><h2 id="Concurrency"><a href="#Concurrency" class="headerlink" title="Concurrency"></a>Concurrency</h2><h3 id="Goroutines"><a href="#Goroutines" class="headerlink" title="Goroutines"></a>Goroutines</h3><p>一个 Goroutines 是 Go 驱动的一个线程。以下语句会调起一个新线程。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> f(x, y, z)</span><br></pre></td></tr></table></figure><p>f, x, y, z 的检验都是发现在当前的 goroutine 的，而调起的新函数则会运行在一个新的 goroutine 中。不同的 goroutine 运行在一个相同的地址空间中，所以他们的值是共享的。</p><h3 id="Channels"><a href="#Channels" class="headerlink" title="Channels"></a>Channels</h3><p>Channels 是一种类型相关的导管。我们可以通过这个东西接受或者发送值，通过运算符：<code>&lt;-</code>。类似下面的写法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ch &lt;- v    <span class="comment">// Send v to channel ch.</span></span><br><span class="line">v := &lt;-ch  <span class="comment">// Receive from ch, and</span></span><br><span class="line">           <span class="comment">// assign value to v.</span></span><br></pre></td></tr></table></figure><p>Channels 的定义方法和 Map 及 Slide 类似，需要借助 make 函数，定义方法如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br></pre></td></tr></table></figure><p>默认的情况下，这两个操作都会阻塞当前的 Channels。这样可以完成同步，并不需要显式地锁住线程。下面是一个示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(s []<span class="keyword">int</span>, c <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">sum += v</span><br><span class="line">&#125;</span><br><span class="line">c &lt;- sum <span class="comment">// send sum to c</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">7</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">-9</span>, <span class="number">4</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"><span class="keyword">go</span> sum(s[:<span class="built_in">len</span>(s)/<span class="number">2</span>], c)</span><br><span class="line"><span class="keyword">go</span> sum(s[<span class="built_in">len</span>(s)/<span class="number">2</span>:], c)</span><br><span class="line">x, y := &lt;-c, &lt;-c <span class="comment">// receive from c</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x, y, x+y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Buffered Channels</strong></p><p>Channels 可以存在 Buffer。通过下面的定义方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>以上定义了 100 个 Buffer。Send 命令会 Block 仅有可能为 Buffer 已满；Receive 命令会 Block 仅有可能为 Buffer 为空。这两种情况会导致死锁错误。</p><p><strong>close</strong></p><p>Send 的过程中，可以主动关闭 Channel，即不再发送数据；Receive 可以检验某个 Channel 是否被关闭。如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibonacci</span><span class="params">(n <span class="keyword">int</span>, c <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">x, y := <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">c &lt;- x</span><br><span class="line">x, y = y, x+y</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">go</span> fibonacci(<span class="built_in">cap</span>(c), c)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> c &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">v, ok := &lt;-c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事实上，Close 在这里不是必要的，除非 Receiver 需要明确地知道数据发送已经结束并终结进程。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>失衡的贝多芬</title>
      <link href="/2020/essay/%E9%9F%B3%E4%B9%90/%E5%A4%B1%E8%A1%A1%E7%9A%84%E8%B4%9D%E5%A4%9A%E8%8A%AC/"/>
      <url>/2020/essay/%E9%9F%B3%E4%B9%90/%E5%A4%B1%E8%A1%A1%E7%9A%84%E8%B4%9D%E5%A4%9A%E8%8A%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>回到上海再一次第一次进入东方艺术中心，已是近一年之后。曲目是贝多芬《第二交响曲》及《第五交响曲》。指挥家非常年轻，作为小泽征尔的弟子，表现值得期待。乐团也是未曾感受过的乐团。</p><blockquote><p>地点：上海东方艺术中心<br>指挥：俞璐<br>乐团：宁波交响乐团<br>座位：乐池正前方偏音乐厅后部<br>开始前的食物：KFC虾堡套餐</p></blockquote><a id="more"></a>  <h2 id="曲目及演绎"><a href="#曲目及演绎" class="headerlink" title="曲目及演绎"></a>曲目及演绎</h2><h3 id="《第二交响曲》"><a href="#《第二交响曲》" class="headerlink" title="《第二交响曲》"></a>《第二交响曲》</h3>    <div id="aplayer-qWCGBPEm" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="550607355" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><strong>简评</strong></p><p>No.2 并不是经常见到的一个表演曲目，一方面它自身不是非常具有特色，另一方面也是它代表着贝多芬第一时期的末端，仍然带着莫扎特的影子。</p><p>作为 D 大调的作品，整部作品四个乐章，无一不呈现出明朗积极的特征。这可能也是本次音乐会被命名为《命运与希望》（命运自然是指 No.5）的重要原因。但是这部作品呈现出了单调的、一味的积极情绪，使人并不觉得特别审美，而是有一种淡淡的困意（也和本人对这部作品并没有非常了解有关）。</p><p>整个作品的展开完全在意料之中，抒情的部分也显得不够吸引人，唯一能给人留下深刻印象的是第四乐章的第一主题，明亮且有趣，但也仅此而已了。正如前文所言，整部作品透露出浓厚的莫扎特风味，也是贝多芬第一时期的象征。</p><p>需要注意的一点是，其中第一乐章的一个乐段，在 No.9 再一次忠实地再一次出现，这肯定是贝多芬有意之举。至于这两部作品是如何连接在一起的，待考。</p><p><strong>演绎</strong></p><p>这部作品的演绎也中规中矩，没有特别可以拿出来说道的地方。干净利落，毫不拖沓。</p><h3 id="《第五交响曲》"><a href="#《第五交响曲》" class="headerlink" title="《第五交响曲》"></a>《第五交响曲》</h3>    <div id="aplayer-ItHmEXnv" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="459860068" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>第五交响曲又名命运交响曲，由于过于出名，甚至于烂俗，以致在国内几乎见不到现场的演出，演出次数更是远远赶不上不那么出圈的 No.7 &amp; No.8。这是一个相当悖论的事情。</p><p><strong>简评</strong></p><p>回到作品本身。作品呈现出明显的斗争性，第一乐章那个著名的动机，似幽灵般围绕整部作品：随着作品的推进，这个著名的动机，逐渐从一种激烈的忧郁，变成激昂的四连音，象征着某种胜利的转变。</p><p>但是这个胜利是在第三乐章发生的，第一乐章是完全的失败。“命运”的强力，将故事的主人公击倒在地，并以主人公的完全失败作结。随后进入了多愁善感的第二乐章。尽管第二乐章伊始保留着某种抒情的特征，但在后半部分，再一次呈现出了强的斗争性，然而在现在占据上风的却是某种光辉的胜利。但我们并没有得到结论，在斗争中进入了第三乐章。</p><p>第三乐章前几个小节的静谧氛围逐渐被到来的斗争逼近;随着逼近的斗争声愈加明显，我们发现这是变奏的第一乐章中所谓“命运”的动机，然而此时它不再阴郁，而是光辉、明朗，具备帝王版的威严。这是最后一次斗争，在第三乐章结束时已然奠定了局面，最后我们迎来了伟大的第四乐章。</p><p>第四乐章高昂，绝对的积极，不留余地。第三乐章和第四乐章的紧密链接让这种明亮的印象更加令人深刻——命运毫无喘息机会！大概是这样的感受。这样的胜利比 No.2 的积极和 No.9 妥协式的胜利更加积极，是纯粹得令人感动的氛围。罕见的作品。</p><p><strong>演绎</strong></p><p>演绎仍然具有相当的水准。美中不足的是其中的短笛，总是比正常的音高高出一小截，而又由于短笛所在的高频段异常抓耳，第四乐章短笛的每次进入都严重分散了我的注意力。音过高的短笛呈现出一种飘忽不定的声线，致使发声也不清晰。</p><p>其次是小号的处理。在第二乐章小号声音过大——在同时奏响的时刻，小号几乎盖住了所有的弦乐组，迫使听众丢掉了大部分细节。所幸小号在声音大的同时没有破音，令人感动。</p><p>圆号发挥非常出色，音色动人圆润，实在惊艳。在整场演出中不抢眼，但是以自身的过硬实力将自己的部分发挥到了最好。以及巴松也可圈可点，尽管在高音区发挥略有失常（一方面是巴松本来不擅长高音的原因），其余部分富有弹性的声音具有相当的美感。</p><h3 id="安可"><a href="#安可" class="headerlink" title="安可"></a>安可</h3><p>本场演出没有安可。</p><h2 id="总评"><a href="#总评" class="headerlink" title="总评"></a>总评</h2><p>总而言之是值回票价的演出。俞璐指挥的演绎可圈可点。或许师承小泽征尔的缘故，其具有相当丰富的肢体语言。在指挥的同时，动作幅度剧烈，但是富有美感，有一定观赏性。No.5 的一部分处理让整体显得不太匀称，在某些时刻有被少部分乐器带偏的感觉，但基本上维持了高水准的演绎。</p><p>两部作品我个人还是更喜欢烂俗的 No.5，No.2 由于过于明亮让我有点吃不消……</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本次的安可并没有如同预期一般出现，而是出现了俞璐的一段致辞。俞璐简单地描述了一下自己对于贝多芬的仰慕之情，并且说了一下疫情下古典乐的现状。最后吐露了一个宏伟的计划：在五天之内演出贝多芬的九部交响曲。这应当是中国古典乐从未有过的盛况。</p><p>赖于宁波市政府的赞助及 Bilibili 的支持，这样的行动才能发起。俞璐特别感谢了 Bilibili 的赞助。对于古典乐爱好者，这肯定是一个非常令人激动的信号：这个小众的群体也开始进入群众的视野。</p><p>在每次音乐会结束后回寝室的路上，一票乐迷总会各抒己见。再一次感受到自己肖斯塔听得太少了……</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elementary OS双系统安装</title>
      <link href="/2020/tech/linux/Linux%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/tech/linux/Linux%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><center><img src="/images/screenshot/home.png" width="80%" height="80%" /></center><p>这两日心血来潮给副系统装上了 Elementary OS。这一路配置相当地顺利，除了最后的一步。这里记录一下配置的过程及一些细节问题。</p><a id="more"></a>  <h2 id="录制DD盘"><a href="#录制DD盘" class="headerlink" title="录制DD盘"></a>录制DD盘</h2><p>这次安装的是<a href="https://elementary.io" target="_blank" rel="noopener">Elementary OS 5.1</a>，基于 Ubuntu 18.04 的发行版。在原系统下，上官网拿到了 ISO 之后就可以利用<a href="https://rufus.ie" target="_blank" rel="noopener">rufus</a>将 ISO 烧制到 USB 中。这个也是安装双系统的常用软件了。将 ISO 读出后，选择 DD 模式烧制。烧制结束后准备工作结束。</p><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>安装系统过程非常流畅。插上烧制好的 USB，重启进入 USB 启动。可能这里会进入 Grub，而不是进入 USB。此时需要进入 Grub 中的 Configuration 将 USB 调整为最高优先级，然后重启。</p><p>重启后会进入 Elementary 的安装引导。这一路没有特别需要注意的。最后需要提及的是关于分区部分。Elementary 自动识别出了之前在我的电脑上存在的 Ubuntu 19.04，于是默认选项是在该分区上使用新的系统对其进行覆盖。如果是新的双系统的话会需要重新选择分区。</p><p>到目前为止都是非常顺畅。（请不要连接 WiFi，之后会有时间更新镜像后再 update。）</p><h2 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h2><p>作为 Surface Book，安装双系统（或者说 Linux）系统，不能够开箱即用，有三个问题需要解决：</p><ol><li>Linux 会在后台挂起一个不知何物的进程，这个进程会始终占用 90%左右的 CPU。</li><li>Linux 无法自动地在集成显卡和独立显卡间切换，导致耗电极快。</li><li>由于 Surface 的高分屏，Grub 界面字体非常小（尽管 Elementary 内部的分辨率是完全正常的，包括登录界面。）</li></ol><p>为了方便，请现在这个时刻安装一个 vim 吧，后面会用上的。由于 vim 体积不大，完全可以先把换源的事情放在后面，基础设定要紧。</p><h3 id="更换Kernel"><a href="#更换Kernel" class="headerlink" title="更换Kernel"></a>更换Kernel</h3><p>为解决第一个问题，需要更换 GitHub 上大神完成且预编的<a href="https://github.com/linux-surface/linux-surface" target="_blank" rel="noopener">Linux Kernel</a>。找到 Release，获取其中的三个内核文件并安装。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">dpkg</span> -i <span class="regexp">*.deb</span></span><br></pre></td></tr></table></figure><p>这样三个内核文件就安装好了。此时重启，在 Grub 界面中找到 Advanced Configuration 并选择 Surface Kernel 即可。</p><p>这个步骤真的是被坑了很久才摸清楚的处理办法。对于其他的 Linux 来说，这个方法也是完全可以使用的。这个 Kernel 理论上提供了对于触摸屏、物理按键，甚至热插拔的特性，但大神预编的版本并不包含触摸屏功能。（但谁会想在 Linux 下拥有触摸屏呢……）所以预编的版本完全没有问题。</p><p>自此那个恼人的后台在重启后就不会出现了。</p><h3 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h3><p>这是选择 Ubuntu based Linux 的主要原因。之前使用 Manjaro 的时候，会发现这个步骤非常困难，但在 Ubuntu 下完全可以接受了。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ubuntu-drivers <span class="built_in">auto</span>install</span><br></pre></td></tr></table></figure><p>默认的显卡驱动完全没有问题。上述命令运行结束后，显卡驱动就安装结束。为了完全切换为核显，需要先重启（否则软件内部是一片空白）。重启后，打开这个软件的 GUI 界面就正常了，切换一次设定，将之改为核显驱动，随后重启。双显卡问题就此解决。</p><p>这个也是血泪教训。尽管网路上的冲浪人士宣称 Manjaro 或者 Arch 拥有更加方便的驱动配置，但对于我来说不是这样的。</p><h3 id="Grub修改"><a href="#Grub修改" class="headerlink" title="Grub修改"></a>Grub修改</h3><p>Grub 修改完全可以和 Grub theme 的切换一起来完成了。先在<a href="https://www.gnome-look.org/browse/cat/109/order/latest/" target="_blank" rel="noopener">Gnome的主题站</a>上找到合适的 Grub 主题。我这次选择的是这个：<a href="https://www.gnome-look.org/p/1397139/" target="_blank" rel="noopener">Linux Mind</a>。说实话不好看，但是也懒得接着找了。</p><p>将下载好的主题包解压，把他移动到一个特定的位置。为了方便我们先创建一个新的文件夹：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">mkdir</span> /<span class="keyword">boot</span>/grub/themes</span><br></pre></td></tr></table></figure><p>然后把解压后的文件夹移入这个文件夹。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp 主题包名 <span class="regexp">/boot/g</span>rub<span class="regexp">/themes/</span></span><br></pre></td></tr></table></figure><p>然后修改配置文件：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/grub.d/<span class="number">00</span>_header</span><br></pre></td></tr></table></figure><p>在最开始的注视内容之后添加：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">GRUB_THEME</span>=<span class="string">"/boot/grub/themes/主题包名/theme.txt"</span></span><br><span class="line"><span class="attr">GRUB_GFXMODE</span>=<span class="string">"3000x2000x32"</span></span><br></pre></td></tr></table></figure><p><code>3000x2999</code>是 Surface 的分辨率。这样修改结束后，主题和分辨率就都调整好了。然后更新 Grub 配置文件：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo update-grub</span></span><br></pre></td></tr></table></figure><p>更新结束后重启。这一个步骤就完成了。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>但现在距离一个好用的系统还有不少的步骤……比如好用的浏览器，舒适的输入法等等。在这些开始之前需要先更换镜像。</p><h3 id="apt换源"><a href="#apt换源" class="headerlink" title="apt换源"></a>apt换源</h3><p>进入文件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/apt/sources.<span class="keyword">list</span></span><br></pre></td></tr></table></figure><p>如果担心的话可以先做一个备份。然后用下面的内容替代该文件所有内容：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#清华源</span><br><span class="line"># 默认注释了源码镜像以提高 apt <span class="keyword">update</span> 速度，如有需要可自行取消注释</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># <span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># <span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># <span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/ubuntu/ focal-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>保存退出就结束了。然后运行一下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br></pre></td></tr></table></figure><p>镜像工作至此结束。</p><h3 id="更换输入法"><a href="#更换输入法" class="headerlink" title="更换输入法"></a>更换输入法</h3><p>类似 VS Code 或者 Vivaldi 啥的都非常简单，故不赘述。这里说一下输入法的问题。原配的 IBus 在 Ubuntu 下是能用的，但不知为何在 Elementary 下不能正常使用了。正好，那我换成 Fcitx 好咯。</p><p><strong>注意</strong>：这里遇到了目前位置最为严重的 Bug。在执行这个操作以前，我可以进入”语言及区域“中的”键盘设定“处调整快捷键，但在该操作结束以后，该设定不再能被打开，并且在装回 iBus 后仍然处于不能使用状态。</p><p>Anyway，输入还是重要的，所以为了避免冲突，卸载 iBus，然后下载 Fcitx。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> fcitx fcitx-sunpinyin</span><br></pre></td></tr></table></figure><p>为了使用 Fcitx，这俩就够了。后面一个软件提供中文输入支持。</p><p>输入<code>im-config</code>设定 fcitx 为默认输入法，注销系统然后登入。</p><p>此时在 Application 处搜索 Fcitx Configuration（注意，这个需要搜索，它不会出现在目录中。），然后设定 Sunpinyin 的相关设定。此时即使选择了双拼，但输入的时候看起来仍然是全拼。这个 bug 重启之后就解决了。</p><p>然后是一些微调工作，比如将字体设定为 20 等等。</p><h3 id="Grub-customizer"><a href="#Grub-customizer" class="headerlink" title="Grub customizer"></a>Grub customizer</h3><p>尽管我们已经成功地调整了 Grub 的分辨率以及 Theme，但目前 Grub menu 非常地令人难受。为了仅保留我们需要的选项，grub customizer 作为一个 GUI 工具是一个方便的选择。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:danielrichter2007/grub-customizer</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install grub-customizer</span><br></pre></td></tr></table></figure><p>后面的事情就比较直接了。</p><h3 id="Fish-shell"><a href="#Fish-shell" class="headerlink" title="Fish shell"></a>Fish shell</h3><p>这个安装过很多次，应当轻车熟路了。</p><p>首先上<a href="http://fishshell.com" target="_blank" rel="noopener">官网</a>添加 ppa。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">add</span>-repository <span class="keyword">pp</span><span class="variable">a:fish</span>-<span class="keyword">shell</span>/release-<span class="number">3</span></span><br><span class="line">$ sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install fish</span><br></pre></td></tr></table></figure><p>安装结束后将 fish 设为默认：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s <span class="regexp">/usr/</span>bin<span class="regexp">/fish</span></span><br></pre></td></tr></table></figure><p>然后 Shell 默认会调起 fish，之后可以使用 bash 暂时回到默认的 shell。</p><p>最后修改 fish 的 greeting messege：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> -U <span class="comment">fish_greeting</span> <span class="comment">"Bonjour! Joseph..."</span></span><br></pre></td></tr></table></figure><p>Fish 的设置结束。更多设置，使用<code>fish_config</code>查看。</p><p><strong>修改 ls 颜色</strong></p><p>此外，由于 Terminal 默认的<code>ls</code>颜色比较难以接受，所以需要手动修改。而 fish 的方法和主流不太相同，这里做一下记录。</p><p>首先需要获得系统的配色方案，在此基础上修改：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> ~</span><br><span class="line">dircolors -p &gt; <span class="string">.dircolors</span></span><br></pre></td></tr></table></figure><p>这样配色方案就存放在文件<code>.dircolors</code>中，对这个文件进行修改即可。规则不一一列举，参见文后链接。为了让这个配色方案在 fish 中生效，需要修改 fish 的设定文件。该文件位置在：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.<span class="built_in">config</span>/fish/<span class="built_in">config</span>.fish</span><br></pre></td></tr></table></figure><p>在该文件中添加：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> (dircolors ~<span class="regexp">/.dircolors | head -n 1 | sed 's/</span>^LS_COLORS=<span class="regexp">/set -x LS_COLORS /</span>;<span class="regexp">s/;$//</span><span class="string">')</span></span><br></pre></td></tr></table></figure><p>添加结束后重启 terminal 就可以了。</p><h3 id="Autojump"><a href="#Autojump" class="headerlink" title="Autojump"></a>Autojump</h3><p>安装结束 Fish 之后，我们就可以开始配置 Autojump 了，虽然简单，但很有帮助。直接使用 apt 安装 Autojump 是不可以的。需要这样处理：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/wting/autojump.git</span><br><span class="line"><span class="keyword">cd</span> autojump</span><br><span class="line">./install.<span class="keyword">py</span></span><br></pre></td></tr></table></figure><p>然后打开文件：<code>~/.config/fish/config.fish</code>，在其中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">    <span class="built_in">set</span> --<span class="built_in">local</span> AUTOJUMP_PATH <span class="variable">$HOME</span>/.autojump/share/autojump/autojump.fish</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">test</span> -e <span class="variable">$AUTOJUMP_PATH</span></span><br><span class="line">        <span class="built_in">source</span> <span class="variable">$AUTOJUMP_PATH</span></span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>然后关闭 Shell 再打开，设定就结束了。</p><h3 id="按键重映射"><a href="#按键重映射" class="headerlink" title="按键重映射"></a>按键重映射</h3><p>按键重映射主要是为了让 Win 键代替右 Alt 键，让他发挥一点点小作用。这里需要用到工具 xmodmap。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">xmodmap</span> -e <span class="string">"remove mod1 = Alt_R"</span></span><br><span class="line">xmodmap -e <span class="string">"add mod4 = Alt_R"</span></span><br></pre></td></tr></table></figure><p>其中<code>mod1</code>代指 Alt 键，<code>mod4</code>代指 Super 键。具体的名称可以在后面链接中找到。但是这两个命令是临时的，在系统重启后就会消失。为了避免这个问题，我们需要设定开机自启。开机自启的方法很多，但是众多尝试都失败了。</p><p>这里记录的方法依赖 Gnome 的设定。在 Application 中添加一个用来替换按键的脚本，然后就可以开机后运行了。</p><h2 id="WeChat-amp-QQ"><a href="#WeChat-amp-QQ" class="headerlink" title="WeChat &amp; QQ"></a>WeChat &amp; QQ</h2><p>有的时候这俩软件还是相当必要的。这两个软件都需要 Wine 进行驱动。为了安装这两个软件，我们需要相当繁琐的设定。</p><h3 id="安装Wine"><a href="#安装Wine" class="headerlink" title="安装Wine"></a>安装Wine</h3><p>先添加仓库：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O- http<span class="variable">s:</span>//deepin-wine.i-<span class="keyword">m</span>.dev/setup.<span class="keyword">sh</span> | <span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>然后安装对应的软件，表格如下：</p><div class="table-container"><table><thead><tr><th>应用</th><th>包名</th></tr></thead><tbody><tr><td>TIM</td><td>deepin.com.qq.office</td></tr><tr><td>QQ</td><td>deepin.com.qq.im</td></tr><tr><td>WeChat</td><td>deepin.com.wechat</td></tr></tbody></table></div><p>使用以下语句安装：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">apt-get</span> <span class="selector-tag">install</span> <span class="selector-tag">deepin</span><span class="selector-class">.com</span><span class="selector-class">.wechat</span></span><br></pre></td></tr></table></figure><p>至此，两个软件都可以正常地运行，但存在三个问题：</p><ol><li>字体由于分辨率奇小无比。</li><li>中文无法正常显示（因为我习惯用英文系统）。</li><li>输入框字体不能正常显示（事实证明，这个原因和 2 中原因不一样。）</li></ol><h3 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h3><p>为了修正分辨率，我们需要 Wine 主体，但我们还没有安装。</p><p>在安装好了 Wine 之后，我们就开始解决乱码问题。打开<code>/opt/deepinwine/tools/run.sh</code>和<code>/opt/deepinwine/tools/run_v2.sh</code>两个文件;将其中的<code>WINE_CMD=&quot;deepin-wine&quot;</code>改为<code>WINE_CMD=&quot;LC_ALL=zh_CN.UTF-8 deepin-wine&quot;</code>。这样就解决了中文乱码。</p><p>事实上，将系统改为中文也能够解决这个问题，但，嗯……还是英文更好看一些。（以及一些翻译不合理以及不完全的位置让人觉得有点难受。）</p><h3 id="输入框问题"><a href="#输入框问题" class="headerlink" title="输入框问题"></a>输入框问题</h3><p>即使解决了上述问题，微信的输入框仍然处于乱码的状态，这是由于缺少字体。为了解决这个问题，我们将 Windows 中的字体移植到 wine 容器中的 Fonts 文件夹中，这样这个问题就解决了。</p><h3 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h3><p>以微信为例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">env</span> WINEPREFIX=<span class="string">"<span class="variable">$HOME</span>/.deepinwine/Deepin-WeChat"</span> winecfg</span><br></pre></td></tr></table></figure><p>会打开一个 GUI 界面用以调整屏幕分辨率。该分辨率需要针对不同的软件分别设置。该数值调整为 192 较为合适。</p><p><strong>注意</strong>：这个步骤应当先打开一次软件，待 Wine 容器初始化之后再进行，而不是在安装了软件之后立刻进行，否则不会有任何变化。</p><p>至此微信和 QQ 的安装工作结束。但是目前没有完成系统托盘的修改。目前两个软件的小托盘图标会独立显示出来，这个问题放在以后调整吧。</p><h2 id="Snapshot"><a href="#Snapshot" class="headerlink" title="Snapshot"></a>Snapshot</h2><p>Elementary 是优雅的，令人爱不释手的。在体验了一天的情况下，并没有出现令人难以理解、严重的 bug。其自带的日历、邮箱软件都充满了优雅的味道。整体的动画流畅舒适，快捷键分布自然高效。毫无疑问，这是一个满足了我目前基本需求的系统，我也愿意在短期内尝试将其作为主力使用去感受一下它的魅力。</p><center><img src="/images/screenshot/apps.png" width="100%" height="100%" /></center><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/w84963568/article/details/78884003" target="_blank" rel="noopener">更换Grub主题</a></li><li><a href="https://www.cnblogs.com/Briddle-ch/p/13369274.html" target="_blank" rel="noopener">在Ubuntu 18.04中安装Wine QQ、微信、TIM</a></li><li><a href="https://blog.csdn.net/yhuiqq788/article/details/104211021" target="_blank" rel="noopener">Wine不能正常显示中文</a></li><li><a href="https://stackoverflow.com/questions/13995857/suppress-or-customize-intro-message-in-fish-shell" target="_blank" rel="noopener">fish修改Greeting</a></li><li><a href="https://www.jianshu.com/p/c405db78091c" target="_blank" rel="noopener">Wine分辨率调整</a></li><li><a href="https://codeyarns.github.io/tech/2014-02-27-how-to-install-autojump-for-fish.html" target="_blank" rel="noopener">Autojump安装配置</a></li><li><a href="https://www.cnblogs.com/yinheyi/p/10146900.html" target="_blank" rel="noopener">xmodmap按键重映射</a></li><li><a href="https://blog.csdn.net/u013045749/article/details/53576868" target="_blank" rel="noopener">Ubuntu ls更改配色方案</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论告别之声</title>
      <link href="/2020/essay/%E9%9F%B3%E4%B9%90/%E5%91%8A%E5%88%AB/"/>
      <url>/2020/essay/%E9%9F%B3%E4%B9%90/%E5%91%8A%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-ETdeENWg" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1418922883" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>　　这里原来是大三下半学期（即网课期间）完成的通识课《音乐美学与实践》的期末论文。但是又想到可能以后会对部分音乐做一个评价/体会，所以考虑把这一篇抬过来做一个开头（因为里面确实包含了我对部分作品的真实感受及评价）。个人虽然是一个古典音乐的爱好者，但和门外汉并没有多少的区别，评价方法也是完全主观的（甚至不严谨的）。至于本篇中频繁提到的《马九》有幸听过现场，奈何时间久远，现在希望再回忆起细节实在是不太现实的事情。但这也是音乐的特征之一吧。总之，请将该文当作一篇完全不专业的随笔观看。（本篇中提到的作品不会附上链接，有兴趣者请自行搜索。）</p><a id="more"></a>  <p>【摘要】略</p><h3 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h3><p>　　在文学研究中，形式与内容尽管纠缠不清，但仍能一定程度地区分开二者特点，文学中作家意义的表达更依赖于内容；而在音乐中，“乐音的内容就是乐音的运动形式” ，其形式和内涵具有先天的一致性，于是将一切的内涵都赋给其形式的音乐艺术实践成为可能，例如巴赫所作的《赋格的艺术》。但与之相对的，以舒伯特的《鳟鱼》为代表，也存在大量具有明确主题的音乐实践。<br>　　如同中国诗歌常常以“告别”作为主题，音乐也是如此。但是与中国诗歌相差甚远的是，音乐中的“告别”往往不拘束于一个特定的人，甚至不存在一个告别的具体对象，这与音乐本身高度抽象、形式美的特征是分离不开的，因而借助音乐实践对告别场景的建立也具有模糊性。而这种模糊性也使得我们讨论的“告别之声”具备独特内涵，自然也拥有讨论的价值。根据“告别”的形式与对象的不同，这个主题可以产生多样且复杂的变化。同时，“告别”这一主题也经常和“死亡省思”，“时代变迁”等等主题存在内在关联。<br>　　“告别之声”在这里特别指：借助音乐这个特殊体裁表达某种告别情愫的形式。事实上，在音乐研究中存在与之相对应的“告别叙事”（Farewell Story）这个固定的提法，并且已经发展出了独特的内核和理解，该提法在马勒作品研究中常见 。不过我们避免这个音乐分析上的固有词汇，从更直观的角度进行理解。在本文中，我们将结合对应的音乐实例，讨论音乐中埋藏的告别之声。</p><h3 id="二、告别的形式与内涵"><a href="#二、告别的形式与内涵" class="headerlink" title="二、告别的形式与内涵"></a>二、告别的形式与内涵</h3><h4 id="（一）告别的形式特征"><a href="#（一）告别的形式特征" class="headerlink" title="（一）告别的形式特征"></a>（一）告别的形式特征</h4><p>　　尽管在之前对于“告别之声”的指代进行了简单的表述，但是显得空泛而抽象，所以我们需要先更具体地确定“告别之声”指代的是哪一种音乐实践。正如前文所说，这个主题具备相当的复杂性和抽象性，使我们难以找到一个合适的范例作为出发点。所以在讨论更复杂的“告别”的内涵前，我们先试图从形式的角度理解“告别之声”，以这个为切入点再进入音乐的更深内涵理解。这里我们将分析三部不同的作品，试图找到“告别”形式上的规律。</p><h5 id="海顿《升f小调第四十五号交响曲》"><a href="#海顿《升f小调第四十五号交响曲》" class="headerlink" title="海顿《升f小调第四十五号交响曲》"></a>海顿《升f小调第四十五号交响曲》</h5><p>　　这部作品第四乐章具有“典型”的形式上的“告别”意味：其中演奏人员变少、乐器逐渐离场、演奏强度渐弱等等设计，从形式上完成了“告别”意义的表达。这里的告别对象是观众，随着整个华丽繁复的部分慢慢进入两把小提琴的演奏时，整部作品结束。这里的告别相当具象化，指“物理意义上”的告别，即将告别的意义全盘交付给形式，因此也容易被理解。而我们所希望找到的告别则是更抽象、模糊的一种音乐实践。</p><h5 id="贝多芬《降-E-大调第二十六钢琴奏鸣曲》"><a href="#贝多芬《降-E-大调第二十六钢琴奏鸣曲》" class="headerlink" title="贝多芬《降 E 大调第二十六钢琴奏鸣曲》"></a>贝多芬《降 E 大调第二十六钢琴奏鸣曲》</h5><p>　　这部作品被贝多芬分乐章地标上了题目，分别为“告别”、“缺席”、“重逢”，并且贝多芬将之题词献给自己的赞助人鲁道夫大公 ，是典型的主题音乐。所以我们可以把它当作一个相当不错的关照对象。遵循音乐速度的线索，我们可以找到一个值得关注的关键点：对于一部奏鸣曲而言，第一乐章往往采用快板，而贝多芬反常地使用了从柔板到快板的结构，而其余两个乐章则保持了传统的速度规范：“缺席”乐章维持了较慢的速度，渲染出一种忧郁悲伤的氛围；而“重逢”乐章则是速度陡升，呈现出了明显的明朗愉悦。</p><h5 id="马勒《第九交响曲》"><a href="#马勒《第九交响曲》" class="headerlink" title="马勒《第九交响曲》"></a>马勒《第九交响曲》</h5><p>　　承接上面的分析，贝多芬的这部钢琴奏鸣曲还有一个值得注意的部分：在该奏鸣曲中前三个音符作为动机，被标注为“Lebewohl” ，这一动机在马勒《第九交响曲》中被再次使用，于是我们也可以从形式的角度简单地分析一下马勒的这部作品。其前三乐章作为谐谑曲或者回旋曲这样的曲式，都以相当快的速度前进，特别到了第三乐章的前半部分，几近脱缰的野马，铜管喧天；却在第四乐章突然戛然而止，将话语权交给了温柔的弦乐组，进入了作品的尾声。交响曲中普遍的处理是以快板甚至急板的第四乐章作结，而马勒在这里反常地选择了柔板，这个选择是具备特殊意义的，正是与其选用的“告别”动机有所呼应。<br>　　不难从上述的分析中找到规律：一种由快速逐渐缓慢、由强至弱、由欢快至沉郁的过程，是“告别”存在的可能形式特征。这给了我们一个线索：乐曲的节奏对于告别具有暗示意味。这样的规则尺度可以变化，即既能对应于一部作品，也能对应于作品的某一个片段。</p><h4 id="（二）告别的内涵特征"><a href="#（二）告别的内涵特征" class="headerlink" title="（二）告别的内涵特征"></a>（二）告别的内涵特征</h4><p>　　在上面的讨论中，我们似乎找到告别的一种特征，但事实是我们在援引马勒《第九交响曲》时实际上并没有严格说明，为什么这部交响曲是“告别”的，仅使用“Lebewohl”动机作为解释并不是非常有说服力。这便需要我们先简单讨论“告别”具备的内涵，及其在音乐中的表现。<br>　　我们确定“告别”具有几个要素：告别者，被告别者，告别者的自我表达，某种状态的改变。此外，我们认为，告别具有时间上的意义，其建立在回忆与遥望之上的。正如李白《送友人》中两句“此地一为别，孤蓬万里征”，“浮云游子意，落日故人情。”两句，分别对应着遥望和回忆。<br>　　对于音乐，其也应当在传达“告别之声”时埋藏着这些信息。我们再一次以贝多芬《降 E 大调第二十六钢琴奏鸣曲》为例，上述的结构在这部作品中皆有其呼应的成分。这部作品欲扬先抑，描述了从离别到思念，最后重逢而喜的过程。并且其“重逢”乐章不似“孤蓬万里征”的遥望，而似温庭筠在《送人东归》中的“尊酒慰离颜”那般愉快，同样构成了“告别”的一个重要要素。<br>　　尽管是从内涵进行的解释，上述的例证中音乐所传达的告别由于具有具体告别的场景和对象，所以仍然停留在具象的层面，使用的音乐语言意义也简明了当。然而在“告别”的内涵这个范畴下，情况可以相当复杂繁琐，特别是对于不同的告别对象，在这其中涉及到一些有趣的讨论，我们将更多例证分解到后面的小节中。但是在上述的过程中，我们已经可以找到一些告别可以被讨论的内容，例如死亡与生命、斗争与妥协种种。我们后面则将不断变更考察的对象，试图更深入地考察“告别之声”在音乐中传达的价值与意义。</p><h3 id="三、“告别”与马勒《第九交响曲》"><a href="#三、“告别”与马勒《第九交响曲》" class="headerlink" title="三、“告别”与马勒《第九交响曲》"></a>三、“告别”与马勒《第九交响曲》</h3><p>　　这时我们再次以马勒《第九交响曲》为例，讨论“告别之声” 。在前面分析的内容中，我们已经对这部作品的基本结构进行了解释。而学者普遍认为这部作品与“死亡”紧紧关联，并称之为“带有自嘲的屈从” 。这便自然构成了一个特殊的告别对象——“对于生命和世界的告别”。我们试图借助这个例子，对其第一与第四乐章加以分析，讨论死亡与告别的内在关联。</p><h4 id="（一）第一乐章：美丽过往和可怖归宿的斗争"><a href="#（一）第一乐章：美丽过往和可怖归宿的斗争" class="headerlink" title="（一）第一乐章：美丽过往和可怖归宿的斗争"></a>（一）第一乐章：美丽过往和可怖归宿的斗争</h4><p>　　第一乐章体现出告别的时间线索。我们拆解出第一乐章几个重要的主题或者动机。其一是第一乐章开头由竖琴拨奏的不规则节奏“心跳动机”；其二是由弦乐组完成的优美旋律，我们称之为“回忆”的第一主题；其三是呈现崩坏混乱特点的第二主题。<br>　　第一乐章呈现出一种明显的斗争性：美好场景与死亡威势的相互交替。第一乐章开头，随着第一主题的进入，“心跳动机”透露出的不安感便深深植入了整部作品，然后调起了崩坏的第二主题；随后借助两个主题旋律反复地构建与崩坏，制造出挣扎的场景，使得整个乐章都充满着危机，渲染出一种末世感。<br>　　在第一乐章中部存在一个微妙的变化，即第一主题变奏的重现，这个更为积极的第一主题变奏突然出现，以悠扬婉转的旋律打破了崩坏的旋律，重新将思索拉回了美好的过去。但这样的美好终难以久继，很快便被乐章开头出现的不安动机再次打断，重新进入混乱的第二主题。在本乐章最后阶段的回光返照式美好的回忆也未能胜利，终于消失在了完全崩坏的音乐中，第一乐章便在这里结束。</p><h4 id="（二）第四乐章：失败的“告别”"><a href="#（二）第四乐章：失败的“告别”" class="headerlink" title="（二）第四乐章：失败的“告别”"></a>（二）第四乐章：失败的“告别”</h4><p>　　第一乐章中第一主题对抗第二主题的失败，意味着所谓回忆向着宿命屈服，已经没有任何回转的余地，而“告别”则是非做不可的事情。抹去了第三乐章结束时的歇斯底里，第四乐章终于放弃了一切的斗争，众多声部互相交织、无尽且稳定地向前进展，展现出铺天盖地般可怕的音响效果。我们可以将其看作留恋之物的断绝，并进入最终的平静，或称“毫无苦味的告别” 。<br>　　这样的音响效果一直维持到第四乐章的结束。在第四乐章的结束时，所有旋律开始分崩离析，陷入琐碎的呓语。作为第四乐章结束的降 D 大调主和弦，由于乐曲声响的效果，呈现出似乎没能成功回到降 D 大调的惨象，仿佛作品尚未真正讲述结束时就宣告了终止。在这场“告别”之中不再设想任何将来之事，没有所谓天堂或者地狱，只是对于自我了结作出宣告而复归平静。这是一个不完整的、失败的“告别”。第四乐章结尾既没能回到期望的世界，也没能“告别”这个世界，而是就这样悄悄地停止了。<br>　　马勒的这部作品带有这样独特的色彩：在前三个乐章中不断对抗命运而失败，终于放弃斗争，进入了第四乐章的告别之时，连告别也没能完成就戛然而止了。死亡和告别是内在相关的：死亡为告别者提供了绝佳的告别对象，推动着作曲家对于“告别”这一行为的实现。然而在这部特殊的作品中，带者一切不舍的回忆与对生命的执着，“告别之声”终于在那命运将至的悲感下变成了沉默的遗憾。</p><h3 id="四、“告别”与晚期风格"><a href="#四、“告别”与晚期风格" class="headerlink" title="四、“告别”与晚期风格"></a>四、“告别”与晚期风格</h3><p>　　正像之前对于马勒作品的分析，“告别”在内涵上与“死亡”主题契合，故也和“晚期风格”内在关联。晚期风格是指作曲家在临终前突然出现的与其成熟风格迥异的新风格。在之前的讨论中，我们都将音乐中埋藏的“告别之声”赋给了一部作品。但其本身也可以是一个阶段的主题。而由于告别、死亡、晚期风格之间互相存在的关联性，我们便能将“告别之声”与晚期风格直接联系起来，在作曲家的晚期风格中找到“告别之声”的影子。这里我们将主要以贝多芬和舒伯特的晚期作品为例，对其进行更深入的讨论。</p><h4 id="（一）贝多芬的晚期风格"><a href="#（一）贝多芬的晚期风格" class="headerlink" title="（一）贝多芬的晚期风格"></a>（一）贝多芬的晚期风格</h4><p>　　贝多芬早中期的作品如《第三交响曲》和《c 小调第八号钢琴奏鸣曲》，具有显然的情感意志流露。这些作品构建出了一个强力、积极的贝多芬形象；而贝多芬的晚期作品则更加富有矛盾性，以其最后五部弦乐四重奏作为代表，呈现出了客观、晦涩而具有神秘主义的贝多芬风格，这些作品也被称为“无表现”的作品。<br>　　这种风格和其另一部晚期作品《第九交响曲》看似不同，但也存在着统一：《第九交响曲》是绝对主观、强力的，并刻意地向上，其带有过分积极宏大的愿望，并因此带有明显的斗争性 以及潜藏的斗争失败的预感。而在其后创作的第十三、第十四号、第十五号弦乐四重奏的第一乐章的开头则更露骨地在不安定与伟大目标间徘徊。<br>　　《第十五号弦乐四重奏》第三乐章中呈现的无限宁静与温暖感受，一定程度地勾勒出《第九交响曲》的斗争终于成功的未来；但在其《第十四号弦乐四重奏》中，却带着明显的不稳定情绪。这种矛盾性与马勒《第九交响曲》的第一和第四乐章对应，建立了斗争与妥协的关系，构造出了“告别”的结构，从而建立起了“告别”和晚期风格的内在联系。</p><h4 id="（二）舒伯特的晚期风格"><a href="#（二）舒伯特的晚期风格" class="headerlink" title="（二）舒伯特的晚期风格"></a>（二）舒伯特的晚期风格</h4><p>　　与之同时，舒伯特晚期风格也带有这样的矛盾性。其创作的《第九交响曲》与贝多芬的《第九交响曲》相似，脱离了《第八交响曲》的沉郁，终于到达了“伟大”的高度；而在一些其他晚期作品中，例如《C 大调弦乐五重奏》、《降 E 大调弥撒》中构造的形象神秘而消极，而这些形象“成为他在离开这个世界之前的正式告白” ，最终形成了我们所讨论的“告别之声”的架构。同时在艺术歌曲《幻影》中，“他将主角替换成幻影时，歌曲的重点也从悲痛绝望的失恋转移到了无处不在的死亡” ，明显地带着舒伯特本人的死亡省思与复杂心理。其晚期风格借助死亡省思和矛盾性和“告别”联系在了一起。<br>　　这些作品本身构成了“告别”，但不同于先前讨论的所有作品，这里的告别是正在进行的：它不会随着一部作品的完成而结束，他们怀揣着对于死亡的担忧往前行进，在众多的作品间摇摆、碰撞，呈现出一种不停顿的斗争性，最后接纳真正的死亡才复归“非尘世的宁静” 。这样的“告别”正像是背负着《欢乐颂》那样的愿景带来的无可调节的矛盾，显得隆重而庄严。</p><h3 id="五、结论"><a href="#五、结论" class="headerlink" title="五、结论"></a>五、结论</h3><p>　　在本文中，我们主要将注意力聚焦于音乐中潜藏的“告别之声”，分别从形式和内涵的角度，由具象至抽象、由微观至宏观地对这个问题进行了讨论。我们从“告别”的形式出发，对海顿、贝多芬和马勒等作曲家的作品分别展开了形式上的讨论，并认为“告别”在其形式上具有由快至慢、由强至弱等等特点。<br>　　从内涵出发，我们则讨论了具象的“告别”具有的例如时间线索、状态变化等等特征；并依照这条线索，进一步对马勒《第九交响曲》和贝多芬及舒伯特的晚期风格进行了简单的探究。我们通过建立起了“告别之声”与死亡观、斗争与妥协的矛盾性、晚期风格等因素的内在联系，指出了“告别之声”存在的与生命相关联的重要价值与深刻内涵。</p><p>【参考文献】<br>[1] 王振蒙，《论舒伯特钢琴小品 D946 No.2 中的“死亡意象”》，黄河之声，2019 年 11 期。<br>[2] 张晨，《马勒&lt;第九交响曲&gt;的“告别”叙事》，中央音乐学院学报，2019 年 03 期。<br>[3] 瞿枫：《幻影”之谜:舒伯特晚期艺术歌曲中的死亡书写》，中国音乐学，2019 年 02 期。<br>[4] 黄键，《马勒音乐中的死亡内涵初探》，交响（西安音乐学院报），2018 年 04 期。<br>[5] 瞿枫，《舒伯特“晚期风格”研究 ：1827— 1828》，上海音乐学院博士学位论文，2015 年，第 38— 46 页。<br>[6] 伍维曦，《终结与滥觞——舒伯特晚期风格中的死亡意象》，书城，2015 年 01 期。<br>[7] 邓军，《贝多芬&lt;第九交响曲&gt;的“欢乐颂”图景——探究末乐章“音乐”与“诗”对于作品结构的深层意义》，星海音乐学院学报，2015 年 02 期<br>[8] 爱德华·萨义德，《论晚期风格》，阎嘉译，生活・读书・新知三联书店，2009 年。<br>[9] 西奥多·阿多诺，《贝多芬：阿多诺的音乐哲学》，彭淮栋译. 联经出版事业股份有限公司, 2009。<br>[10] 孙国忠，《马勒交响曲的哲理内涵》，中国音乐学，1989 年 04 期。<br>[11] 汉斯利克，《论音乐的美——音乐美学修改新译》，杨业治译，人民音乐出版社，1978 年，第 39 页。<br>[12] 薛毛毛，《贝多芬晚期风格中的“非英雄”性—以晚期五首钢琴奏鸣曲为例》，上海音乐学院硕士毕业论文。<br>[13] Vera Micznik, The Farewell Story of Mahler’s Ninth Symphony, 19th-Century Music (1996) 20 (2).<br>[14] Kolodin, Irving (1975). The Interior Beethoven. New York: Alfred A. Knopf.<br>[15] David B. Greene, Mahler, Consciousness and Temporality (New York: Gordon and Breach Science Publishers, 1984).<br>[16] Constantin Floros, Gustav Mahler: The Symphonies, trans. Vernon and Jutta Wicker, ed. Reinhard G. Pauly (Portland: Amadeus Press, 1993).<br>[17] Donald J. Grout and Claude V. Palisca, A History of Western Music (4th edn. New York, 1998), p760.<br>[18] Gustav Mahler: A Study of His Personality and Work, Paul Stefan, trans. T. E. Clark (New York, 1913), pp. 142-43, and 124-25.<br>[19] Rose Rosengard Subotnik, Adorno’s Diagnosis of Beethoven’s Late Style: Early Symptom of a Fatal Condition, Journal of the American Musicological Society (1976) 29 (2): 242–275.<br>[20] Michael Spitzer, Music as Philosophy: Adorno and Beethoven’s Late Style, Musical Meaning and Interpretation, 2006</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看Windows电池容量</title>
      <link href="/2020/tech/%E6%9F%A5%E7%9C%8BWindows%E7%94%B5%E6%B1%A0%E5%AE%B9%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/tech/%E6%9F%A5%E7%9C%8BWindows%E7%94%B5%E6%B1%A0%E5%AE%B9%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近有同学让我帮忙查一下掉电之类的问题啊，然后我发现我并不知道如何查看电池电量。查了一下发现这个方法可用，记录一下。</p><a id="more"></a>  <p>使用<strong>管理员权限</strong>的 cmd 或者 powershell 输入：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">powercfg</span> /batteryre<span class="keyword">port</span> /output “C:\battery_report.html”</span><br></pre></td></tr></table></figure><p>这个指令会生成一个电池使用情况的 html 文件到<code>C:\battery_report.html</code>。当然这个地址是可以改的，比如改到桌面上。成功后，终端会返回：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Battery life <span class="keyword">report</span> saved <span class="keyword">to</span> <span class="keyword">file</span> path C:\battery_report.html.</span><br></pre></td></tr></table></figure><p>找到这个文件打开即可。里面包含最大电池容量和当前最大可充入电池容量，以及一些其他的电池使用情况信息。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++常用语法 —— 数据结构</title>
      <link href="/2020/tech/Cpp%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/tech/Cpp%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为太久没用 C++了，导致很多细节的语法已经记不得了。借着这一次刷的少量题回顾一下 C++的语法，以后总会有时候能用上的。</p><a id="more"></a>  <h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">s.find(s1);  <span class="comment">//找到第一个出现的s1</span></span><br><span class="line">s.substr(pos, n);  <span class="comment">//截取从pos开始的n个字符</span></span><br><span class="line">s.substr(pos);     <span class="comment">//截取从pos开始的所有字符</span></span><br><span class="line">s.replace(pos, n , s1); <span class="comment">//将s从pos开始的n个字符替换为s1</span></span><br></pre></td></tr></table></figure><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><div class="table-container"><table><thead><tr><th>语法</th><th>含义</th></tr></thead><tbody><tr><td><code>vector&lt;int&gt; v1</code></td><td>默认为空的 vector</td></tr><tr><td><code>vector&lt;int&gt; v1(v2)</code></td><td>默认 v2 副本的 v1</td></tr><tr><td><code>vector&lt;int&gt; v1(n, i)</code></td><td>默认内容为 n 个元素 i</td></tr><tr><td><code>vector&lt;int&gt; v1(n)</code></td><td>默认内容为 n 个默认元素，以 int 为例，应是构建了包含 n 个 0 的 vector</td></tr></tbody></table></div><h3 id="Vector的基本操作"><a href="#Vector的基本操作" class="headerlink" title="Vector的基本操作"></a>Vector的基本操作</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; test;</span><br><span class="line">test.push_back(<span class="number">1</span>); <span class="comment">// 插入新元素</span></span><br><span class="line">test.size();        <span class="comment">// 返回长度</span></span><br><span class="line">test.erase(test.begin()+<span class="number">2</span>); <span class="comment">// 删除第3个元素（下标为2的元素）。但这个操作很慢，不建议</span></span><br></pre></td></tr></table></figure><p><strong>Vector 的迭代器访问</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; test;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span>(it=test.begin();it!=test.end();it++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;*it&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure></p><p><strong>算法</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line">reverse(test.begin(), test.end());  <span class="comment">//颠倒</span></span><br><span class="line">sort(test.begin(), test.end()); <span class="comment">//升序排序</span></span><br></pre></td></tr></table></figure></p><p>*<strong>为了降序排序</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a,<span class="keyword">const</span> <span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(test.begin(),test.end(),Comp);</span><br></pre></td></tr></table></figure></p><p>需要定义一个特殊的比较函数，比较函数的输入为 vector 内含有的元素。对于结构体，可以使用类似的方法定义.</p><p>*<strong>当插入对象是数组时</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;   </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> out[<span class="number">3</span>][<span class="number">2</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>,   </span><br><span class="line">             <span class="number">3</span>, <span class="number">4</span>,  </span><br><span class="line">            <span class="number">5</span>, <span class="number">6</span> &#125;;  </span><br><span class="line">    <span class="built_in">vector</span> &lt;<span class="keyword">int</span>*&gt; v1;  </span><br><span class="line">    v1.push_back(out[<span class="number">0</span>]);  </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//1  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Pair"><a href="#Pair" class="headerlink" title="Pair"></a>Pair</h2><p>在进入 Map 之前我们需要先搞定 Pair 类。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; test;</span><br><span class="line">pair&lt;int, int&gt; test(1, 2);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;test.first&lt;&lt;<span class="built_in">endl</span>&gt;&gt;;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;test.second&lt;&lt;<span class="built_in">endl</span>&gt;&gt;;  <span class="comment">//对pair元素的访问</span></span><br></pre></td></tr></table></figure><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>类似 python 的字典（不过灵活度大幅度下降。）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; map_int;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; map_string;</span><br></pre></td></tr></table></figure><p>其馀的初始化方法和 Vector 雷同，故不赘述。</p><h3 id="Map的基本操作"><a href="#Map的基本操作" class="headerlink" title="Map的基本操作"></a>Map的基本操作</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; test;</span><br><span class="line">test.insert(pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;(<span class="number">1</span>,<span class="number">2</span>));  <span class="comment">//插入新元素，使用该方法插入已经存在的键时会报错</span></span><br><span class="line">test[<span class="number">1</span>] = <span class="number">2</span>; <span class="comment">//该方法结果和上条效果相同；不存在该键的情况下会新建，反之会覆盖</span></span><br><span class="line">test.size(); <span class="comment">//字典的大小</span></span><br></pre></td></tr></table></figure><p><strong>查找/读值</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l_it=test.find(<span class="number">1</span>); <span class="comment">//查找元素，返回一个迭代器；若迭代器指向map的末尾，则不存在该元素</span></span><br><span class="line"><span class="keyword">if</span>(l_it==test.end())</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"we do not find 112"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;l_it-&gt;second&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//由于返回的对象是一个迭代器，而迭代器指向的是一个Pair类型，故可以通过Pair类型的访问方法访问</span></span><br></pre></td></tr></table></figure></p><p><strong>遍历</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span> (it = mp.begin(); it != mp.end(); it++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d-&gt;%d\n"</span>, it-&gt;first, it-&gt;second);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p><p><strong>删除</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mp.erase(k);<span class="comment">//删除某一个键</span></span><br><span class="line">mp.erase(it);<span class="comment">//删除迭代器指向对象</span></span><br></pre></td></tr></table></figure></p><h3 id="unordered-map"><a href="#unordered-map" class="headerlink" title="unordered_map"></a><strong>unordered_map</strong></h3><p>效果和 map 非常相似，但是一般情况下，使用 unordered_map 更快。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unordered_map&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="Stack-amp-Queue"><a href="#Stack-amp-Queue" class="headerlink" title="Stack &amp; Queue"></a>Stack &amp; Queue</h2><p><strong>Stack</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.size();</span><br><span class="line">s.empty(); <span class="comment">//判断是否为空</span></span><br><span class="line">s.pop();   <span class="comment">//弹出栈顶元素但不返回</span></span><br><span class="line">s.top();   <span class="comment">//返回栈顶元素</span></span><br><span class="line">s.push();  <span class="comment">// 加入新元素</span></span><br></pre></td></tr></table></figure><p><strong>Queue</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.empty(); <span class="comment">//如果队列为空返回true，否则返回false</span></span><br><span class="line">q.size(); <span class="comment">//返回队列中元素的个数</span></span><br><span class="line">q.pop();  <span class="comment">//删除队列首元素但不返回其值</span></span><br><span class="line">q.front(); <span class="comment">//返回队首元素的值，但不删除该元素</span></span><br><span class="line">q.push(); <span class="comment">//在队尾压入新元素</span></span><br><span class="line">q.back(); <span class="comment">//返回队列尾元素的值，但不删除该元素</span></span><br></pre></td></tr></table></figure><h2 id="Priority-queue"><a href="#Priority-queue" class="headerlink" title="Priority_queue"></a>Priority_queue</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; pq;  <span class="comment">//默认是最大堆</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt; &gt; pq; <span class="comment">//最小堆</span></span><br></pre></td></tr></table></figure><p>其馀操作如同普通的 queue。</p><p><strong>自定义数据结构</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tmp1</span> //运算符重载&lt;</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="class">    int x;</span></span><br><span class="line"><span class="class">    tmp1(int a) &#123;x = a;&#125;</span></span><br><span class="line"><span class="class">    bool operator&lt;(const tmp1&amp; a) const</span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line"><span class="class">        return x &lt; a.x; //大顶堆</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//方法2</span></span><br><span class="line"><span class="class">struct tmp2 //重写仿函数</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="class">    bool operator() (tmp1 a, tmp1 b) </span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line"><span class="class">        return a.x &lt; b.x; //大顶堆</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">int main() </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="class">    tmp1 a(1);</span></span><br><span class="line"><span class="class">    tmp1 b(2);</span></span><br><span class="line"><span class="class">    tmp1 c(3);</span></span><br><span class="line"><span class="class">    priority_queue&lt;tmp1&gt; d;</span></span><br><span class="line"><span class="class">    d.push(b);</span></span><br><span class="line"><span class="class">    d.push(c);</span></span><br><span class="line"><span class="class">    d.push(a);</span></span><br><span class="line"><span class="class">    while (!d.empty()) </span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line"><span class="class">        cout &lt;&lt; d.top().x &lt;&lt; '\n';</span></span><br><span class="line"><span class="class">        d.pop();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    cout &lt;&lt; endl;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    priority_queue&lt;tmp1, vector&lt;tmp1&gt;, tmp2&gt; f;</span></span><br><span class="line"><span class="class">    f.push(c);</span></span><br><span class="line"><span class="class">    f.push(b);</span></span><br><span class="line"><span class="class">    f.push(a);</span></span><br><span class="line"><span class="class">    while (!f.empty()) </span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line"><span class="class">        cout &lt;&lt; f.top().x &lt;&lt; '\n';</span></span><br><span class="line"><span class="class">        f.pop();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure></p><p>这里主要使用第一种方法吧：在数据结构重载运算符。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喧哗记</title>
      <link href="/2020/essay/%E6%89%8B%E8%AE%B0/%E5%96%A7%E5%93%97%E8%AE%B0/"/>
      <url>/2020/essay/%E6%89%8B%E8%AE%B0/%E5%96%A7%E5%93%97%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-GjvsmkwV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="3947466" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>　　一早去等校车回本部，再从本部到江湾校区。去找教务处问保研的事情。这个事情搅成一团实在令人感到难受。吃晚饭的中午，教务处恐怕是没人的，于是我坐在江湾的图书馆，开始回忆前段时间发生的事情，试图记下那么一些游丝。<br>　　<br><a id="more"></a>  </p><p>　　我果然一点也不喜欢接纳新的东西。或者说从一个相对旧的地方往相对新的地方移动。这样空间上的移动给人一种难以理解的落寞感，这既不是怀念我正准备离开的地方，也不是对于目的地的抗拒。只是一种，潜意识里的对于“移动”的排斥。</p><h2 id="09-06"><a href="#09-06" class="headerlink" title="09-06"></a>09-06</h2><p>　　走出地铁站，然后我感觉那种令人不爽的温度照在了我的额头上。这是典型的、我所熟悉的上海的阳光的感触，但是我一点也不喜欢。飞机提前四十分钟到达了我的目的地，我坐在飞机上是这提前四十分钟的意义，可惜没有。在降落的时候，我看着下方的景色，但实话说这和我起飞的时刻看见的风景并不二致。难以想象这段短暂地旅程中，某种转换就完成了。<br>　　在机场前往包裹提取处的一路上，我感觉我自己的步速开始慢慢地提高，感到了一种所谓“pressure”的东西。在机场囫囵点了个 KFC 的套餐，随后就开始了返校的道路。这完全没什么新鲜事可言，除了睁眼看见的四处都有的人，以及闭眼也能想象到的四处都有的人。<br>　　出地铁站的一瞬间，我或许在期待我眼前所看见的景色能有哪怕那么一点点的不同，使我认为，“移动”不完全是无谓的事情。但映入的一起是反胃的相似性。从地点 A 时间 T0 的离开，到达地点 B 时间 T1，随后在 T2 离开地点 B，在 T3 回到了 A。我期望 T3 的 A 和 T0 的 A 不再是一个东西了。但如此的相似。这让我觉得，我的 T0~T3 的时间消失了，从故事的一个结局回到了这个故事的开头，而且这个故事是如此的单调无聊。<br>　　“新加坡的夏天令人厌烦，因为它的周而复始是以天为单位的；而正常的情况是以年为单位的，这或许能让人舒服那么一点。”我想起昨日（9 月 5 日）在自行车上移动的时候说的话。事情没能得到推进——我产生了这样的印象。<br>　　“我实在是把我的大学过得太无聊了啊。”<br>　　伴随着再熟悉不过的一切，我回到了自己的寝室。看着混乱不堪的景象，桌面上积攒的厚厚的灰尘，我连掸掸灰的想法也没有。这个地方不讨我喜欢，从最开始就是。狭小逼仄的空间，周而复始的时间。看着从门外进来的室友 S，我问：“走吧，去新寝室转转。”<br>　　新寝室也并没有什么特别的。但是最诡秘的是，我回到了大一的住宿的旁边。于是完成了从 A 到 B 再从 B 回到 A 的又一个实践。但我不觉得这段时间它消失了，我在这段时间里失去了很多，却没什么收获。这段时间它没有消失，它切实地伤害了我。然而这也确实是一种循环，一种反复的消耗。新寝室莫名地和高中的寝室相似，但在这种相似性中我感受不到亲切。自回到四川以后，和老同学的见面变成了一件时常发生的事情。但我说不清缘由。“既然你不喜欢和人打交道，为什么在大学里主动承担班委的工作呢？”这是一个朋友问我的。我不知道。矛盾性是有趣的东西，但在这一点上我完全不觉得有趣，倒不如说有一种悲剧的特征。<br>　　我记得自己原来说过，一个人开始经常地回忆的时候，他就老了。出于某种预感，我才做了这样一个预言吧。假设前方存在的分岔的路，我究竟是想走上那条前往我不知道方向的道路呢，还是那个回到过去的某个节点的道路呢。或许这两条路是一条路，只是某种错觉让我以为我有的选罢了。<br>　　晚饭我去了一家我之前就常去的茶餐厅。习惯性地点了菠萝油。在我咬下第一口的时候，我感觉那种甜度、咸度、温度都和我记忆里的一模一样，既是我所希望尝到的味道，又是我所不希望尝到的味道。我是出于什么目的选择了这样一种东西呢，这种在我还没有尝试的时候就知道了结局的食物。我大概意识到了“腻烦”这个词的含义，但又终于觉得自己下次还会再来这个餐厅，再一次点下这个菠萝油，因为 pattern 就是这样，这个人的 pattern 就是这样。就是类似那种“到了一个新的餐厅一定会点它的招牌菜”这样琐碎的特征，构成了这个人的生活。<br>　　回到了自己的寝室，看着乱成一团的景象，开始大费周折地对其进行整理。不断地找出各种意料之外的东西，各种琐碎的日常浮现出来，但终究没有特别的意义可言，这些时间确实没有给我留下什么特别值得回忆的事情，仿佛它不曾存在。</p><h2 id="09-05"><a href="#09-05" class="headerlink" title="09-05"></a>09-05</h2><p>　　难得地把三弟约出来了。虽说这次在成都呆的时间非常长，但其实没见过几面，好几次事情都因为自己或者他有这样或者那样的事情被取消了。但虽说是难得的见面，甚至带有自己给自己送行意味的见面，也没有特别的不同。除了破天荒地我去了一趟电影院——电影我是一窍不通的，但不影响我欣然接受了这个安排。这可能是一种介入。<br>　　每次吃饭听三弟谈他在学校里的生活之类的，就由衷地觉得很好：他过着一个不错的生活啊，不像我这样子。但这不是某种介入；介入在高三最后寝室告别的时候就结束了。<br>　　于是我说起当时在哈尔滨遇到的那对父子的事情。我总觉得我自己所看见的东西太少了，世界太多隐秘的角落我永远也碰不到；甚至在我浑然不知的时候，生命就结束了——它总有一天会抛弃我去完成自己的工作。“我想，支教、研究员或者做一个军官都是非常不同的体验吧。”我说，“我都想试试，但是人生它只有一次，社会也不会允许我贪心地尝试别的东西”。我想起在当时高考的时候，听三弟说他有报考军校的打算。我想那就是截然不同的、但是听起来令人兴趣盎然的道路。虽说最后还是没去，但终究贡献了一个相当不错的可能性。“我当时听说要 4 点起来跑操，我就不想去了”。我想，就是因为这个要 4 点起来跑操它才显得有趣啊。<br>　　这实在是矛盾的事情。我所厌恶的“移动”，我搞不清楚。我厌恶停在某个地方，却也厌恶离开这个地方。我清楚有许多的事情，我或许会觉得有趣，我或许会想去探查一番，那绝对不是我所厌恶的。但是我能到那里去吗？我感觉到有一个巨大的轨道，或者精致的台本在我的手中。事情依照某种顺序和必然性发生。即使有些时候一些巨大的爆发会脱离这样的轨道，但最终会被拉回来。这轨道大概是我臆想出来的东西吧；这轨道必将通向一个无趣且嘈杂的世界。<br>　　我们讨论电影里关于时间设定的问题。三弟为了解释电影里的一个现象，给出一种假说：逆时间里的人对于正常时间有更高的干预能力。正常时间的人会因为逆时间中人物的行为得到修正。我说正常时间里的人奉行着自己的 free will 吗？他回答说是，因为这些事实是通过这个人所有的时刻的 free will 的叠加组成的，这一切没有因果而只是事实。那这是他们 free will 的结果呢，还是这个事实的结果呢？这里的 free will 或许只是某种意义的事实罢了。对于时空悖论的解释于我而言最终总会进入一种相当消极的解释。<br>　　或许只是有些事情因为在轨道之外，它们才显地有趣；而为了让这些事情保留着他们的趣味，轨道才存在。这不是什么因果关系，而只是事实。我的心里存在这样的轨道的同时，也存在好恶。轨道和好恶构成的琐碎是这个人的性质。或许有的人的轨道并不存在，有的人的好恶并不存在，但是存在别的东西，比如扳手、比如迷宫、比如门。在众多的喧哗之中，保存着看见的和看不见的事物；扳动这些扳手，游荡在着迷宫或者越过那扇门并不是某种特质，这些事物的存在本身是那个特质。即使，这个人离开了这个轨道，也不意味着轨道出现了错误，而是轨道隐含着一个分支，这个分支是最开始就存在的，它是事实的一部分。<br>　　我把我的大学过得太无聊了，终究不是大学的性质，而是我的性质：是因为主角是我，它才显地无聊。我所排斥的“移动”恐怕是排斥那移动中的我自己吧……</p><h2 id="09-07"><a href="#09-07" class="headerlink" title="09-07"></a>09-07</h2><p>　　我不知道最后我讨论到了这个事情上……是一种很难以解释的郁闷造成的。就像上文讨论的轨道或者好恶之类的事情，本身就具有主观性，因为这些成段成段的讨论和废话并无差别。“这不是理所应当的事情吗！？”或许是吧。其实这些叙述完完全全脱离了我动笔的初衷，但我还是决定忠实地把这些记录下来，算是给我在成都滞留的大半年生活画上一个句号。</p><p>廙水<br>2020-09-07<br>复旦大学江湾校区图书馆</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿拉伯数字转罗马数字</title>
      <link href="/2020/tech/%E9%98%BF%E6%8B%89%E4%BC%AF%E8%BD%AC%E7%BD%97%E9%A9%AC/"/>
      <url>/2020/tech/%E9%98%BF%E6%8B%89%E4%BC%AF%E8%BD%AC%E7%BD%97%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为近日在准备保研的刷题…所以得看各种奇怪的题目。但事实上由于太久没有写算法了，现在还在康复期，先做些简单的东西好了…其实是我觉得这个东西什么时候可能会用上？</p><a id="more"></a>  <h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intToRoman</span><span class="params">(self, num: int)</span> -&gt; str:</span></span><br><span class="line">    string = <span class="string">""</span></span><br><span class="line">    ones = [<span class="string">"I"</span>, <span class="string">"X"</span>, <span class="string">"C"</span>, <span class="string">"M"</span>]</span><br><span class="line">    fives = [<span class="string">"V"</span>, <span class="string">"L"</span>, <span class="string">"D"</span>]</span><br><span class="line">    ct = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> num:</span><br><span class="line">        n = num % <span class="number">10</span></span><br><span class="line">        s = <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> n &lt;= <span class="number">3</span>:</span><br><span class="line">            s = ones[ct] * n</span><br><span class="line">        <span class="keyword">elif</span> n == <span class="number">4</span>:</span><br><span class="line">            s = ones[ct] + fives[ct]</span><br><span class="line">        <span class="keyword">elif</span> n &lt;= <span class="number">8</span>:</span><br><span class="line">            s = fives[ct] + ones[ct] * (n - <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">elif</span> n == <span class="number">9</span>:</span><br><span class="line">            s = ones[ct] + ones[ct + <span class="number">1</span>]</span><br><span class="line">        string = s + string</span><br><span class="line">        ct += <span class="number">1</span></span><br><span class="line">        num //= <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> string</span><br></pre></td></tr></table></figure><h2 id="阿拉伯数字转罗马数字规则"><a href="#阿拉伯数字转罗马数字规则" class="headerlink" title="阿拉伯数字转罗马数字规则"></a>阿拉伯数字转罗马数字规则</h2><div class="table-container"><table><thead><tr><th>符号</th><th>数字</th></tr></thead><tbody><tr><td>I</td><td>1</td></tr><tr><td>V</td><td>5</td></tr><tr><td>X</td><td>10</td></tr><tr><td>L</td><td>50</td></tr><tr><td>C</td><td>100</td></tr><tr><td>D</td><td>500</td></tr><tr><td>M</td><td>1000</td></tr></tbody></table></div><p>例如以下的对应：</p><div class="table-container"><table><thead><tr><th>罗马数字</th><th>阿拉伯数字</th></tr></thead><tbody><tr><td>III</td><td>3</td></tr><tr><td>VI</td><td>6</td></tr><tr><td>XVI</td><td>16</td></tr></tbody></table></div><p><strong>特殊规则</strong><br>除了上述简单的累计外，还有一条特殊规则：对于$4\times 10^n$或$9\times 10^n$，应该使用特殊的表达方法：</p><div class="table-container"><table><thead><tr><th>罗马数字</th><th>阿拉伯数字</th></tr></thead><tbody><tr><td>IV</td><td>4</td></tr><tr><td>IX</td><td>9</td></tr><tr><td>XL</td><td>40</td></tr><tr><td>XC</td><td>90</td></tr><tr><td>…</td></tr></tbody></table></div><p>在这个规则下，<code>MCMXCIV</code>代表 1994：M：1000；CM：900；XC：90；IV：4。这意味着对于一个阿拉伯数字，最多需要 4 个符号，但基本上还是遵循十进制的规律，所以毫无竞争力可言。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>野士</title>
      <link href="/2020/essay/%E8%AF%97%E6%AD%8C/%E9%87%8E%E5%A3%AB/"/>
      <url>/2020/essay/%E8%AF%97%E6%AD%8C/%E9%87%8E%E5%A3%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>只是翻出了高中时期的周记本，想起最后的两页记了些“见不得人”的东西。既然找出来了，也就把它记下来吧。当时晚自习实在看不了教材的时候，相较看小说，果然还是看自己的东西更加有趣。</p><a id="more"></a>  <h2 id="野士"><a href="#野士" class="headerlink" title="野士"></a>野士</h2><p>　　棉芯将燃烧殆尽，<br>　　不，别碰那镜子。<br>　　别碰那些无趣的叹息，<br>　　让它们继续明亮。</p><p>　　却弃了你手里的烟火！<br>　　小心它们燃成了灰，<br>　　灼了你的手。</p><p>　　不，别向无物祷告。<br>　　把它们放在地上，<br>　　等待飘忽的风，<br>　　将它们燃尽。</p><p>　　　　——作于某年 12 月 15 日</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌？ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‘ヒカルの碁’观感</title>
      <link href="/2020/essay/%E8%A7%82%E6%84%9F/%E6%A3%8B%E9%AD%82/"/>
      <url>/2020/essay/%E8%A7%82%E6%84%9F/%E6%A3%8B%E9%AD%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-yHKTMpZX" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="538824" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="评价：★★★★★"><a href="#评价：★★★★★" class="headerlink" title="评价：★★★★★"></a>评价：★★★★★</h3><p>虽然在完成钢炼 03 的观感之后就清楚地意识到了自己不具有写作观后感的才能，但终于还是落笔来记录这一部给我直接震撼的作品。</p><a id="more"></a> <p>距离我第一遍看完这部作品可能已经过去 2 个多月了吧。在这之后，我 开始重复看这部作品；把它的漫画，揪出来补完了北斗杯；把《北斗特别篇》也完成了。但总有一种意犹未尽的感觉……毫无疑问，这部作品是我到目前为止看过的一部最为杰出的作品之一。尽管我一直希望为它写一些什么东西，但总觉得那种感情很模糊，难以构成更具象的文字。</p><p>‘ヒカルの碁’直译过来的话应该叫做《光的棋》，另一个译法为《棋灵王》。但私以为，《棋魂》的翻译还是更加恰当。这部作品显然不是讲述光一个人围棋道路的作品，更不是以佐为和光为核心的作品。佐为的离开暗示了关于“传承”的主题。所谓“神の一手”并不是一个具体的存在，是棋士往下奋斗的道路。但传承只是这其中众多主题之一。</p><p>很难想象一部漫画作品可以把关于围棋这种行外看热闹的严肃主题演绎到这样的程度。我几乎是在看过了前几集之后就笃定这是一部优秀的作品，甚至在期末季连续熬夜看完（特别是名人佐为两战，完全没有喘息的机会），然后二刷三刷。它所传达的可怕信念和执念，毫无疑问可以让观众为之动容。</p><p>这个故事基本上是关于对局和人的故事。围绕着这个核心，将当时日本棋界的人和事慢慢地抖落出来。以筒井、三谷为代表的以围棋作为爱好的普通学生，以棋士作为众生奋斗的和谷、伊角的院生时代，在棋坛风生水起的新生代（可能也比较老了吧）绪方、仓田，以及当时日本的巅峰塔矢名人。</p><p>整个故事基本上是由几场重要的对局作为线索拉开的，对于人物的塑造也几乎是依赖对局完成的。这其中有关乎剧情发展的重要对局，也有配角们闪烁光芒的“魂”的对局。剧情的发展环环相扣，自然而充满波折。几个重要的成长阶段也自然合理毫不做作。几次对局将整部的气氛严肃而积极。我可以清晰地感到这部作品中人物的精神透过方框地屏幕向外涌出，闪烁着他们追求的光。</p><p><strong>佐为 VS 亮</strong></p><p>佐为和亮一共对局三次。前两次使亮产生了巨大的恐惧。从此树立了追赶光的目标。然而在中学围棋大赛见到真正的光时大失所望，转而进军职业世界。</p><p>亮是一个温柔的人，但是对于超越自己的对围棋毫无尊敬的光，展现出了一种毫无动摇的决心。即使是远比自己强大的，也必须去挑战，这是通往“神の一手”的唯一道路。</p><p>亮由于自己的名人父亲，深深知道棋界的艰难，也对其抱着绝对的尊敬和执着。几乎可以说是全剧中最为执着的棋手，具有着远超光前期决意追赶亮的觉悟和决心。</p><p><strong>佐为 VS 名人</strong></p><p>佐为和名人也有三次对局。也是剧情重要的三次对局。其中第一句完成了对于光的引导，让光产生了“他们对这个如此认真，自己也相认真”的想法。这是光从“随便玩玩”到“认真对待”的重要对局。尽管这局不了了之，但也为后面的新初段埋下了伏笔。</p><p>第二局新初段赛，佐为佐为棋手的执念在这里爆发。这一战的分为塑造将视角交给了名人和观众，通过顶尖棋士的评论，将这一战的“紧张感”渲染到了极致。</p><p>第三局线上围棋战，观众变为了世界的业余棋手。这一次将上一战未完成的遗憾结束了，也终于开始了佐为的离别章节。这一章展现的是名人的意志。“这就是名人的棋，绝不退让，一定会赢。”。结束之后，名人自嘲 “名人我下出这样一盘棋，也不算坏吧。”名人也有名人的追求。后面名人摆脱成见，隐退棋坛，游历四方，不断地学习和感受围棋。完成了对于名人角色的收束。</p><p>第三战光的发现终于让佐为意识到了自己存在的意义，即便认识到了自己可能永远无法碰到神之一手，但还有后辈在不断地、不断地朝着那个方向前进。自己作为传承者的使命已经完成了，终于放下了自己对于围棋地热情，从而不可避免地迈向了消失的结局。</p><p><strong>光 VS 和谷</strong></p><p>在对局中出现对话是常见的手法。和谷和光之一战，决定了和谷能否就此走向职业棋士。接受老师鼓励的和谷拼尽全力，发现自己稳操胜券时，脑中回响的老师的话。这里算是一个刚刚将要进入棋坛新人的思想吧。朴实且充满着希望，然而这一战输了。</p><p>哎……实在是太多了。光和伊角两次对局，光和洪秀英的对局，越智和社的对局。这是一群人展现的对于围棋这个事业的执着和热爱。就是这样单纯的故事也能打动很多很多的人了，对这些棋手自然尊敬起来。</p><p>佐为的离去是在众多伏笔下必然的事件；如果作者在之后执意让离开的佐为回到这世间，尽管满足了许多的读者，却会成为这部作品的败笔。将佐为的意志寄托在光对围棋的爱中，是最优的解。佐为的离开和光的成长是密不可分的，道路总是需要一个人走下去的，对于围棋的爱也不应当是为了某个人才坚持下去，这是一条自我的、自私的道路。在光与伊角的一局中，那只突然出现的手和扇子，让我整个人愣住了。原来这个谜题是这样的啊……作者实在是……完全在意料之中的解法，但是在长时间的情感烘托之下呈现绝对的杀伤力。光重新带者佐为的执念回到了棋坛。应该是佐为真正满意的结局吧。</p><p>“传承”这个主题在北斗杯再一次托出，完成了光回归棋坛的结局，留下了无穷的可能。这部作品将棋士的精神很好地展现在了所有读者的面前，即使作为一个对围棋一知半解的门外汉，也不得不感到触动——为了一个热爱的事业竟然能够如是执着地为之奋斗，这是如此值得钦佩的事情！却在现代的世界中越来越少见，实在是令人遗憾。</p><p>我果然是，很不适合写观后感……此刻真切地感到自己完全没有足够的能力对自己发自内心喜爱的这部作品做出真正恰到好处或者生动的评价。多年以后，我一定会回到这部作品来，看看自己的人生是不是过得就那样凄凉而单调。或许每个人都藏着一颗棋士的心，奋斗且挣扎、不停地挑战、执着地追求更强的棋士的心，在各自热爱的领域里将自己的爱和执着传承下去……</p><p>这是一部可怕的作品。</p>    <div id="aplayer-wAEwVEZc" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="538768" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读 - How to best use Syntax in SRL</title>
      <link href="/2020/scholar/paper/Syntax_in_SRL/"/>
      <url>/2020/scholar/paper/Syntax_in_SRL/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文讨论如何把句法信息加入 SRL 任务。其中提到了三种方法：使用句法信息作为输入；使用句法信息组成 Multi-task；同时使用上述两种方法，组成 auto-encoder。本文使用 CoNLL’05 和 CoNLL’12 作为训练集进行测试。</p><a id="more"></a>  <h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><h3 id="外部信息"><a href="#外部信息" class="headerlink" title="外部信息"></a>外部信息</h3><p>将外部信息加入 NLP 任务的思想在近几年中趋势越发明显。关于这个问题，有三种主流的做法：</p><ol><li>加入 Input：外部信息作为神经网络的额外输入特征。</li><li>作为 Output：神经网络在训练主任务的同时需要对这些信息进行 Multi-task 训练。</li><li>Auto-encoder：同时将外部信息作为神经网络的 Input 和 Output。</li></ol><p>但是这些研究主要停留在了一些浅层信息，例如将 POS 标签和序列标注任务结合。而那些标注句法依赖等等“较长”句法特征信息则没有被仔细研究。这篇文章就是针对这一点进行一个补充。</p><p>在这篇文章中，主要讨论了三个问题：</p><ol><li>应该如何将句法信息加入作为<strong>word-level featrues</strong>？</li><li>如何最好地表达句法信息？</li><li>句法信息表达的选择对于结果有多少影响？</li></ol><h3 id="SRL-System"><a href="#SRL-System" class="headerlink" title="SRL System"></a>SRL System</h3><p>一个语法标注系统能够提取 predicate-argument 结构。在研究早期句法信息一直是 SRL 的重要组成部分，然而当下的 SOTA 模型并没有显式地包含句法信息。这篇文章希望通过实验证明句法信息对于 SRL 系统的重要作用。</p><p>在这篇文章中，作者将外部信息表示为离散特征向量。其中有三类表示：</p><ol><li>Full-C：全成分树表示</li><li>SRL-C：SRL-specific span 表示</li><li>Dep：依赖树表示</li></ol><h3 id="Evaluation"><a href="#Evaluation" class="headerlink" title="Evaluation"></a>Evaluation</h3><p>对于不同的整合方式，在语料库 CoNLL’05 和 CoNLL’12 上进行测试获得结果</p><h2 id="句法表示"><a href="#句法表示" class="headerlink" title="句法表示"></a>句法表示</h2><h3 id="Full-C"><a href="#Full-C" class="headerlink" title="Full-C"></a>Full-C</h3><p>参照 Gomez-Rodrıguez and Vilares 提出的方法，将成分分析树进行向量化。为了表示这个提出下列标注：</p><ol><li>$n(w<em>i)$：指$w_i$和$w</em>{i+1}$间的共有父节点的数量。</li><li>$l(w_i)$：编号最小的父节点的 non-terminal 标签。如果是 terminal，则为 S。</li><li>$r(w<em>i)$：$n(w_i) - n(w</em>{i-1})$</li></ol><p>通过记录所有节点的上述信息，可以完全还原成分分析树。示例如下：</p><center><img src="/images/Research/Full-c.jpg"/></center><h3 id="SRL-C"><a href="#SRL-C" class="headerlink" title="SRL-C"></a>SRL-C</h3><p>只有一小部分的成分分析树中的成分是发挥了作用的。这意味着将整个成分分析树都进行编码可能不是最优解。因此仅保留最有可能有利于标签分类的成分是必要的一个操作。为此，作者使用了剪枝算法，将其中的部分 argument 收集起来，并将无关的部分滤除。对于滤除的结果使用标准 BIO 标记法标记。</p><ol><li>O：单词在任何一个候选成份外</li><li>B：单词是某一个候选成分的第一个单词</li><li>I：单词在某一个候选成分中</li><li>A：单词在一个介词短语中</li><li>V：正在考察的 predicate 的核心动词</li></ol><p>这个标记在上面例图中已经标明。</p><h3 id="Dep"><a href="#Dep" class="headerlink" title="Dep"></a>Dep</h3><p>通过依赖树，编码的仍然是成分信息。其具有下列的标签：</p><ol><li>Left/Right：这个但错左右拥有的依赖数。</li><li>Edge：这个单词是管辖这个词（左边/右边/不是）最依赖这个词的词。</li><li>RG（Relative distance to governor）：这个词与其 Governor 间的距离。</li><li>DL（Dependent label）：指向这个词的 denpendent 标签。</li></ol><p>示例如下：</p><center><img src="/images/Research/Dep.jpg"/></center><h2 id="如何使用外部信息？"><a href="#如何使用外部信息？" class="headerlink" title="如何使用外部信息？"></a>如何使用外部信息？</h2><p>加入外部信息的方法如同前文所说，有三：</p><ol><li><strong>Input</strong>：将外部信息和 ELMo 提供的词向量相连。其中依赖树通过将生成的成分树进行变换得到，以保证两种划分方法的一致性。</li><li><strong>Output</strong>：同时预测 SRL 和句法特征，最后使用的损失函数是这两部分的和。</li><li><strong>Anuto-encoder</strong>：将外部信息作为特征输入，并同时作为 multi-task 训练的对象，使得这个方法呈现出 encoder 的特性。</li></ol><h2 id="实验部分"><a href="#实验部分" class="headerlink" title="实验部分"></a>实验部分</h2><p>实验一共进行了 10 组：“3 种使用外部信息的方法”x“3 种将文本句法特征向量化的方法” + 1 个 baseline。实验在 CoNLL’01 和 CoNLL’12 上进行。</p><h3 id="主要结果"><a href="#主要结果" class="headerlink" title="主要结果"></a>主要结果</h3><center><img src="/images/Research/SRL-res.jpg"></center><p>结果表示，句法信息确实是对 SRL 能力有积极提升作用。其中，Full-C 获得了更优于 Dep 的实验结果。作者认为这是由于成分树更加接近于 SRL 的信息。此外 SRL-C 的方法略好于 Full-C 方法，在集外预测时也更具优势。</p><p>并且使用 Multi-task 在这个任务中并没有体现出非常好的效果，而其馀两种方法效果相当。</p><h3 id="与现有系统的对比"><a href="#与现有系统的对比" class="headerlink" title="与现有系统的对比"></a>与现有系统的对比</h3><p>作者将本次实验中表现最为出色的 SRL-C used as Input 作为对比，和现有的各个工作进行对比。这个方法相较于现在已有的模型有略微的提升，但是结果并未明显胜出 ensemble 方法。</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP术语集 - Grammar</title>
      <link href="/2020/scholar/NLP/Grammar/"/>
      <url>/2020/scholar/NLP/Grammar/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近开始看 NLP 的论文啊，觉得好多术语都不知道是个什么，就只能一边看一边查咯。</p><a id="more"></a><h3 id="Predicate：谓词"><a href="#Predicate：谓词" class="headerlink" title="Predicate：谓词"></a>Predicate：谓词</h3><p><a href="https://www.grammar-monster.com/glossary/predicate.htm" target="_blank" rel="noopener">Link</a></p><blockquote><p>The predicate is the part of a sentence (or clause) that tells us what the subject does or is. To put it another way, the predicate is everything that is not the subject.</p></blockquote><p>或参照韦氏词典的定义：</p><blockquote><p>the part of a sentence or clause that expresses what is said of the subject and that usually consists of a verb with or without objects, complements, or adverbial modifiers.</p></blockquote><p>简而言之谓词是描述 Subject 做什么或者是什么的一个<strong>成分</strong>，并不一定是一个词。一个谓词的 Core 是一个动词。</p><p><strong>Easy Examples of Predicates</strong></p><ul><li>Adam <em> <strong>lives</strong> in Bangor</em>.</li><li>The telegram <em> <strong>contained</strong> exciting news</em>.</li><li>The girls in our office <em> <strong>are</strong> experienced instructors</em>.</li></ul><p><strong>Real-Life Examples of Predicates</strong></p><ul><li>True friends <em> <strong>appear</strong> less moved than counterfeit</em>. (Greek philosopher Homer)</li><li>Words empty as the wind <em> <strong>are</strong> best left unsaid</em>. (Homer)</li><li>People can <em> <strong>come</strong> up with statistics to prove anything</em>. Forty percent of all people <em> <strong>know</strong> that</em>. (Homer Simpson)</li><li>With $10,000, we would <em> <strong>be</strong> millionaires</em>! We <em> <strong>could buy</strong> all kinds of useful things like … love</em>. (Homer)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>土豆汤制法</title>
      <link href="/2020/essay/%E8%8F%9C%E8%B0%B1/%E5%9C%9F%E8%B1%86%E6%B3%A5/"/>
      <url>/2020/essay/%E8%8F%9C%E8%B0%B1/%E5%9C%9F%E8%B1%86%E6%B3%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为一个人在家，看着家里有土豆，于是打算就试一次土豆泥。但是土豆泥总感觉味道不如土豆汤，所以打算改做土豆汤，而家里又没有用来搅碎蔬果的东西，所以用豆浆机代替。本来战战兢兢的，后来发现不仅没有出问题，而且效果还不错，而且做法简单地不可思议。</p><a id="more"></a>  <p><strong>口感</strong></p><ul><li>和西餐厅能吃到的口感相似，不过因为第一次做多放了水，所以会显得稀一点。</li><li>颜色呈粉红色</li></ul><p><strong>材料</strong><br>下述材料是两人份的。</p><ul><li>正常大小土豆一个</li><li>火腿肠（粗）：1/4 支</li><li>牛奶 250ml</li></ul><p><strong>步骤</strong></p><ul><li>将土豆切丁（很小的类型）</li><li>将火腿肠切丁</li><li>将牛奶导入上述混合物，并加入 50ml 左右的水</li><li>使用豆浆机打碎</li><li>适量放盐，结束</li></ul><p><strong>实验失败经历</strong></p><ol><li>实验 001<ul><li>第一次实验使用了半根火腿肠，发现火腿肠味道太浓，土豆味道不明显，且汤体成粉红色，明显是放多了……</li><li>并且第一次倒入了整碗水，水过多导致土豆汤过稀，应该是使用半碗即可。</li><li>这个事情的后续：豆浆机因此损坏，尽管看起来它好好的。该项目因为带来的巨大的经济损失，将不再被实验。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 食谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pip下载Module</title>
      <link href="/2020/tech/Python/pip%E4%B8%8B%E8%BD%BD/"/>
      <url>/2020/tech/Python/pip%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Pip 下载东西总是哪里会出一个幺蛾子……即使加上镜像……</p><a id="more"></a>  <p>使用下列指令下载：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip pip install -i https:<span class="string">//pypi.tuna.tsinghua.edu.cn/simple</span> <span class="params">--default-timeout=100</span> <span class="params">--upgrade</span> tensorflow-gpu</span><br></pre></td></tr></table></figure><p>其中<code>--default-timeout</code>项可以避免：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ReadTimeoutError: <span class="constructor">HTTPSConnectionPool(<span class="params">host</span>='<span class="params">pypi</span>.<span class="params">tuna</span>.<span class="params">tsinghua</span>.<span class="params">edu</span>.<span class="params">cn</span>', <span class="params">port</span>=443)</span>: Read timed out.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python自动修改格式</title>
      <link href="/2020/tech/Python/Python%E8%87%AA%E5%8A%A8%E6%8E%92%E7%89%88/"/>
      <url>/2020/tech/Python/Python%E8%87%AA%E5%8A%A8%E6%8E%92%E7%89%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>偶然发现的一个 Python 自动修改代码风格的工具，感觉挺有用，在此记录使用方法。</p><a id="more"></a>  <h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先对于安装<code>black</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> black</span><br></pre></td></tr></table></figure><p>注意这个命令需要在 VSC Terminal 所在的虚拟环境中安装。例如如果 Terminal 使用的 conda-base，则该 Module 就应该在 conda-base 里安装。</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>打开 VSC 的 Setting(JSON)，将下列代码粘贴在最后方：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"python.formatting.provider"</span>: <span class="string">"black"</span>,</span><br><span class="line"><span class="string">"editor.formatOnSave"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"python.formatting.blackArgs"</span>: [</span><br><span class="line">  <span class="string">"--line-length"</span>,</span><br><span class="line">  <span class="string">"120"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在这个设置下，每一次保存会进行一次自动的格式修改。但由于 Python 的特殊性，这个脚本能够改变的主要是行内代码风格，不能对缩进等进行修改。</p><p>参考连接：<a href="https://zhuanlan.zhihu.com/p/73452541" target="_blank" rel="noopener">link</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 脚本工具 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新老Edge并存方法</title>
      <link href="/2020/tech/%E6%96%B0%E8%80%81Edge%E5%B9%B6%E5%AD%98/"/>
      <url>/2020/tech/%E6%96%B0%E8%80%81Edge%E5%B9%B6%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>新版 Edge 尽管支持了 chrome 的插件，但是由于主力 Vivaldi 的能力过强，导致新 Edge 继续吃灰。配合 surface pen，老版 Edge 的 PDF 阅读器作为绝对优势的功能也遗憾被删除。为了能够继续使用老版本的 Edge，在网上搜索一番后，发现这个方法可行，于是记录下来。</p><a id="more"></a>  <h2 id="更新文件"><a href="#更新文件" class="headerlink" title="更新文件"></a>更新文件</h2><p>打开网址：<a href="https://www.microsoft.com/zh-cn/edge/business/download" target="_blank" rel="noopener">link</a>，</p><center><img src="/images/Things/edge.jpg" width="50%" height="50%" />如是选择</center><p>这个下载会获得一个名为<code>MicrosoftEdgePolicyTemplates</code>的压缩文件。将其解压可以得到下述文件：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\-</span> examples</span><br><span class="line"><span class="string">\-</span> html</span><br><span class="line"><span class="string">\-</span> mac</span><br><span class="line"><span class="string">\-</span> windows</span><br><span class="line">    <span class="string">\-</span> admin</span><br><span class="line">    <span class="string">\-</span> admx</span><br><span class="line">        <span class="string">\-</span> zn-CN</span><br><span class="line">        <span class="string">\-</span> en-US</span><br><span class="line">        ...</span><br><span class="line">        msedge.admx</span><br><span class="line">        msedgeupdate.admx</span><br></pre></td></tr></table></figure><p>将上述文件的<code>msedge.admx</code>及<code>msedgeupdate.admx</code>复制到文件夹：<code>C:\Windows\PolicyDefinitions</code>中。同时对应于上述的语言文件夹，将其中相关内容复制到对应的文件夹中。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>上述完成之后可以打开<code>gpedit.msc</code>，进入 windows configureation，依照下列路径进入：<code>Computer configuration -&gt; Administrative Templates -&gt; Microsoft Update</code></p><p>双击 Microsoft Update，点击 side-by-side 选项，将该服务 enable。</p><p>* 注意：这个文件夹只有在完成了上述的修改之后可见。</p><h2 id="重新安装"><a href="#重新安装" class="headerlink" title="重新安装"></a>重新安装</h2><p>回到最开始的网站，保持相同的版本号，下载新的 msi 安装文件安装 edge。这个操作不会将老版本 Edge 放入开始菜单，但是可以通过菜单栏中的<code>open with</code>打开 PDF。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读 - Towards Robust Semantic Role Labeling</title>
      <link href="/2020/scholar/paper/Towards%20Robust_Semantic_Role_Labeling/"/>
      <url>/2020/scholar/paper/Towards%20Robust_Semantic_Role_Labeling/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>ACL 2007</strong></p><p>为暑研工作阅读的第一篇论文。暑研工作的三个基石之一：SRL（Semantic Role Labeling）。现在大部分 SRL system 都基于一个数据集完成的训练。作者认为这样会造成过拟合现象。这篇文章提供了一种在特定数据集上标注后迁移到另一个数据集的方法。本篇文章基于 PropBank（很快我也需要完成这篇文章的阅读了。）这篇文章认为语法上的 parser 和 argument 判断可以很容易的迁移，然而 argument classification 不是。</p><a id="more"></a>  <h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>SRL 是一种用来表征语法结构的方法。党表征一个句子时，一个好的语法标注器应当能够对句子中的每一个谓词，正确地辨别并标注出其语法 label。在近期的工作中，这个工作是通过监督机器学习完成的。尽管这些工作在数据集上都达到了很高的准确率，但是他们极大地与其训练的数据集相关。这篇文章的焦点就是讨论这样的现象。</p><p>实验基于 PropBank corpus（这是一个 WSJ 的标注数据集）完成。</p><h2 id="语义标注（Semantic-Role-Labeling）"><a href="#语义标注（Semantic-Role-Labeling）" class="headerlink" title="语义标注（Semantic Role Labeling）"></a>语义标注（Semantic Role Labeling）</h2><p><strong>成分分析（constituent parsing）</strong><br>成分解析树将一个句子划分为一棵成分树，树上的非叶子节点是划分成的短语，叶子节点是句子中的单词。</p><p>在 NLP 中，分析方法分为：</p><ul><li>词法分析 lexical analysis</li><li>句法分析 syntactic parsing</li><li>语义分析 semantic parsing</li></ul><p>其中语义分析是指将自然语言句子转化为反映这个句子语义的形式化表达。例如：</p><blockquote><p>我吃了一块肉<br>一块肉被我吃了</p></blockquote><p>在语义上都表示为吃(我，肉）的意思，但句子结构却有不同。句子的语义分析是对句子处理技术更高一级的要求，在信息检索、信息抽取、自动文摘等应用广泛。</p><blockquote><p><strong>SRL:</strong> Semantic Role Labeling (SRL) is defined as the task to recognize arguments for a given predicate and assign semantic role labels to them.</p></blockquote><p>SRL 是浅层语义分析技术，以句子为单位处理为“谓词+论元”的结构。</p><h2 id="语义标注和语料库"><a href="#语义标注和语料库" class="headerlink" title="语义标注和语料库"></a>语义标注和语料库</h2><p>这篇文章通过复现 PropBank corpus 中的语义标注方法完成实验。PropBank 是一个包含 300k 单词的语料库，其中对于除了系词（corpula）外的所有动词都标注了谓词 argument 关系。PropBank 使用了 Arg0~Arg5 作为谓词 labels。</p><ul><li>ARG0: Agent, operator</li><li>ARG1: Things operated</li><li>ARG2: EXplicit patient</li><li>ARG3: Explicit argument</li><li>ARG4: Explicit instrument</li></ul><center><img src="/images/Research/semantic-tree.jpg" width="50%" height="50%" />Semantic Tree</center><p>除了这些基本的标志外，还存在 adjuntive argument（ArgMs），以及 ArgM-Loc，Arm=gM-TMP 等等。对于下面的例子，使用 operate 作为候选词获得的标注：</p><blockquote><p>It operates stores mostly in Iowa and Nebraska.</p><p>[$<em>{ARG0}$It] [$</em>{谓词}$operates] [$<em>{ARG1}$ stores][$</em>{ARGM−LOC}$ mostly in Iowa and Nebraska].</p></blockquote><p>PropBank 假定对于一个谓词的语义单元只存在一个或多个 nodes。尽管对于大部分的 arguments 树只有一个 node，但多个 node 的情况也是存在的。</p><h2 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h2><p>在 ASSERT 中，SRL 是通过对于一个 syntactic parse 的组分分配一个 role label 实现的。基本上可以被分到三个步骤：</p><ol><li>Argument identification：对于一个给定的谓词，识别句子成分。对于 parse tree 中的任何一个 node，可以被分类为具有语义表示（Not Null Node）或者不具备任何语义内涵。</li><li>Argument classification：假定已知一个谓词的组成已知，这个步骤将 argument label 赋给这些组成。</li><li>Argument identification and classfication：上述两个任务的组合。</li></ol><h2 id="ASSERT（Automatic-Statistical-Semantic-Role-Tagger）"><a href="#ASSERT（Automatic-Statistical-Semantic-Role-Tagger）" class="headerlink" title="ASSERT（Automatic Statistical Semantic Role Tagger）"></a>ASSERT（Automatic Statistical Semantic Role Tagger）</h2><h3 id="模型架构"><a href="#模型架构" class="headerlink" title="模型架构"></a>模型架构</h3><p>ASSERT 对每一个谓词生成一组 SRL（不同于 PropBank，系词是考虑在内的）。模型基本的输入是一个句子以及成分分析树。对于每一个分析树中的成分，ASSERT 提取出一组特征，并使用分类器对这个成分指定标签。该模型使用 SVM 方法及“one vs all”构建 n 个分类器，每一个分类器的结果被综合对标签进行判断。</p><p>上述使用的方法有一个缺陷：每一个 argument 的分类是独立的，而没有考虑其他被赋给相同标签的 argument。这样会忽略部分信息。</p><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>使用的特征如下：</p><ul><li>谓词：确定 arguments 所使用的这一个谓词，同时该谓词的形式及语法信息同样作为特征输入。</li><li>路径：从分析树到当前分类谓词的路径。</li></ul><center><img src="/images/Research/tree-path.jpg" width="50%" height="50%" /></center><ul><li>短语类型：比如 PP，NP 等等成分。</li><li>位置：这个成分出现在谓词前还是谓词后</li><li>状态：这个谓词是主动的还是被动的。</li><li>子类？：这个谓词的子节点，例如在上图中：<code>VP -&gt; VBD - PP - NP</code>。</li><li>谓词 cluster：直观是，对于相似的语法结构的动词应该有相似的对象。例如“eat&amp;devour”。动词被分为 64 类，然后通过这个分类作为特征。</li><li>Head word：这个成分的 head。</li><li>Head word Pos：这个 head word 的 pos。</li><li>成分中的 named entity。</li><li>…… 太多了，不一一列举了。</li></ul><p>在实验过程中，对于 Identification Task 和 Classification Task 的有效特征是不同的。对于 IT，有效的特征是 Path 和 Partial Path，而谓词并不是非常重要。而对于分类，更重要的是 Head word，First/Last word 这些词。</p><p>简单的结论是，结构性的特征（如 Path）对于 IT 有积极作用，而更 lexical 的词或语义上的特征则对于分类更加重要。</p><h2 id="鲁棒性分析"><a href="#鲁棒性分析" class="headerlink" title="鲁棒性分析"></a>鲁棒性分析</h2><p>基本上目前的研究都将注意力放在了带有某种相同风格的文本上，对于这些文本集表现得提高可能更多意味着对于<strong>某类文本</strong>的辨识力/拟合，然而 SRL 等工具应当是普适意味的……为了表现这些模型确实不具有很强的迁移能力，引入下列的数据集。</p><h3 id="The-Brown-Corpus"><a href="#The-Brown-Corpus" class="headerlink" title="The Brown Corpus"></a>The Brown Corpus</h3><p>BC 是美式英语标准语料库，包含 1 百万英文文本，收录 2000 多词越 500 个样本。这个数据集用做语言对照分析。</p><h3 id="跨风格测试"><a href="#跨风格测试" class="headerlink" title="跨风格测试"></a>跨风格测试</h3><p>这一个测试表现模型在一个数据集上训练以后迁移到另一个数据集上是训练得到的结果差异。其选择在 WSJ 模型上先完成训练，然后迁移到 BS 上进行对比。我们掠过结果分析部分。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>获得了在 PropBank 上的 SRL SOTA，并使用这个结果在 Brown 语料库上进行检验。事实证明，在 Brown 上的模型表现大幅度下降，作者认为其中 Identification 步骤对模型能力下降影响不大，分类部分是模型能力下降的主要原因。</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spaCy模型离线安装</title>
      <link href="/2020/tech/Python/Spacy%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/tech/Python/Spacy%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了安装 AllenNLP，不得已更新了 Torch。然后发现 SpaCy 的语言包也需要更新。奈何现在不在国内，更新语言包非常难受。网上的方法大多不济，这里简单记录。</p><a id="more"></a>  <h2 id="排雷"><a href="#排雷" class="headerlink" title="排雷"></a>排雷</h2><ul><li>在国内直接使用<code>python -m spacy download en</code>，一般下载到 50%左右就会断开连接。</li><li>下载了离线包之后，在文件夹执行<code>python setup.py install</code>并没有什么用处，模型仍然不能被正确识别。</li><li>使用<code>pip install *.tar.gz</code>，会导致开始下载模型……</li></ul><p>上述方法都是经过反复尝试并且无效的。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在 github 上找到合适的 en 模型下载并解压，得到一个文件夹：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\<span class="selector-tag">-</span> <span class="selector-tag">en_core_web_sm</span></span><br><span class="line">    <span class="selector-tag">en_core_web_sm-2</span><span class="selector-class">.3</span><span class="selector-class">.0</span></span><br><span class="line">    __<span class="selector-tag">init__</span><span class="selector-class">.py</span></span><br><span class="line">    <span class="selector-tag">meta</span><span class="selector-class">.json</span></span><br></pre></td></tr></table></figure><p>将上述文件放入</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\1</span>3808<span class="symbol">\A</span>naconda3<span class="symbol">\L</span>ib<span class="symbol">\s</span>ite-packages<span class="symbol">\e</span>n_core_web_sm</span><br></pre></td></tr></table></figure><p>替换原本文件，然后即可正常使用。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python常用数据结构</title>
      <link href="/2020/tech/Python/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2020/tech/Python/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了准备清华的机考，花了大概半个小时整理了一下 Python 常用的数据结构的技巧（虽然可能存在其他直接的方法……）</p><a id="more"></a>  <h2 id="数列"><a href="#数列" class="headerlink" title="数列"></a>数列</h2><p><strong>栈和队列的实现。</strong></p><p>统一使用 append 压入数字。对于 pop：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(a.pop(<span class="number">0</span>)) <span class="comment">#删除第一个元素并返回，用来形成队列</span></span><br><span class="line">print(a.pop()) <span class="comment">#删除最后一个元素并返回，用来形成栈</span></span><br></pre></td></tr></table></figure><p><strong>排序</strong></p><ul><li>普通排序</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = sorted(a, reverse = <span class="literal">True</span>) <span class="comment"># 排序</span></span><br></pre></td></tr></table></figure><ul><li>多个数字排序</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> operator</span><br><span class="line">data = [(<span class="number">1</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">4</span>), (<span class="number">5</span>, <span class="number">6</span>)]</span><br><span class="line">data = sorted(data, key=operator.itemgetter(<span class="number">1</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>其中 operator.itemgetter 可以申明多个数字，是优先级的定义。</p><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p><strong>快速创建字典</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = set(range(<span class="number">14</span>))</span><br><span class="line">b = set(range(<span class="number">1</span>, <span class="number">15</span>))</span><br><span class="line">res =  dict(zip(a, b))</span><br></pre></td></tr></table></figure><p>这个方法可以快速组件字典。</p><p><strong>字典的操作</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">res = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">res.pop(<span class="number">1</span>, <span class="number">0</span>) <span class="comment"># 右为default值，若没有则返回该值</span></span><br><span class="line">adict = &#123;<span class="string">'a'</span>: <span class="number">12</span>&#125;</span><br><span class="line">res.update(adict)</span><br></pre></td></tr></table></figure><ul><li><code>pop</code>用来删除键，如果要删除的键不存在，则返回申明的第二个参数（这里是 0）。</li><li><code>update</code>用来更新字典，参数是另一个字典。速度比直接创建新字典快不少。</li></ul><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>我发现我几乎没用过 set，可能作为集合每个元素只能出现一次的性质我没太需要用到。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = set(<span class="string">'spam'</span>)</span><br><span class="line">y = set([<span class="string">'a'</span>, <span class="string">'p'</span>, <span class="string">'b'</span>])</span><br><span class="line"></span><br><span class="line">print(x &amp; y)</span><br><span class="line">print(x | y)</span><br><span class="line">print(x - y)</span><br><span class="line"></span><br><span class="line">y.add(<span class="string">'x'</span>)            </span><br><span class="line">y.update([<span class="number">10</span>,<span class="number">37</span>,<span class="number">42</span>])  </span><br><span class="line">y.remove(<span class="string">'a'</span>)</span><br></pre></td></tr></table></figure><p>上述的功能都很直接，故不赘述。特殊的，如果往 set 里面增加重复的元素，则没有任何事事情会发生，所以可以用来快速移除重复元素；但 set 不会维护输入的顺序，所以不建议在使用 set 的情况下做与遍历顺序相关的操作。一般来说，使用<code>if a in B</code>的操作，set 会比 list 更快。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transformers使用</title>
      <link href="/2020/tech/Huggingface/"/>
      <url>/2020/tech/Huggingface/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本地使用 Huggingface 的 transformer 挺麻烦的，可能之后还会碰到。这里做一个记录。</p><a id="more"></a>  <h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2><p>模型如果标注了<code>from_pretrain(&#39;&#39;)</code>之类的，则需要加载模型。而不幸的是，官方下载模型的渠道很慢，需要使用离线下载方法。下述以 BERT 作为例子，下载步骤如下：</p><ol><li>进入链接，找到<a href="https://huggingface.co/models" target="_blank" rel="noopener">模型</a>的位置。</li><li>找到特殊的模型，进入<a href="https://huggingface.co/bert-base-uncased" target="_blank" rel="noopener">界面</a>。</li><li>在模型下方找到<a href="https://huggingface.co/bert-base-uncased#list-files" target="_blank" rel="noopener">List all files in model</a>。</li><li>选择其中的’config.json; pytorch_model.bin; vocab.txt’下载到同一个文件夹。</li></ol><h2 id="模型载入"><a href="#模型载入" class="headerlink" title="模型载入"></a>模型载入</h2><p>在开始载入以前，需要将上述下载文件放置到一个文件夹下。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\<span class="selector-tag">-</span> <span class="selector-tag">bert-uncased</span></span><br><span class="line">    <span class="selector-tag">config</span><span class="selector-class">.json</span></span><br><span class="line">    <span class="selector-tag">pytorch_model</span><span class="selector-class">.bin</span></span><br><span class="line">    <span class="selector-tag">vocab</span><span class="selector-class">.txt</span></span><br><span class="line"><span class="selector-tag">train</span><span class="selector-class">.py</span></span><br></pre></td></tr></table></figure><p>在 <code>train.py</code> 中的代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> BertTokenizer, BertModel</span><br><span class="line"></span><br><span class="line">path = <span class="string">'D:/LAB/LAB-last/lex-dis/cont-cont/bert-uncased'</span></span><br><span class="line">tokenizer = BertTokenizer.from_pretrained(path)</span><br><span class="line">model = BertModel.from_pretrained(path)</span><br></pre></td></tr></table></figure><p>这里模型载入即结束。使用相对路径不知为何不能成功，需要使用全地址。</p><h2 id="模型使用"><a href="#模型使用" class="headerlink" title="模型使用"></a>模型使用</h2><p>tokenizers 和 model 的使用这里暂时搁置。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyTorch </tag>
            
            <tag> NLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文件管理及自动更新</title>
      <link href="/2020/tech/Hexo/Hexo%E6%96%87%E4%BB%B6%E5%A4%B9%E7%AE%A1%E7%90%86/"/>
      <url>/2020/tech/Hexo/Hexo%E6%96%87%E4%BB%B6%E5%A4%B9%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>关于：</p><ul><li><del>Hexo 文件夹系统（已失效）</del></li><li>Blog 在 Gitee 上自动更新</li></ul><a id="more"></a>  <h2 id="Hexo文件夹系统"><a href="#Hexo文件夹系统" class="headerlink" title="Hexo文件夹系统"></a>Hexo文件夹系统</h2><p><strong>注意，该POST已过时</strong></p><p>在某一个Hexo的版本更新时，其原生地支持了子文件夹的读取，所以本节所表述的方法已不在有必要。</p><p><del>因为最近累积的笔记越来越多了，而 Hexo 原生似乎不支持文件夹操作，故决定建立文件夹系统。它的思路很简单，就是在一个别处的文件夹下完成笔记的记录，在需要更新的时候，使用脚本递归地搜索这些文件夹，将所有的 md 文件全部收集到对应的<code>_posts</code>文件夹下。具体脚本如下：</del></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">ori_path = <span class="string">'../files'</span></span><br><span class="line">dst_path = <span class="string">'../source/_posts/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file</span><span class="params">(path, name, cat)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(path):</span><br><span class="line">        cat_c = cat.copy()</span><br><span class="line">        cat_c.append(name)</span><br><span class="line">        files = os.listdir(path)</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            get_file(path  + <span class="string">'/'</span> + file, file, cat_c)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'.md'</span> <span class="keyword">in</span> name:</span><br><span class="line">            route = <span class="string">'-'</span>.join(cat[<span class="number">1</span>:])</span><br><span class="line">            shutil.copyfile(path, dst_path + route + <span class="string">"-"</span> + name)</span><br><span class="line"></span><br><span class="line">get_file(ori_path, <span class="string">''</span>, [])</span><br><span class="line">print(<span class="string">'Done!'</span>)</span><br></pre></td></tr></table></figure><h2 id="自动更新Gitee"><a href="#自动更新Gitee" class="headerlink" title="自动更新Gitee"></a>自动更新Gitee</h2><p>由于 Gitee 每一次更新 Blog 后需要访问 Gitee 手动完成 deploy。这个过程是在令人不爽。所以添加一个脚本用来自动完成这一步。具体依赖 selenium。</p><h3 id="安装selenium"><a href="#安装selenium" class="headerlink" title="安装selenium"></a>安装selenium</h3><p>进入谷歌商店，进入拓展商店下载 selenium。录制结束后导出为 py 文件。注意在这个过程中，需要将部分路径改为<code>xpath</code>。此外可能有 xpath 不能生效的情况，此时需要在该语句前添加 flush()。最后，由于 deploy 需要一些时间，所以需要使用 time 函数手动停止一些时间以完成 deploy。代码如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.desired_capabilities <span class="keyword">import</span> DesiredCapabilities</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestBlog</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">setup_method</span><span class="params">(self)</span>:</span></span><br><span class="line">    options = webdriver.ChromeOptions()</span><br><span class="line">    self.driver = webdriver.Chrome()</span><br><span class="line">    self.vars = &#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">teardown_method</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.driver.quit()</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">wait_for_window</span><span class="params">(self, timeout = <span class="number">2</span>)</span>:</span></span><br><span class="line">    time.sleep(round(timeout / <span class="number">1000</span>))</span><br><span class="line">    wh_now = self.driver.window_handles</span><br><span class="line">    wh_then = self.vars[<span class="string">"window_handles"</span>]</span><br><span class="line">    <span class="keyword">if</span> len(wh_now) &gt; len(wh_then):</span><br><span class="line">      <span class="keyword">return</span> set(wh_now).difference(set(wh_then)).pop()</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">test_blog</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.driver.get(<span class="string">"https://gitee.com/yoursite/pages"</span>)</span><br><span class="line">    self.driver.set_window_size(<span class="number">1514</span>, <span class="number">984</span>)</span><br><span class="line">    self.driver.find_element(By.LINK_TEXT, <span class="string">"Sign in"</span>).click()</span><br><span class="line">    self.driver.find_element(By.ID, <span class="string">"user_login"</span>).click()</span><br><span class="line">    self.driver.find_element(By.ID, <span class="string">"user_login"</span>).send_keys(<span class="string">"email@foobar.com"</span>)</span><br><span class="line">    self.driver.find_element(By.ID, <span class="string">"user_password"</span>).send_keys(<span class="string">"password"</span>)</span><br><span class="line">    self.driver.find_element(By.CSS_SELECTOR, <span class="string">".two:nth-child(3) label"</span>).click()</span><br><span class="line">    self.driver.find_element(By.NAME, <span class="string">"commit"</span>).click()</span><br><span class="line">    self.driver.refresh()</span><br><span class="line">    self.driver.find_element(By.CSS_SELECTOR, <span class="string">".redeploy-button"</span>).click()</span><br><span class="line">    <span class="keyword">assert</span> self.driver.switch_to.alert.text == <span class="string">"Are you sure to redeploy Gitee Pages?"</span></span><br><span class="line">    self.driver.switch_to.alert.accept()</span><br><span class="line">    time.sleep(<span class="number">60</span>)</span><br><span class="line">  </span><br><span class="line">test = TestBlog()</span><br><span class="line">test.setup_method()</span><br><span class="line">test.test_blog()</span><br><span class="line">test.teardown_method()</span><br></pre></td></tr></table></figure><p>完成上述步骤后，结合之前的自动添加空格以及基本的 hexo 操作，我们就可以全自动地完成文件夹整理及 deploy 操作了。如下：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">C:</span><br><span class="line">cd C:<span class="symbol">\U</span>sers<span class="symbol">\1</span>3808<span class="symbol">\D</span>ocuments<span class="symbol">\J</span>oseph<span class="symbol">\B</span>log<span class="symbol">\u</span>pdate</span><br><span class="line">python update_file.py</span><br><span class="line">cd C:<span class="symbol">\U</span>sers<span class="symbol">\1</span>3808<span class="symbol">\D</span>ocuments<span class="symbol">\J</span>oseph<span class="symbol">\B</span>log</span><br><span class="line">textlint --fix source/_posts/*.md &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; cd C:<span class="symbol">\U</span>sers<span class="symbol">\1</span>3808<span class="symbol">\D</span>ocuments<span class="symbol">\J</span>oseph<span class="symbol">\B</span>log<span class="symbol">\u</span>pdate &amp;&amp; python gitee.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode连接Python调试</title>
      <link href="/2020/tech/VSC/vscode%E8%BF%9E%E6%8E%A5python/"/>
      <url>/2020/tech/VSC/vscode%E8%BF%9E%E6%8E%A5python/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>虽然一直用的是 VSC 和 Python 的组合，但是之前都是硬核 print 调试，并且需要从 Anaconda prompt 进入文件夹操作。确实觉得这个方法很难受，于是开始调整 VSC 连接 Python。中途遇到了不少的坑，这里对其进行一个整理。</p><a id="more"></a>  <h2 id="Anaconda环境"><a href="#Anaconda环境" class="headerlink" title="Anaconda环境"></a>Anaconda环境</h2><p>首先需要安装 Anaconda，Anaconda 会默认安装一个带有 conda 命令的 shell，但是在普通的 cmd 和 powershell 里都不能用这个东西。需要在环境变量中添加下述：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\A</span>naconda3</span><br><span class="line"><span class="symbol">\A</span>naconda3<span class="symbol">\S</span>cripts</span><br><span class="line"><span class="symbol">\A</span>naconda3<span class="symbol">\L</span>ibrary<span class="symbol">\b</span>in</span><br></pre></td></tr></table></figure><p>然后重启，这样可以在 cmd 里使用 Ananconda，例如 conda activate base 等命令。然而在 Powershell 里不知为何不能使用。使用<code>conda init</code>方法宣告无效。</p><h2 id="VSC和Python"><a href="#VSC和Python" class="headerlink" title="VSC和Python"></a>VSC和Python</h2><p>VSC 默认的 Terminal 是 Powershell，所以不能正常使用<code>conda</code>命令，所以需要添加 cmd。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">terminal</span><span class="selector-class">.integrated</span><span class="selector-class">.shell</span><span class="selector-class">.windows</span>": "<span class="selector-tag">C</span>:\\<span class="selector-tag">Windows</span>\\<span class="selector-tag">System32</span>\\<span class="selector-tag">cmd</span><span class="selector-class">.exe</span>",</span><br></pre></td></tr></table></figure><p>这个时候会报找不到 package 的错误，需要在 VSC 中添加 conda 的地址。在 VSC 设置中搜索<code>conda</code>并输入：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\1</span>3808<span class="symbol">\A</span>naconda3<span class="symbol">\S</span>cripts<span class="symbol">\c</span>onda.exe</span><br></pre></td></tr></table></figure><p>同时在设置中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"code-runner.executorMap"</span>: &#123;</span><br><span class="line">  <span class="string">"python"</span>:<span class="string">"<span class="variable">$pythonPath</span> <span class="variable">$fullFileName</span>"</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>根据上述的设置，将 Terminal 变为 cmd，然后即可正常 debug。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows上安装LaTeX</title>
      <link href="/2020/tech/LaTeX/windows%E4%B8%8A%E5%AE%89%E8%A3%85/"/>
      <url>/2020/tech/LaTeX/windows%E4%B8%8A%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-aEcqsnAD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1455701955" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>这不是第一次安装 latex 了，但每次安装都会遇到一些问题，消耗搜索的时间，这次对其作一个整理。</p><a id="more"></a>  <h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先是从 tex live 的官网上下载到最新版的 texlive 并安装。基本上，官网上下到的是一个叫做<code>install-tl-windows.exe</code>的可执行文件。这个文件点开后即可开始下载。下载的时间很长，预计从早上开始下载需要在傍晚才能下载结束。</p><p>不出意外安装结束之后，windows 的“开始”会出现 TexWorks Editor 等等工具。以及 Tex 的路径可以自动加载到系统环境变量中，重启之后即可生效。</p><h2 id="VSCODE"><a href="#VSCODE" class="headerlink" title="VSCODE"></a>VSCODE</h2><p>使用 VSC 可能会比较舒服，但是总有一些小问题。为了在 VSC 中预览 LaTeX，需要下载拓展：LaTeX Workshop。下载结束后 VSC 可以获得高亮 Tex 代码的能力。</p><p>在左侧的工具栏会在选中 Tex 文件时获得新的 LaTeX 标志，其中可以选择编译文件或者在 VSC Tab 中预览文件。</p><p>为了和 VSC 链接，需要打开 VSC 的设置代码，添加下述代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">"latex-workshop.latex.recipes": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">    <span class="attr">"tools"</span>: [</span><br><span class="line">      <span class="string">"xelatex"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"xelatex -&gt; bibtex -&gt; xelatex*2"</span>,</span><br><span class="line">    <span class="attr">"tools"</span>: [</span><br><span class="line">      <span class="string">"xelatex"</span>,</span><br><span class="line">      <span class="string">"bibtex"</span>,</span><br><span class="line">      <span class="string">"xelatex"</span>,</span><br><span class="line">      <span class="string">"xelatex"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">],</span><br><span class="line">"latex-workshop.latex.tools": [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">    <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">    <span class="attr">"args"</span>: [</span><br><span class="line">      <span class="string">"-synctex=1"</span>,</span><br><span class="line">      <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">      <span class="string">"-file-line-error"</span>,</span><br><span class="line">      <span class="string">"-pdf"</span>,</span><br><span class="line">      <span class="string">"%DOC%"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">    <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">    <span class="attr">"args"</span>: [</span><br><span class="line">      <span class="string">"-synctex=1"</span>,</span><br><span class="line">      <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">      <span class="string">"-file-line-error"</span>,</span><br><span class="line">      <span class="string">"%DOC%"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">    <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">    <span class="attr">"args"</span>: [</span><br><span class="line">      <span class="string">"%DOCFILE%"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">],</span><br><span class="line">"latex-preview.command": "xelatex",</span><br><span class="line">"latex-workshop.latex.autoBuild.run": "never"</span><br></pre></td></tr></table></figure><p>上述的代码会将 recipe 加入 build 选项，通过点击编译文件。但在这个设置中，如果文件出现 error，VSC 将会选择终止执行，在终止执行的情况下，虽然可以获得一个 pdf 文件，但是这份文件的一部分内容是有误的，例如 Content 的添加等等，所以这个版本在写作中途可以用来作为参照但并不适合作为最后微调的方法。</p><p>在这个情况下，可以使用 overleaf 或者在文件所在的文件夹下唤起 cmd，使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">xelatex</span> <span class="selector-tag">main</span><span class="selector-class">.tex</span></span><br></pre></td></tr></table></figure><p>忽视中间的错误可以获得生成的文件，在这个文件中 Content 等信息是正常的。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 英文文本成分分析</title>
      <link href="/2020/tech/Python/%E8%8B%B1%E6%96%87%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/"/>
      <url>/2020/tech/Python/%E8%8B%B1%E6%96%87%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了确定句子中从句的位置并将其剥离出来，需要找到一个成分分析的 parser，本文是对使用这个 parser 的一个具体的说明。使用的工具来自 ACL 2018：<a href="https://github.com/nikitakit/self-attentive-parser" target="_blank" rel="noopener">Constituency Parsing with a Self-Attentive Encoder</a>。</p><a id="more"></a>  <h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这个工具可以和 SpaCy 及 NLTK 一同使用。但是在尝试工程中发现和 SpaCy 的联动除了一些问题，会返回不知道如何解决的错误，但是 NLTK 则运行正常。这里记录 NLTK 版本的安装和使用方法。</p><p>首先，这个模型的运行需要先行下载：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line">nltk.download(<span class="string">'punkt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> benepar</span><br><span class="line">benepar.download(<span class="string">'benepar_en'</span>)</span><br></pre></td></tr></table></figure><p>但是这个下载速度非常地慢。希望离线下载需要访问上述 GitHub 链接，找到对应的<code>benepar_en2.zip</code>包下载。（不知道为何，找不到 benepar_en 包）。将这个压缩包放置在<code>C:/Users/.../AppData/Roaming/nltk_data/models/</code>下。punkt 包也能通过访问 nltk_data 找到对应的压缩包，不过这个包需要放置在上面文件夹旁的<code>tokenizers</code>文件夹下并解压。</p><p>这样就完成了这个模型的安装。如果不存在<code>benepar</code>则可以先 install 一次。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> benepar</span><br><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line">parser = benepar.Parser(<span class="string">"benepar_en"</span>)</span><br></pre></td></tr></table></figure><p>由于我们使用了 nltk 的方法，所以不需要引入 SpaCy 的文件。上面的代码可以获得一个 parser，这个 parser 可以用来完成成分分析。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree = parser.parse(context)</span><br></pre></td></tr></table></figure><p>上述获得的 tree 打印出来效果如下：</p><blockquote><p>Added another executive at a big bank: “We were all a little goosey over the weekend trying to forecast what would happen Monday, but it’s been very quiet.”</p></blockquote><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">SINV</span></span><br><span class="line">  (<span class="name">VP</span> (<span class="name">VBN</span> Added))</span><br><span class="line">  (<span class="name">NP</span></span><br><span class="line">    (<span class="name">NP</span> (<span class="name">DT</span> another) (<span class="name">NN</span> executive))</span><br><span class="line">    (<span class="name">PP</span> (<span class="name">IN</span> at) (<span class="name">NP</span> (<span class="name">DT</span> a) (<span class="name">JJ</span> big) (<span class="name">NN</span> bank))))</span><br><span class="line">  (<span class="name">:</span> :)</span><br><span class="line">  (`` ``)</span><br><span class="line">  (<span class="name">S</span></span><br><span class="line">    (<span class="name">S</span></span><br><span class="line">      (<span class="name">NP</span> (<span class="name">PRP</span> We))</span><br><span class="line">      (<span class="name">VP</span></span><br><span class="line">        (<span class="name">VBD</span> were)</span><br><span class="line">        (<span class="name">DT</span> all)</span><br><span class="line">        (<span class="name">ADJP</span> (<span class="name">DT</span> a) (<span class="name">RB</span> little) (<span class="name">JJ</span> goosey))</span><br><span class="line">        (<span class="name">PP</span> (<span class="name">IN</span> over) (<span class="name">NP</span> (<span class="name">DT</span> the) (<span class="name">NN</span> weekend)))</span><br><span class="line">        (<span class="name">S</span></span><br><span class="line">          (<span class="name">VP</span></span><br><span class="line">            (<span class="name">VBG</span> trying)</span><br><span class="line">            (<span class="name">S</span></span><br><span class="line">              (<span class="name">VP</span></span><br><span class="line">                (<span class="name">TO</span> to)</span><br><span class="line">                (<span class="name">VP</span></span><br><span class="line">                  (<span class="name">VB</span> forecast)</span><br><span class="line">                  (<span class="name">SBAR</span></span><br><span class="line">                    (<span class="name">WHNP</span> (<span class="name">WP</span> what))</span><br><span class="line">                    (<span class="name">S</span></span><br><span class="line">                      (<span class="name">VP</span></span><br><span class="line">                        (<span class="name">MD</span> would)</span><br><span class="line">                        (<span class="name">VP</span></span><br><span class="line">                          (<span class="name">VB</span> happen)</span><br><span class="line">                          (<span class="name">PRN</span></span><br><span class="line">                            (<span class="name">-LRB-</span> -LCB-)</span><br><span class="line">                            (<span class="name">NP</span> (<span class="name">NNP</span> Monday))</span><br><span class="line">                            (<span class="name">-RRB-</span> -RCB-)))))))))))))</span><br><span class="line">    (, ,)</span><br><span class="line">    (<span class="name">CC</span> but)</span><br><span class="line">    (<span class="name">S</span></span><br><span class="line">      (<span class="name">NP</span> (<span class="name">PRP</span> it))</span><br><span class="line">      (<span class="name">VP</span> (<span class="name">VBZ</span> <span class="symbol">'s</span>) (<span class="name">VP</span> (<span class="name">VBN</span> been) (<span class="name">ADJP</span> (<span class="name">RB</span> very) (<span class="name">JJ</span> quiet))))))</span><br><span class="line">  (<span class="name">.</span> .))</span><br></pre></td></tr></table></figure><p>返回的 tree 是<code>nltk.tree</code>的结构，对于每一个 node，其子树或为另一个 node，或者为一个 leaf，一个 leaf 就是一个字符串。可以使用：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> type(node) == str:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>判断对象是一个 node 还是一个 leaf，如果是一个 node，则可以仿照 list 的方式对其进行遍历。此外 tree 结构的每一个 node，对应一个 label，调用的方式为：<code>node.label()</code>，可以获得这个节点的标签，在上面的实例中，”S”就是一个标签，标志着其句子成分。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python英文分句</title>
      <link href="/2020/tech/Python/%E8%8B%B1%E6%96%87%E5%88%86%E5%8F%A5/"/>
      <url>/2020/tech/Python/%E8%8B%B1%E6%96%87%E5%88%86%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简记 NLTK 对英文文本进行分句的方法。</p><a id="more"></a>  <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.tokenize <span class="keyword">import</span> sent_tokenize</span><br><span class="line"></span><br><span class="line">sent_tokenize(<span class="string">'this is an example. simply an example.'</span>)</span><br></pre></td></tr></table></figure><p>上述代码返回的结果是包含了两个分句的 list。结束。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSV读写</title>
      <link href="/2020/tech/Python/CSV%E8%AF%BB%E5%8F%96/"/>
      <url>/2020/tech/Python/CSV%E8%AF%BB%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>每一次碰到 CSV 都需要单独搜一次做法，还经常出一些小 bug。这里对最简单的 CSV 读写做一个整理。</p><a id="more"></a> <p>csv 存储的内容如：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'data'</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">'index'</span>: <span class="number">0</span></span><br><span class="line">    &#125;, ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h2 id="读CSV"><a href="#读CSV" class="headerlink" title="读CSV"></a>读CSV</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'example.csv'</span>, <span class="string">'r'</span>, encoding=<span class="string">'unicode_escape'</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">    reader = csv.DictReader(csvfile)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">        print(row[<span class="string">'data'</span>], row[<span class="string">'index'</span>])</span><br></pre></td></tr></table></figure><p>注意 <code>unicode_esxape</code> 是对文件中出现了奇怪字符使用的。如果使用 <code>utf-8</code> 仍不能正常解码的时候可以使用。</p><h2 id="写CSV"><a href="#写CSV" class="headerlink" title="写CSV"></a>写CSV</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">fieldnames = [<span class="string">'data'</span>, <span class="string">'index'</span>]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'example.csv'</span>, <span class="string">'w'</span>, encoding = <span class="string">'utf-8'</span>, newline = <span class="string">''</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">    writer = csv.writer(csvfile)</span><br><span class="line">    writer.writerow(fieldnames)</span><br><span class="line">    writer.writerow([<span class="number">2</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'example.csv'</span>, <span class="string">'w'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">    writer = csv.DictWriter(csvfile, fieldnames)</span><br><span class="line">    writer.writeheader()</span><br><span class="line">    writer.writerow(&#123;<span class="string">'data'</span>: <span class="number">2</span>, <span class="string">'index'</span>: <span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>即第一次使用<code>writerow</code>时，需要先写入第一排域名，然后后面每一排则是根据域名排序的 list。</li><li>使用字典和 list 是等价的，哪个方便用哪个。</li><li>写入的时候一定不能标记为<code>unicode_escape</code>，否则会乱码。使用<code>utf-8</code>就 ok。</li><li>需要加上<code>newline = &#39;&#39;</code>，否则每一行后面会接一行空行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习的操作们</title>
      <link href="/2020/scholar/DL_%E8%B0%83%E5%8F%82/"/>
      <url>/2020/scholar/DL_%E8%B0%83%E5%8F%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>每一次深度模型调参都是让人头疼的东西，总感觉有很多玄学的东西能用，但事实上最后效果都不会太好。这里专门记录一些可能会有影响的调参方法。所以这是一个累积更新的文章。希望之后碰到新的方法和雷区能在这里记下，减少调试时间。</p><a id="more"></a>  <h2 id="有效措施"><a href="#有效措施" class="headerlink" title="有效措施"></a>有效措施</h2><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><p>数据预处理的效果可能比模型的各种调参来得更加直接有效。对于 NLP 任务可能不那么明显，但是对于 CV 或者 DSP 任务却是立竿见影的。</p><h4 id="数据增广"><a href="#数据增广" class="headerlink" title="数据增广"></a>数据增广</h4><p>计算机视觉中常用的方法。基本是对于图片随机翻转、随机截取、添加高斯模糊、随机遮盖等等措施。其中随机截取和随机翻转是一般都有效的，随机遮盖等则不一定。数据增广可以在模型训练中完成，让模型实时更改数据集内容；也可以在训练前就完成增广；两种方法都用也没有问题。</p><p>对于图片的数据增广方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> tfs</span><br><span class="line">transform = tfs.Compose([</span><br><span class="line">    tfs.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 先调整图片大小至256x256</span></span><br><span class="line">    tfs.RandomCrop((<span class="number">224</span>, <span class="number">224</span>)),  <span class="comment"># 再随机裁剪到224x224</span></span><br><span class="line">    tfs.RandomHorizontalFlip(),  <span class="comment"># 随机的图像水平翻转，通俗讲就是图像的左右对调</span></span><br><span class="line">    tfs.RandomRotation(<span class="number">5</span>),</span><br><span class="line">    tfs.ToTensor(),</span><br><span class="line">    tfs.Normalize((<span class="number">0.485</span>, <span class="number">0.456</span>, <span class="number">0.406</span>), (<span class="number">0.229</span>, <span class="number">0.224</span>, <span class="number">0.2225</span>)),  <span class="comment"># 维度和图像的channel相关</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>调用时使用即可：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = transform(img)</span><br></pre></td></tr></table></figure></p><h4 id="数据标准化-归一化"><a href="#数据标准化-归一化" class="headerlink" title="数据标准化/归一化"></a>数据标准化/归一化</h4><p>即使是非常简单的数据标准化/归一化，就能取得显著的 performance 提高以及训练速度的大幅度提升。对于图像信息，可以使用灰度图均衡化，而对于数字信号或者其他信息，则可以使用 MinMax，标准化众多方法。这个对于模型训练速度的提升可能是数量级上。</p><p>但无论如何，数据标准化几乎应当是数据预处理的必要操作，绝对不能跳过。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直方图均衡化</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.equalizeHist(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准化 - 对于一维数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">std</span><span class="params">(data)</span>:</span></span><br><span class="line">    mu = np.mean(data)</span><br><span class="line">    sigma = np.std(data)</span><br><span class="line">    <span class="keyword">return</span> (data - mu) / sigma</span><br></pre></td></tr></table></figure><h3 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h3><h4 id="损失函数权重"><a href="#损失函数权重" class="headerlink" title="损失函数权重"></a>损失函数权重</h4><p>对于普通的损失函数，对于不同的类加以相同的权进行处理。但是对于类分别不均的训练集/测试集，可以轻微调整模型的损失函数权重，一般权重添加方法是按照训练集的比例强行加权。一般这样就能获得略好的效果。但是还有一定的调整空间。事实上使用这个方法对于一些数据分布不均的方法有非常明显的效果。不过如果实在分布不均的话，可以考虑数据预处理方法解决。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weight = torch.Tensor([<span class="number">1</span>, <span class="number">0.8</span>])</span><br><span class="line">lossfun = nn.CrossEntropyLoss(weight = weight)</span><br></pre></td></tr></table></figure><p>如果使用 cuda 训练，还应该申明<code>.cuda()</code>。</p><h4 id="学习率衰减"><a href="#学习率衰减" class="headerlink" title="学习率衰减"></a>学习率衰减</h4><p>原来习惯性用 Adam 也就没有再关心过学习率的问题，但事实上学习率仍然是有影响的。使用过小的学习率前期的训练时间过长而且容易进入一个不太好的局部最优解，相反使用大的学习率在前期能够势如破竹。（甚至是数量级的提升）但是训练到后期的模型 performan 却需要更小的学习率，所以这里引入学习率衰减的方法。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">adjust_learning_rate</span><span class="params">(optimizer, epoch)</span>:</span></span><br><span class="line">    lr = <span class="number">1e-4</span> * (<span class="number">0.4</span> ** (epoch // <span class="number">8</span>))</span><br><span class="line">    <span class="keyword">for</span> param_group <span class="keyword">in</span> optimizer.param_groups:</span><br><span class="line">        param_group[<span class="string">'lr'</span>] = lr</span><br><span class="line">adjust_learning_rate(optimizer, epoch)</span><br></pre></td></tr></table></figure><p>传入的 optimizer 参数就是 PyTorch 的模型。对于 Adam 模型，建议使用 $1e^{-4}$ 作为起始训练速率。</p><h2 id="不稳定措施"><a href="#不稳定措施" class="headerlink" title="不稳定措施"></a>不稳定措施</h2><h3 id="添加模型的全连接层"><a href="#添加模型的全连接层" class="headerlink" title="添加模型的全连接层"></a>添加模型的全连接层</h3><p>添加全连接层会大幅度增加模型的复杂度以及参数量，强制减低模型的训练速度，但而提高模型的过拟合能力。所以增加全连接层方法在数据量不足以支撑的情况下是绝对不推荐的。但是有的时候能发挥一定的作用。</p><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p>Dropout 不是万能的方法。例如对于最后的分类器叠加 Dropout 反而会使模型的表现变得滑稽。Dropout 的添加是需要通过反复实验的。不过建议在模型的一开始不要使用 Dropout，因为模型自身的能力可能就不够，不能够很好地拟合训练数据。而且增加 Dropout 增加了训练时间，对于判断模型的强度也是不利的。在实验的最后发现过拟合严重可以考虑尝试使用 Dropout 方法。</p><h3 id="Multi-task"><a href="#Multi-task" class="headerlink" title="Multi-task"></a>Multi-task</h3><p>这是一个很不确定的东西。Multi-task 的效果随着设计的多任务而变化。事实上，在我使用 Multi-task 的情况下，几乎都没有得到明显的提升，有的时候甚至会拖后腿使模型的能力下降。所以 Multi-task 是需要仔细思考后使用的。</p><h3 id="加载预训数据"><a href="#加载预训数据" class="headerlink" title="加载预训数据"></a>加载预训数据</h3><p>对于 NLP 任务，使用预训参数是必要的，特别是对于 BERT 等模型，即使固定参数，只训练后面的部分也能获得很好的效果。但是对于 CV 任务这个效果却不是一定的。例如在 COVID-19 分类任务中，我使用了 ResNet18 作为一个模型，并加载了 PyTorch 的预训结果，获得了训练速度的显著提升；然而在语谱图分类时，使用预训的结果并没有明显的优势。</p><p>所以模型的训练对象和预训的数据集应该有一定的共同之处时才能够发挥作用。语谱图是完全和 ImageNet 不同的东西，所以不能发挥作用也是在预期之中的。</p><h2 id="基本无效措施"><a href="#基本无效措施" class="headerlink" title="基本无效措施"></a>基本无效措施</h2>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CV：深度卷积神经网络模型及调参</title>
      <link href="/2020/scholar/DL_DCNN/"/>
      <url>/2020/scholar/DL_DCNN/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为连续做了两个使用 CNN 网络的模型训练，所以这里单独开一个记录 CNN 调参的心路历程。</p><a id="more"></a>  <h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>经过众多测试，得到的通用模型如下。基本思想是深的神经网络以及小的卷积核，并且卷积核的 channel 逐渐增加的机制。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperNaiveModel</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(SuperNaiveModel, self).__init__()</span><br><span class="line">        self.conv0 = nn.Sequential(</span><br><span class="line">            torch.nn.Conv2d(<span class="number">1</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">2</span>, padding=<span class="number">3</span>),</span><br><span class="line">            torch.nn.BatchNorm2d(<span class="number">64</span>, momentum=<span class="number">0.1</span>),            </span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">        )</span><br><span class="line">        self.conv1 = torch.nn.Sequential(</span><br><span class="line">            torch.nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">            torch.nn.Conv2d(<span class="number">128</span>, <span class="number">128</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">            torch.nn.MaxPool2d(stride=<span class="number">2</span>, kernel_size=<span class="number">2</span>))</span><br><span class="line">        self.conv2 = torch.nn.Sequential(</span><br><span class="line">            torch.nn.Conv2d(<span class="number">128</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),            </span><br><span class="line">            torch.nn.Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">            torch.nn.MaxPool2d(stride=<span class="number">2</span>, kernel_size=<span class="number">2</span>))</span><br><span class="line">        self.conv20 = torch.nn.Sequential(</span><br><span class="line">            torch.nn.Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),            </span><br><span class="line">            torch.nn.Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">            torch.nn.MaxPool2d(stride=<span class="number">2</span>, kernel_size=<span class="number">2</span>))</span><br><span class="line">        self.conv3=torch.nn.Sequential(</span><br><span class="line">            torch.nn.Conv2d(<span class="number">256</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.BatchNorm2d(<span class="number">512</span>, momentum=<span class="number">0.1</span>),            </span><br><span class="line">            torch.nn.ReLU(),            </span><br><span class="line">            torch.nn.Conv2d(<span class="number">512</span>, <span class="number">512</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">1</span>),</span><br><span class="line">            torch.nn.BatchNorm2d(<span class="number">512</span>, momentum=<span class="number">0.1</span>),</span><br><span class="line">            torch.nn.ReLU(),</span><br><span class="line">            torch.nn.MaxPool2d(stride=<span class="number">2</span>, kernel_size=<span class="number">2</span>))</span><br><span class="line">        self.dense = torch.nn.Sequential(</span><br><span class="line">            torch.nn.Linear(<span class="number">512</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">20</span>),</span><br><span class="line">            nn.LogSoftmax(dim=<span class="number">1</span>)</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x = x.reshape(x.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">128</span>, <span class="number">128</span>).float()</span><br><span class="line">        x = self.conv0(x)</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.conv20(x)</span><br><span class="line">        x = self.conv3(x)</span><br><span class="line">        x = x.view(x.shape[<span class="number">0</span>], <span class="number">512</span> * <span class="number">4</span> * <span class="number">4</span>)</span><br><span class="line">        x = self.dense(x)</span><br><span class="line">        <span class="keyword">return</span> x1</span><br></pre></td></tr></table></figure><h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><p>由于训练资源不够，所以使用一个 5x5 的卷积核代替了应有的两个 3x3 卷积核链接的效果。根据 VGG，<strong>连续使用两个 3x3</strong>可能效果会好一些。</p><p>Batchnorm 是一个玄学的东西，它的功能并不如预期一样稳定，并且没有必要在没一个网络后都接一个 BN 层。事实上，根据实验，在模型的最开始和最后一层添加 BN 层的效果是明显的。ReLU 层作为非线性化的方法，几乎是必须的。</p><p>此外，过多的全连接层是不利的，每多增一个全连接层会对模型造成一定的影响。预测的原因是由于数据量不够支撑全连接层的泛化性，导致容易过拟合，泛化性差，反而不如一层全连接。所以全连接层越多越好不是绝对的。</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> CV </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch方法：DataSet</title>
      <link href="/2020/tech/PyTorch_DataSet/"/>
      <url>/2020/tech/PyTorch_DataSet/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简单记录一下如何使用 PyTorch 的 DataSet 及 DataLoader 功能。</p><a id="more"></a>  <p>DataSet 的使用通过继承 DataSet 类完成，并在此基础上需要构造三个特殊函数。下例为使用 DataSet，通过访问 json 文件获取数据内容，然后在 gititem 函数中获取数据并返回的例子。</p><h2 id="DataSet"><a href="#DataSet" class="headerlink" title="DataSet"></a>DataSet</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataSet</span><span class="params">(torch.utils.data.Dataset)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, train_or_valid, transform, path)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        file = open(<span class="string">'data/dataset.json'</span>, <span class="string">'r'</span>)</span><br><span class="line">        data = json.load(file)</span><br><span class="line">        self.datalist = data[train_or_valid]</span><br><span class="line">        self.path = path</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, index)</span>:</span></span><br><span class="line">        name = self.datalist[index][<span class="number">0</span>]</span><br><span class="line">        img = Image.open(self.path + name)</span><br><span class="line">        label = self.datalist[index][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">"img"</span>: img, <span class="string">"label"</span>: label&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.datalist)</span><br></pre></td></tr></table></figure><p>上述返还的是一个数据字典。</p><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>依旧使用上述的例子。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trainset = DataSet(<span class="string">'train'</span>, transform_train, normal_path)</span><br></pre></td></tr></table></figure><h2 id="DataLoader"><a href="#DataLoader" class="headerlink" title="DataLoader"></a>DataLoader</h2><p>DataLoader 是 PyTorch 用来调取 DataSet 的一个类，其声明和使用如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line"></span><br><span class="line">trainloader = data.DataLoader(trainset, batch_size = batch_sz, shuffle = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>第一个参数是上述生成的 DataSet，后面如同表述。</p><p>但往往上述的结构由于数据不规整不能满足要求，需要自己定义 Batch 函数。如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">padding</span><span class="params">(data)</span>:</span></span><br><span class="line">    src_len = []</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> data:</span><br><span class="line">        src_len.append(p[<span class="string">'wav'</span>].shape[<span class="number">1</span>])</span><br><span class="line">    src_pad = torch.zeros(len(data), data[<span class="number">0</span>][<span class="string">'wav'</span>].shape[<span class="number">0</span>], max(src_len))</span><br><span class="line">    tgt = torch.zeros(len(data))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">        p = data[i]</span><br><span class="line">        end = src_len[i]</span><br><span class="line">        src_pad[i, :, -end:] = p[<span class="string">'wav'</span>]</span><br><span class="line">        tgt[i] = p[<span class="string">'label'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'wav'</span>: src_pad, <span class="string">'label'</span>: tgt&#125;</span><br><span class="line"></span><br><span class="line">validloader = data.DataLoader(validset, batch_size = batch_sz, shuffle = <span class="literal">False</span>, collate_fn = padding)</span><br></pre></td></tr></table></figure><p>返回的也是字典，并会使用 padding 函数。</p><h2 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h2><p>上面完成了预先代码的构建，最后是调用的步骤：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> idx, samples <span class="keyword">in</span> enumerate(trainloader):</span><br><span class="line">    wavs, labels = samples[<span class="string">'wav'</span>], samples[<span class="string">'label'</span>]</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>返回的 samples 就是前面 padding 的结果，可以对此进行修改，例如保留原有的长度信息等等。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyTorch </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch常用训练框架</title>
      <link href="/2020/tech/PyTorch_%E5%B8%B8%E7%94%A8%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/tech/PyTorch_%E5%B8%B8%E7%94%A8%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>现在模型建的比较多了，因此也形成了一套成熟的流程，这里简单的记述一下常用的模型构建的方法，为了后续改进。</p><a id="more"></a>  <h2 id="文件夹架构"><a href="#文件夹架构" class="headerlink" title="文件夹架构"></a>文件夹架构</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\-</span> model</span><br><span class="line">    dataset.py</span><br><span class="line"><span class="string">\-</span> data</span><br><span class="line">    <span class="string">\-</span> images</span><br><span class="line">    <span class="string">\-</span> ori_data</span><br><span class="line"><span class="string">\-</span> preprocess</span><br><span class="line"><span class="string">\-</span> utils</span><br><span class="line">train.py</span><br><span class="line">config.py</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure><p><code>config.py</code> 保存 train 以及预处理中的超参，但是不建议使用该文件保存模型的超参（除非整个调整结束）。  <code>utils.py</code> 保留操作函数，用来辅助预处理以及数据分析等等功能。<code>data</code>中存储原始数据以及处理后的数据，部分时候有中间生成数据。<code>images</code>保存为了报告生成的图片。</p><p>生成上述结构代码。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">(paths)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> paths:</span><br><span class="line">    folder = os.path.exists(path) </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> folder:</span><br><span class="line">    os.makedirs(path)   </span><br><span class="line"></span><br><span class="line">mkdir([<span class="string">'model'</span>, <span class="string">'data'</span>, <span class="string">'preprocess'</span>, <span class="string">'utils'</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'train.py'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'config.py'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'README.md'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="Import"><a href="#Import" class="headerlink" title="Import"></a>Import</h2><p>常用的 import 库文件。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> precision_score</span><br><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> tfs</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> pickle <span class="keyword">as</span> pk</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><h3 id="自己的模型"><a href="#自己的模型" class="headerlink" title="自己的模型"></a>自己的模型</h3><p>常用的 Model 架构：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaiveModel</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(NaiveModel, self).__init__()</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><h3 id="预训的模型"><a href="#预训的模型" class="headerlink" title="预训的模型"></a>预训的模型</h3><p>使用一些预训的模型使用。有两种魔改方法，其一是替代原模型中的部分层，另一部分是取出模型的某些部分和自己的其他网络组合。</p><p><strong>替换层方法</strong></p><p>以 vgg16 的替换方法为例。其中可以通过<code>model.features._modules[]</code>拿到对应的层，其中输入为 <code>print(model)</code>产生的输出。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VGG</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(VGGTorch, self).__init__()</span><br><span class="line">        model = torchvision.models.vgg16(pretrained = <span class="literal">False</span>)</span><br><span class="line">        init = torch.load(<span class="string">'data/vgg16-397923af.pth'</span>)</span><br><span class="line">        model.load_state_dict(init)</span><br><span class="line">        conv2d = nn.Conv2d(<span class="number">1</span>, <span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=(<span class="number">2</span>, <span class="number">2</span>), padding=(<span class="number">3</span>, <span class="number">3</span>), bias=<span class="literal">False</span>)</span><br><span class="line">        model.features._modules[<span class="string">'0'</span>] = conv2d</span><br><span class="line">        model.classifier = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">25088</span>, <span class="number">20</span>),</span><br><span class="line">            nn.LogSoftmax(dim=<span class="number">1</span>)</span><br><span class="line">        )</span><br><span class="line">        self.model = model </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x = x.reshape(x.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">128</span>, <span class="number">128</span>).float()</span><br><span class="line">        x = self.model(x)</span><br><span class="line">        <span class="keyword">return</span> x, x</span><br></pre></td></tr></table></figure><p>上面可以通过<code>pretrain = True</code>拿到预训参数，但是下载很慢，可以复制链接自行离线下载然后通过上述方法导入。</p><p><strong>重新组合方法</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">下面是使用resnet18作为下采样层的UNet模型，通过将ResNet的层取出获得最终模型。其中还使用了预训参数。</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Unet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n_class)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self.base_model = torchvision.models.resnet18(pretrained = <span class="literal">True</span>)</span><br><span class="line">        self.base_layers = list(self.base_model.children())</span><br><span class="line">        self.layer1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">1</span>, <span class="number">64</span>, kernel_size=(<span class="number">7</span>, <span class="number">7</span>), stride=(<span class="number">2</span>, <span class="number">2</span>), padding=(<span class="number">3</span>, <span class="number">3</span>), bias=<span class="literal">False</span>),</span><br><span class="line">            self.base_layers[<span class="number">1</span>],</span><br><span class="line">            self.base_layers[<span class="number">2</span>])</span><br><span class="line">        self.layer2 = nn.Sequential(*self.base_layers[<span class="number">3</span>:<span class="number">5</span>])</span><br><span class="line">        self.layer3 = self.base_layers[<span class="number">5</span>]</span><br><span class="line">        self.layer4 = self.base_layers[<span class="number">6</span>]</span><br><span class="line">        self.layer5 = self.base_layers[<span class="number">7</span>]</span><br><span class="line">        self.decode4 = Decoder(<span class="number">512</span>, <span class="number">256</span>+<span class="number">256</span>, <span class="number">256</span>)</span><br><span class="line">        self.decode3 = Decoder(<span class="number">256</span>, <span class="number">256</span>+<span class="number">128</span>, <span class="number">256</span>)</span><br><span class="line">        self.decode2 = Decoder(<span class="number">256</span>, <span class="number">128</span>+<span class="number">64</span>, <span class="number">128</span>)</span><br><span class="line">        self.decode1 = Decoder(<span class="number">128</span>, <span class="number">64</span>+<span class="number">64</span>, <span class="number">64</span>)</span><br><span class="line">        self.decode0 = nn.Sequential(</span><br><span class="line">            nn.Upsample(scale_factor=<span class="number">2</span>, mode=<span class="string">'bilinear'</span>, align_corners=<span class="literal">True</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">64</span>, <span class="number">32</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>, bias=<span class="literal">False</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">            )</span><br><span class="line">        self.conv_last = nn.Conv2d(<span class="number">64</span>, n_class, <span class="number">1</span>)</span><br><span class="line">        self.fc = nn.Sequential(</span><br><span class="line">            nn.Linear(n_class * <span class="number">224</span> * <span class="number">224</span>, <span class="number">1024</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.Dropout(<span class="number">0.4</span>),</span><br><span class="line">            nn.Linear(<span class="number">1024</span>, <span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><h2 id="Train"><a href="#Train" class="headerlink" title="Train"></a>Train</h2><p>下面是简化的框架。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> precision_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"><span class="keyword">import</span> pickle <span class="keyword">as</span> pk</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> tfs</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model.dataset <span class="keyword">import</span> DataSet</span><br><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line"><span class="keyword">from</span> model.naive_model <span class="keyword">import</span> NaiveModel</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(args)</span>:</span></span><br><span class="line">    cuda = torch.cuda.is_available()</span><br><span class="line">    <span class="keyword">if</span> cuda:</span><br><span class="line">        print(<span class="string">"CUDA is prepared"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># dataset</span></span><br><span class="line">    trainset = DataSet(<span class="string">'train'</span>, transform_train, normal_path)</span><br><span class="line">    validset = DataSet(<span class="string">'valid'</span>, transform_valid, normal_path)</span><br><span class="line">    trainloader = data.DataLoader(trainset, batch_size = batch_sz, shuffle = <span class="literal">True</span>)</span><br><span class="line">    validloader = data.DataLoader(validset, batch_size = batch_sz, shuffle = <span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># model</span></span><br><span class="line">    model = NaiveModel(batch_sz, <span class="number">224</span>)</span><br><span class="line">    <span class="keyword">if</span> cuda:</span><br><span class="line">        model = model.cuda()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># lossfunc and optim</span></span><br><span class="line">    lossfun = nn.CrossEntropyLoss()</span><br><span class="line">    optimizer = torch.optim.Adam(model.parameters())</span><br><span class="line">    </span><br><span class="line">    accs = []</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(epochs):</span><br><span class="line">        <span class="comment"># valid</span></span><br><span class="line">        <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">            preds, labels = [], []</span><br><span class="line">            <span class="keyword">for</span> idx, samples <span class="keyword">in</span> enumerate(validloader):</span><br><span class="line">                img, label = samples[<span class="string">'img'</span>], samples[<span class="string">'label'</span>]        </span><br><span class="line">                <span class="keyword">if</span> cuda:</span><br><span class="line">                    img = img.cuda()</span><br><span class="line">                pred = model.eval(img, labels)</span><br><span class="line">                preds.append(pred)</span><br><span class="line">                labels.append(label)</span><br><span class="line">            torch.save(model.state_dict(), model_path)</span><br><span class="line">            labels = np.concatenate(labels, axis = <span class="number">0</span>).astype(int)</span><br><span class="line">            preds = np.concatenate(preds, axis = <span class="number">0</span>)</span><br><span class="line">            report = classification_report(labels, preds)</span><br><span class="line">            print(report)</span><br><span class="line">            acc = precision_score(labels, preds, average = <span class="string">'micro'</span>)</span><br><span class="line">            print(<span class="string">"Precision: &#123;&#125;"</span>.format(acc))</span><br><span class="line">            accs.append(acc)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># train</span></span><br><span class="line">        <span class="keyword">for</span> idx, samples <span class="keyword">in</span> enumerate(trainloader):</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            imgs, labels = samples[<span class="string">'img'</span>], samples[<span class="string">'label'</span>]</span><br><span class="line">            <span class="keyword">if</span> cuda:</span><br><span class="line">                labels = labels.cuda()</span><br><span class="line">                imgs = imgs.cuda()</span><br><span class="line">            </span><br><span class="line">            pred = model(imgs)</span><br><span class="line">            loss = lossfun(pred, labels.long())</span><br><span class="line">            loss.backward()</span><br><span class="line">            optimizer.step()</span><br><span class="line">            print(<span class="string">'loss: &#123;&#125;'</span>.format(loss), end = <span class="string">'\r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">'--pretrain'</span>, type=str, default=<span class="string">'yes'</span>,</span><br><span class="line">                        help=<span class="string">'if pre-train'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'--finetune'</span>, type=str, default=<span class="string">'yes'</span>,</span><br><span class="line">                        help=<span class="string">'if finetune'</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    </span><br><span class="line">    train(args)</span><br></pre></td></tr></table></figure><h2 id="模型保存及预加载"><a href="#模型保存及预加载" class="headerlink" title="模型保存及预加载"></a>模型保存及预加载</h2><p><strong>保存</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">torch.save(<span class="keyword">model</span>.state_dict(), PATH)</span><br><span class="line"> </span><br><span class="line"># example</span><br><span class="line">torch.save(<span class="keyword">model</span>.state_dict(),<span class="string">'model.pth'</span>)</span><br></pre></td></tr></table></figure><p><strong>加载</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">model.load<span class="constructor">_state_dict(<span class="params">torch</span>.<span class="params">load</span>(PATH)</span>)</span><br><span class="line"></span><br><span class="line"># example</span><br><span class="line">model.load<span class="constructor">_state_dict(<span class="params">torch</span>.<span class="params">load</span>('<span class="params">model</span>.<span class="params">pth</span>')</span>)</span><br></pre></td></tr></table></figure><p>这样就是整个模型的最基础框架搭建。但事实上一个任务真正困难的是在数据预处理策略和最后的调参上，这些就放在别的地方补充了吧。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> PyTorch </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观佛记</title>
      <link href="/2020/essay/%E6%B8%B8%E8%AE%B0/%E8%A7%82%E4%BD%9B%E8%AE%B0/"/>
      <url>/2020/essay/%E6%B8%B8%E8%AE%B0/%E8%A7%82%E4%BD%9B%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-RLSNVqsM" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="17685905" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>虽说已经过了快两个月了，还是想记下那个不那么特殊的旅途.2020 年劳动节的峨眉山之行。虽说确实没有太多值得大书特书的细节，但就算当作流水账一样地记下来也是不错的。</p><a id="more"></a>  <p>事实上这个旅程是我从哈尔滨回来以后就一直在考虑的，然而最终因为疫情的原因没能在春节附近付诸实践，实在可惜。然情况总是纷繁复杂，居然到了五一节，我们这些学生还是滞留在自己的窝里面没有返校。五一节的几日长假不得不使人再次萌生了造访峨眉的想法，于是简单组织一通后和几个高中同学一同出发了。</p><p>一早起来，大概九点到了峨眉山脚。当时正逢疫情还在尾声的时候，每一个关卡都要检查健康码之类的东西。不过没有造成太大的阻碍，我们进山了。在山门口买了个舒适的竹杖。（这确实是救命的东西，不是打猴子，而是作为另一条腿。）一路上人不算太多，环境也很清幽。走走停停就能看见小亭子之类的东西。风景很难说是绝美，不过与城市的氛围自然还是迥异。最开始沿着山谷走，能一直看见下面流淌的透明小溪。这种景色总给我一种我曾经来过的感觉，可能是这样的风景实在是太多了吧。</p><p>一路上碰到一个山大王抢恰巧同行的一个小团队成员的小挎包。还恋恋不舍地跟了很久，但什么都没有抢到。大概是在仙峰寺附近，我的腿开始出现抽筋的症状，本来是一只腿，后来不幸另一条腿也开始抽筋。大概像是一条很粗的虫子在筋肉里穿梭的感觉。虽然感觉到疼但还是得往上走吧，一日登上峨眉算不上那么容易的事情。中间反复了几次，但通过休息和压腿算是稳定了下来。</p><p>然后仙峰寺之后是令人崩溃的上上下下。每一次站在一个山头，就看见另一个山头的小黑顶庙子，意识到那是下一个目的地的同时，得知需要先下山然后再爬到那里，是真的想骂上几句脏话，仿佛获得了前功尽弃的挫败感。这一路上的风景也相当的一般，没有想象中的那种壮美，也没有山大王之流的助兴。</p><p>到九岭冈的时候，整个队伍已经相当疲惫了。具体什么时候到那里的我已经记不确切了，但那个时候着实是怀着是否能在天黑前登上雷洞坪的担忧。后面我奇迹般地感觉自己的小腿抽筋消歇了，在钻天坡一路向上中居然越战越勇。大家根据情况不同，整个队伍也逐渐拉长。当时我在第二位，前面和后面的同学都不在了。我看见了洗象池的屋顶的时候，看见了一个宽阔的平台，旁边的围栏上立着两只互相搔毛的猴子。然后我看见了洗象池几个字和后面的一列陡峭的阶梯。我的两腿突然传来一阵剧痛，然后我就地跪了下去。据后面同学说，是听见了我的惨叫声。不过总之来到了一个新的节点。</p><p>后面的阎王坡实在震撼人心，长度和陡度都远超前面的钻天坡。不久后就走进了夜路，看见道路两旁藏青色的影子往前进。当到了宾馆吃上晚饭的时候已经是 10 点了。那个时候也没什么胃口，手机没电了，可能只是想坐一坐了吧。</p><p>中间的小卖部密集且良心。冰粉实在是天赐美物，中途还买了瓶可乐刺激刺激，但是也怀疑是这个导致体内酸性上升，以致抽筋。小竹棍也是必备之物，后面的路途可能都是靠支着这个小竹棍一点点往上挪的吧。</p><p>好歹，这是第一次完成了一个 41km 的旅途，这是我来没有想过的东西。我原来想峨眉可能就 20km 吧，我能行。但……总之算是问题不大。第二日起床去金顶看日出。日出确实是壮丽的。伴随着众多举着相机的人的欢呼声，像高邮咸鸭蛋那般的红色太阳从云层的那端慢慢露出来，透露出整个咸鸭蛋黄的金橙颜色，越发地诱人。然后天空呈现出一种绚丽的金色，最后慢慢变成普通闪耀着金光和大菩萨像一样颜色的太阳了。</p><p>我不太清楚自己是怎么爬上这个山的。我只记得我在路途的最后一程，我发自内心地想，如果这一路哪怕有一个可以放弃的地方，我可能就结束在那里了吧。往上走的原因只是既不能停下来，也不能回头罢了，和意志力什么的是无甚关联的东西。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python常用系统操作及文件操作</title>
      <link href="/2020/tech/Python/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/tech/Python/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-GHfhYFMi" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="465149196" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>在预处理文件以及训练模式时经常用到一个文件操作，这里稍加整理。</p><a id="more"></a>  <h2 id="os"><a href="#os" class="headerlink" title="os"></a>os</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br></pre></td></tr></table></figure><p>OS 操作很常用，用于获取文件夹之类的操作。主要使用<code>os</code>和<code>shutil</code>两个库文件。</p><h3 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">os.path.exists(path)</span><br><span class="line">os.path.isdir(path)</span><br><span class="line">os.path.isfile(path)</span><br><span class="line">files = os.listdir(path)</span><br></pre></td></tr></table></figure><p>判断路径是否存在，是一个文件夹还是一个文件。对于一个文件夹可以继续使用 <code>listdir</code> 获得文件内容</p><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">(path)</span>:</span></span><br><span class="line"> </span><br><span class="line">    path=path.strip()</span><br><span class="line">    path=path.rstrip(<span class="string">"\\"</span>)</span><br><span class="line"> </span><br><span class="line">    isExists=os.path.exists(path)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isExists:</span><br><span class="line">        os.makedirs(path) </span><br><span class="line">        print(<span class="string">'OK!'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Existed!)</span></span><br><span class="line"><span class="string">        return False</span></span><br></pre></td></tr></table></figure><h3 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os.remove(path)</span><br><span class="line">os.rmdir(path)        <span class="comment">#仅能删除空文件夹</span></span><br><span class="line">shutil.rmtree(path)   <span class="comment">#递归删除所有内容</span></span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><p>对于文件夹和文件的操作方法是一样的。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.rename(<span class="string">"test"</span>,<span class="string">"test1"</span>)    </span><br><span class="line">os.rename(<span class="string">"test.txt"</span>,<span class="string">"test1.txt"</span>)</span><br></pre></td></tr></table></figure><h3 id="复制和移动"><a href="#复制和移动" class="headerlink" title="复制和移动"></a>复制和移动</h3><p>需要使用 <code>shutil</code> 的库文件操作。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shutil.copyfile(<span class="string">"foo.txt"</span>,<span class="string">"bar.txt"</span>)  <span class="comment"># file only</span></span><br><span class="line">shutil.copytree(<span class="string">"foo"</span>,<span class="string">"bar"</span>)          <span class="comment"># dir only</span></span><br><span class="line">shutil.copy(<span class="string">"foo"</span>,<span class="string">"bar"</span>)              <span class="comment"># both</span></span><br><span class="line">shutil.move(<span class="string">"foo"</span>,<span class="string">"bar"</span>)</span><br></pre></td></tr></table></figure><ul><li>上述的文件的复制方法，存在覆盖能力。文件夹的复制方法则不允许在目标地址存在相应文件夹。</li><li>如果调用<code>.copy()</code>，输入为一个文件和一个文件夹，则会将文件复制入文件夹中。</li><li><code>.move()</code>细节和<code>.copy()</code>相同</li></ul><h2 id="文件读写操作"><a href="#文件读写操作" class="headerlink" title="文件读写操作"></a>文件读写操作</h2><h3 id="基本读写"><a href="#基本读写" class="headerlink" title="基本读写"></a>基本读写</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(path, <span class="string">'w'</span>, encoding = <span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">'foobar!'</span>)</span><br><span class="line"><span class="keyword">with</span> open(path, <span class="string">'r'</span>, encoding = <span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    lines = f.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>模式：</p><div class="table-container"><table><thead><tr><th>参数</th><th>效果</th></tr></thead><tbody><tr><td>w</td><td>写文件</td></tr><tr><td>r</td><td>读文件</td></tr><tr><td>a</td><td>追加文件</td></tr></tbody></table></div><h3 id="特殊：json"><a href="#特殊：json" class="headerlink" title="特殊：json"></a>特殊：json</h3><p>JSON 文件是常用的格式，为了方便存储字典型结构的最优选择。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'dataset.json'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'dataset.json'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(dataset, f)</span><br></pre></td></tr></table></figure><h3 id="特殊：pickle"><a href="#特殊：pickle" class="headerlink" title="特殊：pickle"></a>特殊：pickle</h3><p>pickle 常用来保存二进制数据结构。基本上是什么都能存。不过对于 PyTorch，还是建议使用 torch 自带的 save 函数，不然 torch 会报 warning。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle <span class="keyword">as</span> pk</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'dataset.pk'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pk.dump(data, f)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'dataset.pk'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = pk.load(f)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 脚本工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python图像处理</title>
      <link href="/2020/tech/Python/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
      <url>/2020/tech/Python/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这个是对于 COVID-19 分类任务结束的一个回顾。第一次完成这个图像相关的任务，基本上是一头雾水。在这一次过程中遇到了很多处理的方法，在这里列出来，方便后面使用。</p><a id="more"></a>  <h2 id="读取以及格式转换"><a href="#读取以及格式转换" class="headerlink" title="读取以及格式转换"></a>读取以及格式转换</h2><p>图像处理一般使用 OpenCV 及 PIL.Image 两个库。</p><p><strong>导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br></pre></td></tr></table></figure><p><strong>图像的读取与保存</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">"pic.jpg"</span>， flags)</span><br><span class="line">cv2.imwrite(filename, img)</span><br><span class="line"></span><br><span class="line">img = Image.open(filename)</span><br><span class="line">img.save(filename)</span><br></pre></td></tr></table></figure><p>关于 flags：</p><ul><li>cv2.IMREAD_COLOR:读取一副彩色图片，图片的透明度会被忽略，默认为该值，实际取值为 1；</li><li>cv2.IMREAD_GRAYSCALE:以灰度模式读取一张图片，实际取值为 0</li><li>cv2.IMREAD_UNCHANGED:加载一副彩色图像，透明度不会被忽略。</li></ul><p>以及文件名需要声明为 <code>.jpg / .png</code> 类似的格式才行。</p><p><strong>与 Numpy 互换</strong></p><p>事实上，cv2 导出的数据就是 np.array，例如对于彩色图像是(x, x, 3)的矩阵。而 Image 读出的是 Image 数据，需要转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img = Image.fromarray(data)   <span class="comment"># 从array到Image</span></span><br><span class="line">data = np.array(img)          <span class="comment"># 从Image到array</span></span><br></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><p><strong>裁剪</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = img.crop((x0, y0, x1, y1))</span><br></pre></td></tr></table></figure><p>传入的是一个数组，标明左上角 <code>x0, y0</code> 及右下角 <code>x1, y1</code>。而由于 cv2 本质上是 np.array，所以可以使用 array 的操作完成。</p><p><strong>Resize</strong></p><p>Resize 是一个相当常用的函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img = img.resize((<span class="number">256</span>, <span class="number">256</span>), Image.ANTIALIAS)</span><br><span class="line">img = cv2.resize(img, (<span class="number">256</span>, <span class="number">256</span>), interpolation = cv2.INTER_AREA)</span><br></pre></td></tr></table></figure><p>后面是可选项。</p><h2 id="深度学习相关"><a href="#深度学习相关" class="headerlink" title="深度学习相关"></a>深度学习相关</h2><p><strong>直方图均衡化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  <span class="comment"># 先转化为灰度图</span></span><br><span class="line">img = cv2.equalizeHist(img)                  <span class="comment"># 然后均衡化</span></span><br></pre></td></tr></table></figure><p><strong>随机变形</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> tfs</span><br><span class="line">transform = tfs.Compose([</span><br><span class="line">    tfs.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 先调整图片大小至256x256</span></span><br><span class="line">    tfs.RandomCrop((<span class="number">224</span>, <span class="number">224</span>)),  <span class="comment"># 再随机裁剪到224x224</span></span><br><span class="line">    tfs.RandomHorizontalFlip(),  <span class="comment"># 随机的图像水平翻转，通俗讲就是图像的左右对调</span></span><br><span class="line">    tfs.RandomRotation(<span class="number">5</span>),</span><br><span class="line">    tfs.ToTensor(),</span><br><span class="line">    tfs.Normalize((<span class="number">0.485</span>, <span class="number">0.456</span>, <span class="number">0.406</span>), (<span class="number">0.229</span>, <span class="number">0.224</span>, <span class="number">0.2225</span>)),  <span class="comment"># 维度和图像的channel相关</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>调用时使用即可：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = transform(img)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> CV </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python绘图集</title>
      <link href="/2020/tech/Python/%E7%BB%98%E5%9B%BE/"/>
      <url>/2020/tech/Python/%E7%BB%98%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>每一次写程序为了可视化都避不开 Python 的 matplotlib，干脆整理一下这个东西。以防后面每次需要反复查一样的东西。</p><a id="more"></a>  <h2 id="绘图基础"><a href="#绘图基础" class="headerlink" title="绘图基础"></a>绘图基础</h2><p><strong>导入步骤</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p><strong>基本操作</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">plt.show()</span><br><span class="line">plt.clr()             <span class="comment">#清空</span></span><br><span class="line">plt.savefig()         <span class="comment">#保存</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">**绘制**：</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">plt.plot(x, y, label = <span class="string">'name'</span>, color = <span class="string">'blue'</span>, linestyle = <span class="string">'--'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Time'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Acc'</span>)</span><br><span class="line">plt.legend(loc = <span class="string">'upper left'</span>)</span><br></pre></td></tr></table></figure><p>关于上面的位置，有下表：</p><div class="table-container"><table><thead><tr><th>值</th><th>位置</th></tr></thead><tbody><tr><td>upper right</td><td>右上</td></tr><tr><td>lower left</td><td>左下</td></tr><tr><td>center</td><td>center</td></tr></tbody></table></div><p>排列组合……</p><h2 id="特殊图"><a href="#特殊图" class="headerlink" title="特殊图"></a>特殊图</h2><p><strong>混淆矩阵绘制</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_confusion_matrix</span><span class="params">(cm, savename, title=<span class="string">'Confusion Matrix'</span>)</span>:</span></span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">8</span>), dpi=<span class="number">100</span>)</span><br><span class="line">    np.set_printoptions(precision=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在混淆矩阵中每格的概率值</span></span><br><span class="line">    ind_array = np.arange(len(classes))</span><br><span class="line">    x, y = np.meshgrid(ind_array, ind_array)</span><br><span class="line">    <span class="keyword">for</span> x_val, y_val <span class="keyword">in</span> zip(x.flatten(), y.flatten()):</span><br><span class="line">        c = cm[y_val][x_val]</span><br><span class="line">        <span class="keyword">if</span> c &gt; <span class="number">0.001</span>:</span><br><span class="line">            plt.text(x_val, y_val, <span class="string">"%0.0f"</span> % (c,), color=<span class="string">'red'</span>, fontsize=<span class="number">15</span>, va=<span class="string">'center'</span>, ha=<span class="string">'center'</span>)</span><br><span class="line">    </span><br><span class="line">    plt.imshow(cm, interpolation=<span class="string">'nearest'</span>, cmap=plt.cm.binary)</span><br><span class="line">    plt.title(title)</span><br><span class="line">    plt.colorbar()</span><br><span class="line">    xlocations = np.array(range(len(classes)))</span><br><span class="line">    plt.xticks(xlocations, classes, rotation=<span class="number">90</span>)</span><br><span class="line">    plt.yticks(xlocations, classes)</span><br><span class="line">    plt.ylabel(<span class="string">'Actual label'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">'Predict label'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># offset the tick</span></span><br><span class="line">    tick_marks = np.array(range(len(classes))) + <span class="number">0.5</span></span><br><span class="line">    plt.gca().set_xticks(tick_marks, minor=<span class="literal">True</span>)</span><br><span class="line">    plt.gca().set_yticks(tick_marks, minor=<span class="literal">True</span>)</span><br><span class="line">    plt.gca().xaxis.set_ticks_position(<span class="string">'none'</span>)</span><br><span class="line">    plt.gca().yaxis.set_ticks_position(<span class="string">'none'</span>)</span><br><span class="line">    plt.grid(<span class="literal">True</span>, which=<span class="string">'minor'</span>, linestyle=<span class="string">'-'</span>)</span><br><span class="line">    plt.gcf().subplots_adjust(bottom=<span class="number">0.15</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># show confusion matrix</span></span><br><span class="line">    plt.savefig(savename, format=<span class="string">'png'</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p><strong>子图</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.plot(x1, y1)</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.plot(x2, y2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>热力图</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.imshow(matrix)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读 - Classification of COVID-19 in chest X-ray images using DeTraC deep convolutional neural network</title>
      <link href="/2020/scholar/paper/Classification%20of%20COVID_19/"/>
      <url>/2020/scholar/paper/Classification%20of%20COVID_19/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文为课程项目：“COVID-19 的分类和鉴别”做出的准备工作。由于做的工作类型相似，所以做一篇阅读笔记便于参考。</p><a id="more"></a>  <h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>现有的众多方法：</p><ul><li>SVM</li><li>Backpropagation Network</li><li>CNN，作为医学领域最为出众的模型</li><li>Transfer learning。这个方法简单迅速<ul><li>精调（fine-tune）：三类精调：只训练分类层；训练所有参数；训练直到大提升</li></ul></li></ul><p>类分解用来加强低方差的分类器，使在分类边界上更灵活。经常这个方法被用在预处理中提高模型的表现。在医学分析中，类分解经常被用来提高类似随机森林等的分类表现。</p><p>这篇文章使用基于类分解的 CNN 网络，并使用迁移学习方法。对于原数据集中的类，先将其分解为几个完全视为独立的子类，然后对这些子类进行分类，最后组合在一起获得预测结果。</p><h2 id="2-相关工作"><a href="#2-相关工作" class="headerlink" title="2. 相关工作"></a>2. 相关工作</h2><ul><li>使用基于 CNN 的感知网络检测 COVID-19。</li><li>使用 ResNet 预训的网络分类 CT 图像。</li><li>ImageNet 预训的网络分类 X-ray 抽取特征，然后放入 SVM 中进行分类。</li><li>基于 Transfer Learning 的分类方法，分类 CXR 图像。分为四类：正常、细菌感染、non-COVID、non-COVID 且感染。</li></ul><p>作者认为前面的成果没有讨论数据集的不规则性。这篇文章就讲关注数据的不规则性。</p><h2 id="3-DeTraC-模型"><a href="#3-DeTraC-模型" class="headerlink" title="3. $DeTraC$ 模型"></a>3. $DeTraC$ 模型</h2><p>这个部分讨论整个训练方法的细节。</p><p><strong>3.1 Overview</strong></p><p>整个模型分为三个部分：</p><ul><li>训练从$DeTraC$抽离出的预训的 CNN 模型分离出深层信息，然后使用类分解</li><li>使用复杂优化器进行训练</li><li>使用类组合器去精确分类</li></ul><center><img src="/images/Research/detrac.jpg"/></center><p>类分解器将每一个类分为 k 个子类，并进行单独训练。然后通过类组合器恢复。</p><p><strong>3.2 深度特征挖掘</strong><br>使用 ImageNet 预训的 CNN 模型，通过浅层精调，这样构建特征空间。然后使用 PCA 将高维度信息转换为低维度信息，这对于产生等价类非常有用，并且可以降低空间存储要求，提升效率。</p><p><strong>3.3 类分解器</strong><br>特征空间设为 2D 矩阵$A$，$L$是类别，$m$是特征数量，$k$是类数量，$n$是图片数量。为了完成类分解，使用 k-means 做聚类，将类别划分为等价子类。所有的原标签按照新分出的类别，按照欧几里得距离计算最近的类别然后重新分配标签。这样新获得的数据集称为 $B$。</p><p><strong>3.4 Transfer Learning</strong><br>本论文使用通过 ResNet 预训练的模型，并具有优秀的表现。<strong>作者选择仅变动 low-level 的层数而固定住 high-level 层</strong>。</p><p>参数设定：</p><div class="table-container"><table><thead><tr><th>参数</th><th>值</th></tr></thead><tbody><tr><td>学习率</td><td>除最后一层外设定为 0.0001，最后一层设定为 0.01</td></tr><tr><td>批大小</td><td>64</td></tr><tr><td>Epoch</td><td>256</td></tr><tr><td>Weight Decay</td><td>0.01</td></tr><tr><td>Momentum value</td><td>0.9</td></tr></tbody></table></div><p>因为数据很少，使用 SGD 存在不稳定性，所以使用批训练。损失函数为 cross-entropy。</p><p><strong>3.5 Evaluation 与重组</strong><br>在重组阶段，被赋予的新标签会恢复原来的标签，用来衡量模型的性能。这里使用的量为 Accuracy，Specificity, Sensitivity。各自的定义是：（$TN$ 为 <em>true negative</em>。其馀的标记就足够明显了。）</p><script type="math/tex; mode=display">   \begin{aligned}       ACC &= \frac{TP+TN}{n} \\       SN  &= \frac{TP}{TP+FN} \\       SP  &= \frac{TN}{TN+FP}   \end{aligned}</script><p>事实上使用的是多类别的判别方法。</p><h2 id="4-实验部分"><a href="#4-实验部分" class="headerlink" title="4. 实验部分"></a>4. 实验部分</h2><p><strong>4.1 使用的数据集</strong></p><ul><li>数据集包含两个部分：Normal CXRs （80 个正常样本）</li><li>Chest X-ray images，脑筋 105 个 COVID-19 样本和 11 个 SARS 样本。</li></ul><p>经过了数据增强。使用的上下左右翻转等等策略。最后获得了总计 1764 个样本。</p><p><strong>4.2 基于深度学习的类分解</strong><br>使用经过浅层训练的 AlexNet 预训网络，用以抽离原本三个类的特征。然后设定 $k=2$，使用 k-means，对类进行划分，将一个类别进一步划分为 2 个子类。最后得到 norm1, norm2, COVID191,COVID192, SARS1, SARS2 六类。</p><p><strong>4.3 结果</strong></p><ul><li>Acc：95.12%</li><li>SN：97.91%</li><li>SP：91.87%</li></ul><p>使用 70%的数据进行训练，30%的数据进行 Eval。</p><h2 id="5-讨论"><a href="#5-讨论" class="headerlink" title="5. 讨论"></a>5. 讨论</h2><p>训练 CNN 有两种策略。可以使用 end-to-end 的方法，需要大量的标注数据；或者使用迁移学习，仅需要有限的数据就能够完成任务。</p><h2 id="6-读后"><a href="#6-读后" class="headerlink" title="6. 读后"></a>6. 读后</h2><p>感觉是很平庸的一篇文章，将各种预训的结果拼在一起回避数据量过少的问题。唯一可以注意的地方是采用的 decomposition 方法，但这个方法也不是初创的。总体而言像是一个缝合怪。不过就研究方法和使用的数据集构造值得学习。</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> Paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DSP：MFCC计算</title>
      <link href="/2020/scholar/course/DSP/MFCC/"/>
      <url>/2020/scholar/course/DSP/MFCC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-WJrGwZtX" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5173080" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>MCFF（Mel Frequency Cepstrum Coefficient）的计算过程、背景以及相应的<code>python</code>代码。</p><a id="more"></a>  <p><strong>MFCC</strong>：考虑了人的听觉系统特性，将线性频谱映射到基于听觉感知特性的 Mel 频谱上，然后再计算倒谱。声道的 shape 表现为短时间功率谱的包络线（envelope of the short time power spectrum），MFCCs 的工作则是如何准确地表征这种 envelope。</p><h2 id="1-人听觉系统的特性"><a href="#1-人听觉系统的特性" class="headerlink" title="1. 人听觉系统的特性"></a>1. <strong>人听觉系统的特性</strong></h2><p>人听到的声音高低和声音频率不成线性关系，而是成对数关系。</p><script type="math/tex; mode=display">B(f)=2595log_{10}(1+\frac{f}{700})</script><p><strong>屏蔽效应：</strong>人不能听到所有的声音，只有两个频率分量相差一定的<strong>带宽</strong>时，人耳才能区分。否则只有听到一个音调。这个带宽称为<strong>临界带宽</strong>：</p><script type="math/tex; mode=display">BW_c=25+75[1+1.4(\frac{f_c}{1000})^2]^{0.69}</script><ul><li>其中$f_c$为中心频率。</li><li>当$f_c$在 1kHz 以下时，临界带宽基本恒定为 100Hz。</li><li>当$f_c$在 1kHz 以上时，临界带宽呈指数增加。</li></ul><p>模拟上述的听觉特性，可以进行构造模仿人耳的感知特性。</p><ul><li>Mel 频率尺度：对数关系</li><li>Mel 滤波器组：屏蔽效应<ul><li>每一个滤波器的中心频率在 mel 频率域中呈等间隔分布</li><li>每一个滤波器的带宽在其临界带宽范围内</li></ul></li></ul><h2 id="2-MFCC的计算步骤"><a href="#2-MFCC的计算步骤" class="headerlink" title="2. MFCC的计算步骤"></a>2. MFCC的计算步骤</h2><ol><li>输入语音信号 — 语音波谱</li><li>预加重、分帧、加窗 — 分为不同帧的语音波谱</li><li>用 FFT 计算信号频谱 — 不同帧对应的频谱</li><li>计算频谱的绝对值/平方 — 不同帧对应的能量谱</li><li>使用 Mel 滤波器组 — 获得更符合人类听觉的 Mel 谱特征</li><li>取对数 — 为了倒谱做准备</li><li>DCT — 将乘积通过对数转化为加法。</li><li>Delta MFCC</li><li>输出语音特征</li></ol><h3 id="2-1-预加重、分帧、加窗"><a href="#2-1-预加重、分帧、加窗" class="headerlink" title="2.1 预加重、分帧、加窗"></a>2.1 预加重、分帧、加窗</h3><p><strong>2.1.1 预加重</strong></p><script type="math/tex; mode=display">H(Z)=1-\mu z^{-1}</script><p>即通过一个高通滤波器。在时域中写为：</p><script type="math/tex; mode=display">s_m=s_m-\mu s_{m-1}</script><p>预加重的目的是使频谱变得平坦。同时，也是为了消除发生过程中声带和嘴唇的效应，来补偿语音信号受到发音系统所抑制的高频部分，也为了突出高频的共振峰。$\mu$的取值一般为 0.9~1 之间。</p><p><strong>2.1.2 分帧</strong><br>一个窗为一帧。通常情况下 N=256，时间为 20ms~30ms。对于 8kHz 的信号来说，若帧长度为 256 个采样点，则对应的时间为$256 / 8000\times 1000 = 32ms$。</p><p><strong>2.1.3 加窗</strong><br>对每一帧使用汉明窗。通常，$a$取值为 0.46.</p><script type="math/tex; mode=display">w(n)=1-a[1+cos(\frac{2\pi n}{N-1})]</script><h3 id="2-2-FFT"><a href="#2-2-FFT" class="headerlink" title="2.2 FFT"></a>2.2 FFT</h3><p>对每一帧进行 FFT，变换到频率域中。</p><h3 id="2-3-Mel滤波器组"><a href="#2-3-Mel滤波器组" class="headerlink" title="2.3 Mel滤波器组"></a>2.3 Mel滤波器组</h3><p>人的听力像是一组滤波器（见第一节讨论的<strong>屏蔽效应</strong>），听见的声音在频谱上是不连续的;并且在低频上分布更密集（同样参见第一节中人听到的声音特性）。将能量谱通过一组 Mel 尺度的三角形滤波器组，定义一个有 $M$ 个滤波器的滤波器组。</p><center><img src="/images/Single/Mel组.jpg" width="50%" height="50%" /></center><ul><li>中心频率$f_c(l)$在 Mel 频率域中是等间隔分布</li><li>每一个滤波器的中心频率为：<script type="math/tex; mode=display">f(m)=(\frac{N}{F_s})B^{-1}(B(f_l)+m\frac{B(f_h)-B(f_l)}{M+1})</script>其中：$N$为窗口宽度，$F_s$为采样频率，$M$为滤波器数量，通常取 22~26。通过上式可以获得 M 个带通滤波器$H_m(k)$<script type="math/tex; mode=display">H_m(k)=\begin{cases}0 & \text{ k < f(m-1) }\\\frac{k-f(m-1)}{f(m)-f(m-1)} & \text{ f(m-1) < k < f(m) }\\\frac{f(m+1)-k}{f(m+1)-f(m)} & \text{ f(m) < k < f(m+1) }\\0 & \text{ otherwise }\end{cases}</script></li></ul><center><img src="/images/Single/DSP-滤波器组.jpg" width="50%" height="50%"/></center><p>对频谱进行平滑化，并消除谐波的作用，突显原先语音的共振峰。因此一段语音的音调或音高，是不会呈现在 MFCC 参数内，换句话说，以 MFCC 为特征的语音辨识系统，并<strong>不会受到输入语音的音调不同的影响</strong>。此外，还可以降低运算量。</p><p>计算每个滤波器组输出的对数能量。其中$M$为滤波器个数，$N$为窗口大小。</p><script type="math/tex; mode=display">S(m)=ln[\sum_{k=1}^N|X(k)|^2H_m(k)]</script><!-- **MFCC**$$log|S(e^{jw})|=\sum_{m=-\infty}^{\infty}c_me^{-jwn}$$$$S(w)=lim_{N\to\infty}\frac{1}{N}|X(e^{jw})|^2=lim_{N\to\infty}\frac{1}{N}|\sum_{n=0}^{N-1}x(n)e^{-jwn}|^2$$ --><h3 id="2-4-离散馀弦变换（DCT）"><a href="#2-4-离散馀弦变换（DCT）" class="headerlink" title="2.4 离散馀弦变换（DCT）"></a>2.4 离散馀弦变换（DCT）</h3><p>对滤波器组输出$S(m)$，DCT 得到 Mel 频率的倒谱系数$c(n)$。</p><p>DCT 正变换：</p><script type="math/tex; mode=display">   \begin{aligned}       F(0) &= \frac{1}{\sqrt{N}}\sum_{x=0}^{N-1}f(x),~~~u=0 \\       F(u) &= \sqrt{\frac{2}{N}}\sum_{x=0}^{N-1}f(x)cos[\frac{\pi}{2N}(2x+1)u], ~~~u=1,2,3...,N-1   \end{aligned}</script><p>DCT 反变换：</p><script type="math/tex; mode=display">f(x)=\frac{1}{\sqrt(N)}F(0)+\sqrt{\frac{2}{N}}\sum_{u=0}^{N-1}F(u)cos[\frac{\pi}{2N}(2x+1)u], ~~~x=1,2,3,...,N-1</script><p>将$S(m)$作为上式中的$f(x)$，$m$作为$x$得到下式：</p><script type="math/tex; mode=display">c(n)=\sum_{m=1}^MS(m)cos[\frac{\pi n(m-0.5)}{M}], ~~~n=0,1,...,L</script><p>这里的$L$是 MFCC 系数的阶数，通常取 12~16。</p><h3 id="2-5-Delta-MFCC"><a href="#2-5-Delta-MFCC" class="headerlink" title="2.5 Delta MFCC"></a>2.5 Delta MFCC</h3><p>到此为止，MFCC 只是获得了当前帧的语音特征。而相邻帧之间是连续的，可以通过相邻帧之间的变化更好地表达语音的特征。</p><center><img src="/images/Single/DMFCC.jpg"/></center><h2 id="3-MFCC常用参数集"><a href="#3-MFCC常用参数集" class="headerlink" title="3. MFCC常用参数集"></a>3. MFCC常用参数集</h2><div class="table-container"><table><thead><tr><th>参数</th><th>取值</th></tr></thead><tbody><tr><td>$\mu$（预加重参数）</td><td>0.9~1</td></tr><tr><td>$N$（窗口大小）</td><td>256/512</td></tr><tr><td>采样率</td><td>8kHz/16kHz</td></tr><tr><td>帧长</td><td>20ms~30ms</td></tr><tr><td>$M$（Mel 滤波器组数量）</td><td>22~26</td></tr><tr><td>$L$（MFCC 阶数）</td><td>12~16</td></tr><tr><td>$a$（汉明窗系数）</td><td>0.46</td></tr></tbody></table></div><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ol><li>这篇文章将原理解释得挺不错：<a href="https://blog.csdn.net/zouxy09/article/details/9156785/" target="_blank" rel="noopener">梅尔频率倒谱系数（MFCC）</a></li><li>这篇将流程解释得更清楚：<a href="https://blog.csdn.net/class_brick/article/details/82743741" target="_blank" rel="noopener">语音特征 MFCC 提取过程详解</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读 - Departures from Tree Structures in Discourse - Shared Arguments in PDTB</title>
      <link href="/2020/scholar/paper/Departure_from_tree_structures_in_discourse/"/>
      <url>/2020/scholar/paper/Departure_from_tree_structures_in_discourse/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了更好地搞清楚自己究竟读过哪些论文，于是决定为读过的论文写一些笔记。这是第一篇笔记，关于 PDTB 中树结构的构建问题。</p><a id="more"></a>  <h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>这篇文章关于 Discourse Structure，是指任何超过句子结构以上的结构。尽管在大多数时候，DS 都可以被放在一个树地结构下，但是存在这样一个结构：两棵树会存在交集的情况，即存在一个“daughter”被两个 root 管辖。这篇文章将关注点放在“the shared discourse structure is a <em>syntactically subordinate clause</em> introduced by a <em>subordinating conjunction</em>”。</p><p>关于上述定义：</p><ul><li>syntactically subordinate clause：是指语法上的从句结构</li><li>subordinating conjunction<ul><li>从属连词，a connecting word or phrase that introduces a <strong>dependent clause</strong> and joins it to a <strong>main clause or independent clause</strong>.</li><li>常常被用来加上时间、让步、对比、因果等等条件</li><li>从属连词必须放在 dependent clause 的开头</li><li>例子：because, before, when; even though, as long as, except that</li></ul></li></ul><p>这篇文章考虑的是，从属句可能会作为另一个 DS 的一个 Argument，并暗示了 Syntactic subordication 及 DS 的关联。这篇文章的主张是：尽管在大多数时候，SS 和 DS 是对应的，但是有一些例外的存在。这里讨论这些例外，以及它们的意义。</p><h2 id="2-背景"><a href="#2-背景" class="headerlink" title="2. 背景"></a>2. 背景</h2><blockquote><p>a subordinating conjunction is a grammaticization of the rhetorical organization of discourse</p></blockquote><p>一般认为 Sc（subordinating clause）和其他 non-salient discourse 一样，对主题的连续性无关。这些成分被认为是句子的背景，但是他们本身并不能使主题更进一步。依据这种思路给出了做 Summarizer 的思路：移除所有的 non-salient 部分即可以完成概括。而有人指出，Sc 只是作为一个造成 discourse saliency 的原因。<br>这篇文章会通过经验上的方法，去检验句法和篇章之间的关系。</p><h2 id="3-方法及发现"><a href="#3-方法及发现" class="headerlink" title="3. 方法及发现"></a>3. 方法及发现</h2><p>考虑这样一个句型：”X although Y”，其中 X, Y 是 although 的两个 arguments，Y 是从句，假设标注者并不知道这个句子的关系的情况下，遇到了另外一个句子，这时候我们关心的是，Y 是否被选出作为另一个 DS 的一个 argument。</p><blockquote><p>The London index finished 2.4% under its close of 2233.9 the previous Friday, <strong>although</strong> it recouped some of the sharp losses staged early last week on the back of Wall Street’s fall. London was weak throughout Friday’s trading, <strong>however</strong>, on what dealers attributed to generally thin interest…(1505)</p></blockquote><p>在这个例子中，although 是第一个 ds 的一个 argument，同时也是第二个句子的一个 argument。为了方便我们称呼由 however 引导的这个 ds 为 external relation。在 PDTB 中，这样的 subordinating conjunctions 还有 after, although, as, because, …共计 12 个最为常见。在所有的情况中，以全句作为 er 的比例是最高的；其次是使用 matrix clause；最其次是使用 sc 作为 argument。而使用 coordinating conjunctions 作为对比则可以发现，其后两类的比例是几乎一样的。</p><blockquote><p>it does seem to be the case that there is a correspondence between syntactic<br>coordination and subordination on the one hand, and symmetric or asymmetric salience of discourse arguments on the other</p></blockquote><p>几乎可以认为，sc 的 saliency 低于 matrix clause。因此，认为语法和 ds 相关的观点是可以成立的。</p><h2 id="4-讨论"><a href="#4-讨论" class="headerlink" title="4. 讨论"></a>4. 讨论</h2><p>几个例子：</p><blockquote><p>They won’t buy <strong>if</strong> the quality is not there. <strong>Or</strong> if they feel the wine is overpriced. (0071)</p></blockquote><p>这个例子特殊在，尽管”the quality is not there“是一个 sc，并被 Or 判定为 er，但是可以发现整个句子是以 if 作为基础的，这样的例子可以使用树状结构加以概括。这和前文出现的例子不一样，前文的例子是一些并列的关系。于是可能在没有出现明显的嵌入的情况下，我们认为把 discourse 放入某些树结构中没有太多价值。</p><script type="math/tex; mode=display">{X~~IF~~(Y~~OR~~Z)}~~~--5i</script><p>上述式子可以概括原句。我们给一个新的例子：</p><script type="math/tex; mode=display">{X~~ALTHOUGH~~(Y}~~HOWEVER~~Z)~~~--5ii</script><p>我们认为 Y 延续了这个 DS，而再上面那个例子没有。(5i)这样是符合预期的，因为我们不希望一个 sc 去作为句子的主要成分并 continue 一个 DS。而(5ii)则更有意思。所以在什么情况下，一个 sc 会变成推动句子发展的 salient clause？下面是文章的作者们做的一些观察（文章作者声称自己并不仅仅是做观察，并会将系统的分析留到将来数据集更完善的时候（感觉这是我的锅了））。<br>首先，有两种固定的模式：</p><ul><li>这个 sc 总是后置的。例如”The dilligent boy passed the exam because <strong>he studied hard</strong>“，前置或者居中的 sc 是不行的。</li><li>er 总是限定在 - 对比、因果这样的关系中，而例如并列这样的关系则没有。</li></ul><p>以及一些大概率的模式：</p><ul><li><strong>Anaphoric matrix clause</strong>：这个 matrix clause 在原文中有一个很明显的前指。</li><li><strong>Reduced matrix clause</strong>：通过代词等短句很简单地指向了前文。</li></ul><blockquote><p>it may be <strong>because</strong> these shows need all the protection they can get. (<strong>Implicit-CAUSE</strong>) European programs usually target only their own local audience, and often only a small portion of that. (2361)，对应第二种模式</p></blockquote><p>在上述的情况中，主句总是在前文中有一个前置。可以认为是前置提供的信息削弱了后面主句的 saliency，使得 sc 上位。即，如果主句更多的是在照应前文的观点，则使得其从句更加自由，便可以作为承接下文的句子。</p><ul><li><strong>sc 被一个”coordinating-type“的 subordinating conjunction 引导</strong>：特别的，这里指两个词：<em>although</em>和<em>because</em>。这两种词引导的句子经常被用作 external argument，在发现的 349 例中，有 189 例归于上述两个中的一个。</li></ul><p>所以是否在 DS 中使用树结构，还是说在 DS 下使用树结构只是从语法分析上遗留下来的策略？</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动给中英混合文本加上空格</title>
      <link href="/2020/tech/Hexo/%E6%8A%80%E5%B7%A7_%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E7%A9%BA%E6%A0%BC/"/>
      <url>/2020/tech/Hexo/%E6%8A%80%E5%B7%A7_%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E7%A9%BA%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>使用 textlint 给文本中英文交界的地方加上空格。对 Markdown 文件或者 txt 文件都会挺有用。原来使用的方法已经由于有一些繁琐而废弃，这里加入一个插件的手段。</p><a id="more"></a>  <h2 id="已废弃方法"><a href="#已废弃方法" class="headerlink" title="已废弃方法"></a>已废弃方法</h2><p><strong> 安装 </strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> textlint <span class="comment">--global</span></span><br><span class="line">npm <span class="keyword">install</span> textlint-rule-ja-<span class="keyword">space</span>-<span class="keyword">between</span>-half-<span class="keyword">and</span>-<span class="keyword">full</span>-width <span class="comment">--global</span></span><br><span class="line">textlint <span class="comment">--init</span></span><br></pre></td></tr></table></figure><p>这里使用 <code>--save</code> 似乎是不行的，无法被程序找到 <code>textlint</code></p><p>修改生成的 <code>.textlint</code> 文件为（似乎不修改也没事）<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"filters"</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">"rules"</span>: &#123;</span><br><span class="line">        <span class="attr">"ja-space-between-half-and-full-width"</span>: &#123;</span><br><span class="line">            <span class="attr">"space"</span>: <span class="string">"always"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加空格：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">textlint</span> -- fix <span class="regexp">*.md</span></span><br></pre></td></tr></table></figure></p><p>注意，使用这个语法即使写错了也不会报错的。对于 Blog 文件，可以考虑在生成脚本文件最前面，添加一行<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">textlint --fix <span class="keyword">source</span><span class="regexp">/_posts/</span>*.md</span><br></pre></td></tr></table></figure><br>这样每一次生成 Blog 的时候就能自动纠错了。</p><p>这个方法的问题在于，需要迭代地访问每一个文件夹进行这个操作，因为每一次调用指令只能处理当前文件夹下的文件。</p><h2 id="插件方法"><a href="#插件方法" class="headerlink" title="插件方法"></a>插件方法</h2><p>VS Code 插件库中找到一个叫做 “pangu” 的插件，将其安装。该插件有两种生效方法：</p><ol><li>按下 VSC 的快捷指令，输入 “&gt;pangu”，然后可以选择处理当篇文章。</li><li>另一个策略是在设置中打开保存自动处理，将 <code>auto_space_on_save</code> 改为 <code>true</code>，并在其默认处理的文件格式中增加 <code>.md</code>，然后重启 VSC，即可生效。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第七章：互连网络</title>
      <link href="/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap7_%E4%BA%92%E8%81%94%E7%BD%91%E7%BB%9C/"/>
      <url>/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap7_%E4%BA%92%E8%81%94%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>互联函数</li><li>互联网络的参数与性能指标</li><li>静态互连网络</li><li>动态互连网络<a id="more"></a>  </li></ul><p><strong>互连网络</strong>是一种由开关元件按照一定的拓扑结构和控制方式构成的网络，用来实现计算机系统中节点之间的相互连接。</p><ul><li><strong>节点</strong>：处理器、存储模块或其他设备。</li><li>在拓扑上，互连网络为输入节点到输出节点之间的一组互连或映射。 </li><li>SIMD 计算机和 MIMD 计算机的关键组成部分。 </li><li><strong>3 大要素</strong>：互连结构，开关元件，控制方式。 </li></ul><h2 id="7-1-互连函数"><a href="#7-1-互连函数" class="headerlink" title="7.1 互连函数"></a>7.1 互连函数</h2><h3 id="7-1-1-互连函数"><a href="#7-1-1-互连函数" class="headerlink" title="7.1.1 互连函数"></a>7.1.1 互连函数</h3><p><strong>互连函数</strong>：通过数学表达式建立输入端号与输出端号的连接关系。即在互连函数 f 的作用下，输入端 x 连接到输出端$f(x)$。</p><ul><li>互连函数反映了网络输入数组和输出数组之间对应的置换关系或排列关系。</li><li>互连函数 f(x)有时可以采用循环表示<ul><li>${x<em>0, x_1, … x</em>{j-1}}~\to~f(x<em>0)=x_0, f(x_1)=x_2, …, f(x</em>{j-1})=x_0$</li><li>$j$称为循环的长度。</li><li>互连函数表示为$f(x<em>{n-1}x</em>{n-2}…x_1x_0)$</li><li>$x=x<em>{n-1}x</em>{n-2}…x_1x_0$，其中$n=log_2N$。</li></ul></li></ul><h3 id="7-1-2-几种基本的互连函数"><a href="#7-1-2-几种基本的互连函数" class="headerlink" title="7.1.2 几种基本的互连函数"></a>7.1.2 几种基本的互连函数</h3><p><strong>恒等函数</strong>：$I(x<em>{n-1}x</em>{n-2}…x<em>1x_0)=x</em>{n-1}x_{n-2}…x_1x_0$<br><strong>交换函数</strong>：实现二进制地址编码中第 k 位互反的输入端与输出端之间的连接。</p><ul><li>主要用于构造立方体互连网络和各种超立方体互连网络。</li><li>该函数有 n 种</li><li><strong>立方体互连函数</strong>：当$N=8$，即$n=3$时。</li></ul><script type="math/tex; mode=display">   \begin{aligned}       Cube_0 &= x_2x_1\bar{x_0} \\       Cube_1 &= x_2\bar{x_1}x_0 \\       Cube_2 &= \bar{x_2}x_1x_0   \end{aligned}</script><center><img src="/images/Single/cube.jpg" width="50%" height="50%" />N=8的立方体交换函数</center><p><strong>均匀洗牌函数</strong></p><ul><li>将输入端分成数目相等的两半，前一半和后一半按类似均匀混洗扑克牌的方式交叉地连接到输出端（输出端相当于混洗的结果）。也称为<strong>混洗函数</strong>。直观的来说是将原地址乘 2 取模。</li><li>$ \sigma(x<em>{n-1}x</em>{n-2}…x<em>1x_0)=x</em>{n-2}x<em>{n-3}…x_1x_0x</em>{n-1} $</li><li><strong>第 k 个子函数$\sigma_(k)$</strong>：把 s 作用于输入端的二进制编号的低 k 位。将低 k 位左移一位。</li><li><strong>第 k 个超函数$\sigma^(k)$</strong>：把 s 作用于输入端的二进制编号的高 k 位。将高 k 位左移一位。</li><li>$\sigma^{(n)}=\sigma_{(n)}=\sigma$</li><li>$\sigma^{(1)}=\sigma_{(1)}=f$</li><li>若存在函数使$f(x)\times g(x)=I(x)$则称为$g(x)$是$f(x)$的逆函数。</li><li>逆均匀洗牌函数</li></ul><center><img src="/images/Single/均匀洗牌.jpg" width="50%" height="50%" ></center><p><strong>碟式函数</strong></p><ul><li>把输入端的二进制编号的最高位与最低位互换位置，便得到了输出端的编号。</li><li>$\beta(x<em>{n-1}x</em>{n-2}…x<em>1x_0)=x_0x</em>{n-2}…x<em>1x</em>{n-1}$</li><li><strong>第 k 个子函数$\beta_{(k)}$</strong>：将输入端第 k 位（编号 k-1）与编号 0 交换。</li><li><strong>第 k 个超函数$\beta^{(k)}$</strong>：将输入端第 n-k 位与编号 n-1 交换。</li><li>$\beta^{(n)}=\beta_{(n)}=\beta$</li><li>$\beta^{(1)}=\beta_{(1)}=f$</li></ul><center><img src="/images/Single/蝶式函数.jpg" width="50%" height="50%" /></center><p><strong>移数函数</strong></p><ul><li>将各输入端都错开一定的位置（模 N）后连到输出端。</li><li>$\alpha(x)=(x\pm k)~mod~N$</li></ul><p><strong>PM2I 函数</strong></p><ul><li>一种移数函数，将各输入端都错开一定的位置（模 N）后连到输出端。</li><li>$PM2_{+i}=(x+2^imod)N$</li><li>$PM2_{-i}=(x-2^imod)N$</li><li>该函数互联网络具有 2n 个不同的互连函数。</li></ul><center><img src="/images/Single/PM2.jpg" width="50%" height="50%" /></center><h2 id="7-2-互连网络的结构参数与性能指标"><a href="#7-2-互连网络的结构参数与性能指标" class="headerlink" title="7.2 互连网络的结构参数与性能指标"></a>7.2 互连网络的结构参数与性能指标</h2><h3 id="7-2-1-互连网络的结构参数"><a href="#7-2-1-互连网络的结构参数" class="headerlink" title="7.2.1 互连网络的结构参数"></a>7.2.1 互连网络的结构参数</h3><ul><li>网络通常是用有向边或无向边连接有限个节点的图来表示。</li><li>互连网络的主要特性参数有：<ul><li><strong>网络规模 N</strong>：节点个数，连接的部件数量</li><li><strong>节点度 d</strong>：与节点连接的边数（通道数）</li><li><strong>节点距离</strong>：从一个节点出发到另一个节点终止所需要跨越的边数的最小值</li><li><strong>网络直径 D</strong>：距离的最大值</li><li><strong>等分宽度 b</strong>：把 N 个节点切成节点数相同的两半需要的切除边数的最小值<ul><li>线等分宽度：$B=b\times w$</li><li>w 为通道宽度</li><li>反映了网络最大流量</li></ul></li></ul></li></ul><h3 id="7-2-2-性能指标"><a href="#7-2-2-性能指标" class="headerlink" title="7.2.2 性能指标"></a>7.2.2 性能指标</h3><p><strong>通信时延</strong>：指从源节点到目的节点传送一条消息所需的总时间，它由以下 4 部分构成：</p><ul><li><strong>软件开销</strong>：在源节点和目的节点用于收发消息的软件所需的执行时间。<ul><li>取决于节点处理消息的软件内核</li></ul></li><li><strong>通道时延</strong>：通过通道传送消息所花的时间。<ul><li>通信时延 = 消息长度 / 通信带宽</li><li>有瓶颈的通道带宽决定</li></ul></li><li><strong>选路时延</strong>：消息在传送路径上所需的一系列选路决策所需的时间开销。<ul><li>与路径的节点数相关</li></ul></li><li><strong>竞争时延</strong>：多个消息同时在网络中传送时，会发生争用网络资源的冲突。为避免或解决争用冲突所需的时间就是竞争时延。</li></ul><p><strong>网络时延</strong></p><ul><li>通道时延与选路时延的和</li><li>由网络硬件特征决定，与程序星为和传输状态无关</li></ul><p><strong>端口宽带</strong></p><ul><li>对于互连网络中的任意一个端口来说，其端口带宽是指单位时间内从该端口传送到他端口的最大信息量。</li><li>在对称网络中，端口带宽与端口位置无关。网络的端口带宽与各端口的端口带宽同。</li><li>非对称网络的端口带宽则是指所有端口带宽的最小值。</li></ul><p><strong>聚集带宽</strong>：网络从一半节点到另一半节点，单位时间内能够传送的最大信息量。<br><strong>等分带宽</strong>：与等分宽度对应的切平面中，所有边合起来单位时间所能传送的最大信息量。</p><h2 id="7-3-静态互联网络"><a href="#7-3-静态互联网络" class="headerlink" title="7.3 静态互联网络"></a>7.3 静态互联网络</h2><p>互连网络通常可以分为两大类：</p><ul><li>静态互连网络：各节点之间有固定的连接通路、且在运行中不能改变的网络。</li><li>动态互连网络：由交换开关构成、可按运行程序的要求动态地改变连接状态的网络。</li></ul><p><strong>线性阵列</strong></p><ul><li>一种一维的线性网络，其中 N 个节点用 N-1 个链路连成一行。</li><li>端节点的度：1</li><li>其馀节点的度：2</li><li>直径：N－1</li><li>等分宽度 b=1</li></ul><p><strong>环和带弦环</strong></p><ul><li>环<ul><li>用一条附加链路将线性阵列的两个端点连接起来而构成。可以单向工作，也可以双向工作。</li><li>对称性</li><li>节点的度：2</li><li>双向环的直径：N/2</li><li>单向环的直径：N </li><li>环的等分宽度 b=2 </li></ul></li><li>带弦环<ul><li>增加的链路越多，节点度就越高，网络直径就越小</li></ul></li><li>全连接网络</li></ul><center><img src="/images/Single/带弦环.jpg" width="50%" height="50%" /></center><p><strong>循环移数网络</strong></p><ul><li>通过在环上每个节点到所有与其距离为 2 的整数幂的节点之间都增加一条附加链而构成。</li><li>即如果$|j-i|=2^r$，则 j 与 i 连接。<ul><li>节点度：2n-1</li><li>直径：n/2</li><li>网络规模：$N=2^n$</li></ul></li></ul><center><img src="/images/Single/循环.jpg" width="50%" height="50%" /></center><p><strong>树形和星形</strong></p><center><img src="/images/Single/树形.jpg" width="50%" height="50%" /></center><ul><li>树形可靠性较差，具有较高的节点度</li></ul><p><strong>胖树形</strong></p><p><strong>网格形和环网形</strong></p><ul><li>网格形<ul><li>对于$n\times n$的网格<ul><li>内部节点的度 d=4</li><li>边节点的度 d=3</li><li>角节点的度 d=2</li><li>网络直径 D=2（n-1）</li><li>等分宽度 b=n</li></ul></li><li>一个由$N=n^k$个节点构成的 k 维网格形网络（每维 n 个节点）的内部节点度 d=2k，网络直径 D=k(n-1) </li></ul></li><li>Illiac 网络<ul><li>把 2 维网格形网络的每一列的两个端节点连接起来，再把每一行的尾节点与下一行的头节点连接起来，并把最后一行的尾节点与第一行的头节点连接起来。</li><li>对于$n\times n$的网格<ul><li>所有节点的度 d=4</li><li>网络直径 D=n-1</li><li>Illiac 网络的直径只有纯网格形网络直径的一半。 </li><li>等分宽度：2n</li></ul></li></ul></li><li>环网形<ul><li>把 2 维网格形网络的每一行的两个端节点连接起来，把每一列的两个端节点也连接起来。 </li><li>将环形和网格形组合在一起，并能向高维扩展。 </li><li>一个 n×n 的环网形网 <ul><li>节点度：4</li><li>网络直径：2×(n/2)</li><li>等分宽度 b=2n </li></ul></li></ul></li></ul><center><img src="/images/Single/网格形.jpg " width="50%" height="50%" /></center><p><strong>超立方体</strong></p><ul><li>一个二元 n-立方体由$N=2^n$个节点组成，它们分布在 n 维上，每维有两个节点。</li><li>为实现一个 n-立方体，只要把两个（n－1）立方体中相对应的节点用链路连接起来即可。共需要 2n-1 条链路。</li><li>n-立方体中节点的度都是 n，直径也是 n，等分宽度为 b=N/2 。 </li></ul><p><strong>带环立方体（3-CCC）</strong></p><ul><li>把 3-立方体的每个节点换成一个由 3 个节点构成的环而形成的。</li><li>带环 k-立方体（简称 k-CCC）<ul><li>k-立方体的变形，它是通过用 k 个节点构成的环取代 k-立方体中的每个节点而形成的。</li><li>网络规模为 N=k×2k</li><li>网络直径为 D=2k-1+k/2</li><li>比 k-立方体的直径大一倍</li><li>等分宽度为 b=N/（2k）</li></ul></li></ul><center><img src="/images/Single/带环立方体.jpg" width="50%" height="50%" /></center><h2 id="7-4-动态互连网络"><a href="#7-4-动态互连网络" class="headerlink" title="7.4 动态互连网络"></a>7.4 动态互连网络</h2><h3 id="7-4-1-总线网络"><a href="#7-4-1-总线网络" class="headerlink" title="7.4.1 总线网络"></a>7.4.1 总线网络</h3><p>由一组导线和插座构成，经常被用来实现计算机系统中处理机模块、存储模块和外围设备等之间的互连。</p><ul><li>每一次总线只能用于一个源（主部件）到一个或多个目的（从部件）之间的数据传送。</li><li>多个功能模块之间争用总线或时分总线</li><li>特点：结构简单、成本低、带宽窄</li></ul><p><strong>一种由总线连接的多处理机系统</strong></p><center><img src="/images/Single/总线系统.jpg" width="50%" height="50%" /></center><ul><li>系统总线在处理机、I/O 子系统、主存储器以及辅助存储设备（磁盘、磁带机等）之间提供了一条公用通路。</li><li>系统总线通常设置在印刷电路板底板上。处理器板、存储器板和设备接口板都通过插座或电缆插入底板。</li></ul><p><strong>带宽窄的解决</strong></p><ul><li>多总线是设置多条总线，有两种做法：<ul><li>为不同的功能设置专门的总线</li><li>重复设置相同功能的总线</li></ul></li><li>多层次的总线是按层次的架构设置速度不同的总线，使得不同速度的模块有比较适合的总线连接。 </li></ul><h3 id="7-4-2-交叉开关网络"><a href="#7-4-2-交叉开关网络" class="headerlink" title="7.4.2 交叉开关网络"></a>7.4.2 交叉开关网络</h3><p><strong>单极开关网络</strong></p><ul><li>交叉点开关能在对偶（源、目的）之间形成动态连接，同时实现多个对偶之间的无阻塞连接。</li><li>带宽和互连特性最好。 </li><li>一个 n×n 的交叉开关网络，可以无阻塞地实现$n!$种置换。 </li><li>对一个 n×n 的交叉开关网络来说，需要 n2 套交叉点开关以及大量的连线。当 n 很大时，交叉开关网络所需要的硬件数量非常巨大。</li></ul><p><strong>C.mmp 多处理机的互连结构</strong></p><ul><li>用 16×16 的交叉开关网络把 16 台 PDP-11 处理机与 16 个存储模块连在一起</li><li>最多可同时实现 16 台处理机对 16 个不同存储模块的并行访问<ul><li>每个存储模块一次只能满足一台处理机的请求</li><li>当多个请求要同时访问同一存储模块时，交叉开关就必须分解所发生的冲突，每一列只能接通一个交叉点开关。</li><li>为了支持并行（或交叉）存储器访问，可以在同一行中接通几个交叉点开关。 </li></ul></li></ul><center><img src="/images/Single/mmp.jpg" width="50%" height="50%" /></center><h3 id="7-4-3-多级互联网络"><a href="#7-4-3-多级互联网络" class="headerlink" title="7.4.3 多级互联网络"></a>7.4.3 多级互联网络</h3><p><strong>多级互连网络的构成</strong></p><ul><li>MIMD 和 SIMD 都采用多级互联网络 MIN（Multistage Interconnection Network）</li><li>一种通用的多级互连网络 <ul><li>由 a×b 开关模块和级间连接构成的通用多级互连网络结构</li><li>每一级都用了多个 a×b 开关<ul><li>a 个输入和 b 个输出</li><li>在理论上，a 和 b 不一定相等，然而实际上 a 和 b 经常选为 2 的整数幂，即 a＝b＝2k，k≥1。 </li></ul></li><li>相邻各级开关之间都有固定的级间连接</li></ul></li></ul><center><img src="/images/Single/多级互连.jpg" width="50%" height="50%" /></center><ul><li>最简单的开关模块：2x2 开关</li></ul><center><img src="/images/Single/22开关.jpg" width="50%" height="50%" /></center><ul><li>各种多级互连网络的区别在于所用开关模块、控制方式和级间互连模式的不同。<ul><li>控制方式：对各个开关模块进行控制的方式。<ul><li>级控制：每一级的所有开关只用一个控制信号控制，只能同时处于同一种状态。</li><li>单元控制：每一个开关都有一个独立的控制信号，可各自处于不同的状态。</li><li>部分级控制：第 i 级的所有开关分别用 i＋1 个信号控制，0≤i≤n－1，n 为级数。</li></ul></li><li>常用的级间互连模式：均匀洗牌、蝶式、多路洗牌、纵横交叉、立方体连接等</li></ul></li></ul><p><strong>多级立方网络</strong></p><ul><li>多级立方体网络包括 STARAN 网络和间接二进制 n 方体网络等。<ul><li>两者仅在控制方式上不同，在其他方面都是一样的。</li><li>都采用二功能（直送和交换）的 2×2 开关。</li><li>当第 i 级（0≤i≤n-1）交换开关处于交换状态时，实现的是 Cubei 互连函数。 </li></ul></li><li>一个 N 输入的多级立方体网络有 log2N 级，每级用 N/2 个 2×2 开关模块，共需要 log2N×N/2 个开关。</li></ul><center><img src="/images/Single/多级立方网络.jpg" width="50%" height="50%" />一个8个入端的多级立方体网络</center><ul><li>STARAN 网络采用级控制和部分级控制。<ul><li>采用级控制时，所实现的是交换功能；</li><li>采用部分级控制时，则能实现移数功能。</li></ul></li><li>间接二进制 n 方体网络则采用单元控制。<ul><li>具有更大的灵活性。</li></ul></li></ul><p><strong>Omega 网络</strong></p><center><img src="/images/Single/Omega网络.jpg" width="50%" height="50%" />一个8×8的Omega网络</center><ul><li>一个 N 输入的 Omega 网络<ul><li>有$log_2N$级，每级用 N/2 个 2×2 开关模块，共需要$Nlog_2N/2$个开关。</li></ul></li><li>每个开关模块均采用单元控制方式。</li><li>不同的开关状态组合可实现各种置换、广播或从输入到输出的其他连接。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体系结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>巧克力奶茶</title>
      <link href="/2020/essay/%E8%8F%9C%E8%B0%B1/%E5%B7%A7%E5%85%8B%E5%8A%9B%E5%A5%B6%E8%8C%B6/"/>
      <url>/2020/essay/%E8%8F%9C%E8%B0%B1/%E5%B7%A7%E5%85%8B%E5%8A%9B%E5%A5%B6%E8%8C%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文简单记叙一下巧克力奶茶的做法，为提高下一次水准做准备。</p><a id="more"></a>  <p><strong>口感</strong></p><ul><li>呈现巧克力牛奶般的颜色</li><li>口感粗粝，不算非常顺滑，略苦</li><li>可能会因为巧克力过多而盖过茶味，这个还需要探索</li><li>黑巧克力可能并不合适，和奶茶自身的味道些许冲突，没有展现各自的优势</li></ul><p><strong>材料</strong></p><ul><li>纯牛奶一盒：250ml</li><li>红茶叶若干：大概小半把，煮沸后占 1/4 个碗</li><li>冰糖：15 颗以上</li><li>黑巧克力：20g。如果放整条那茶味会被盖过去</li></ul><p><strong>步骤</strong></p><ul><li>冷水煮沸，冷水量不能太多，两碗以内。</li><li>放入茶叶，小火熬制一段时间，会闻到“番茄味”，水会变成棕红色。</li><li>倒入牛奶、冰糖、巧克力，小火熬制。煮沸后静置一段时间</li><li>可以按照相同的办法，但是不放巧克力就变成普通的奶茶</li></ul><p><strong>实验失败经历</strong></p><ol><li>实验 001<ul><li>使用了 40g 黑巧克力</li><li>三碗水，水似乎放多了</li><li>使用冷水煮红茶，效果不理想</li><li>结果：巧克力味道过重，几乎盖过了茶味，呈现巧克力牛奶的味道</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 食谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‘钢の錬金术师’03版观感</title>
      <link href="/2020/essay/%E8%A7%82%E6%84%9F/%E9%92%A2%E4%B9%8B%E7%82%BC%E9%87%91%E6%9C%AF%E5%B8%8803/"/>
      <url>/2020/essay/%E8%A7%82%E6%84%9F/%E9%92%A2%E4%B9%8B%E7%82%BC%E9%87%91%E6%9C%AF%E5%B8%8803/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-TJNlpdHq" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="636907" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="评价：★★★★☆"><a href="#评价：★★★★☆" class="headerlink" title="评价：★★★★☆"></a>评价：★★★★☆</h3><a id="more"></a><p>　　在相对高压的接近期末季的时候，看完了钢之炼金术师 03 版，就简单地记一下观感吧。（这真的似乎是我很不擅长的方式，不过不妨一试）<br>　　整体而论，03 版叙述了一个更小的故事，但是述说了更真实的故事；09 版叙述了一个巨大的阴谋，但是结局显得过于乐观。仅就故事节奏、完整性种种考虑，个人认为 09 版优于 03 版。许多人认为 03 版较 09 版更为深刻，这一点本人暂无法苟同，但不可否认 03 版本的严肃压抑氛围对于这样一个故事时是更得体的，09 版显得太欢乐。</p><blockquote><p>人は何かの犠牲なしに、何も得ることはできない。何かを得るためには、同等の代価が必要となる。<br>人没有的牺牲的话就什么也得不到，为了得到某些东西，就必须付出同等的代价。</p></blockquote><p>　　在观看 03 版之前先看的 09 版，毫无疑问的是 03 版的氛围比 09 版沉重了很多。03 版很大的问题是在后期脱离原作基础的情况下，事件发生的逻辑链开始频繁断裂，人物在场景间的移动和出现往往突兀得不讲道理。此外许多人物的谢幕方式也显得莫名其妙，例如被 Sloth 被 Wrath 坑掉，大总统被儿子坑掉。毫无疑问此二人这样的结局是<strong>相当具有意味</strong>的，也是我很欣赏的部分，但是非常生硬地让之前的伏笔串在一起打出结局，效果终于是不太理想。</p><p>　　不过除开上述描述的严重缺陷，03 版做得相当出色的一点是对于“等价交换”原则的讨论，这是一个逆否命题。整部作品中，有至少两点是被讨论到了的。第一点是：付出了代价是否就能获得同等的回报。第二点是：这个原则本身是否就是可信的？</p><blockquote><p>痛みを伴わない教训には意义がない、人は何かの犠牲无しには何も得ることには出来ないのだから。しかし、その痛みに耐え乘り越えた时、人は何物にも负けない强韧な心を手に入れる、そう钢のような心を……<br>不伴随着痛楚的教训就没有意义，因为人若无牺牲，就不会有收获。然而，当战胜这痛楚时，人就将获得不屈服于任何事物的坚强之心，是的，钢铁般的坚强之心。 ——09版</p></blockquote><p>　　在 09 版中，“等价交换”这一原则是不容置疑的，整部作品也没有违背这一点。在故事的最后，兄弟二人耗费了多年的时间，换来了一颗坚毅的心，这是对于等价交换的总结。但是在 03 版中，对于等价交换的诠释构成了问题的核心。等价交换原则是被两兄弟坚信的一点，也是二人被但丁嘲笑的一点。这是一个很现实的问题，正像在剧里面提到的“人生而不平等”问题在当今社会是显然的，一个人可能付出百倍的努力获得的回报只是另外一部分人付出一倍努力的结果，我们称之为天分或者运气。这个问题在 03 版并没有得到解答，是一个“失败”的结束，对于所有人来说都是。努力复活母亲的兄弟最后只能亲手再杀一次人造人；企图恢复手臂的爱德华，不仅没有成功，反而永远与弟弟分离；希望夺取大总统之位的大佐最后被流放。这是一个对于几乎所有人都是“失败”的结尾，然而世界还是依旧地运转。</p><p>　　不过在这样的悲哀之中，主人公还是抓到了渺小的希望：有一些获取的东西，是不需要付出代价的，这是被称为“爱”的东西。这是一个朴素的答案，却照亮了整部阴暗的作品。03 版的故事是关于“爱”的故事，它隐藏了行动的动机，却强调了行动造成的不可挽回的后果，省略了“爱”带来的温暖或者企图让它们看起来理所应当。但事实上这才是真正的动力，让所有人行动并坚强的唯一的理由。（听起来挺怪的，但这一部对于这一点的诠释挺棒的。）</p><p>　　03 版的部分人物处理得比 09 更为富有内涵。斯卡自不必说，从一个复仇者最后变成一个殉道者，整个过程 03 版较 09 版来得更为自然而有人性。03 版设定下的人造人的记忆也是令人造人出彩的点，Rust 在这个版本里如若新生，找到了自己最后的价值。但是大总统较 09 而言差了很大一截，人物显得略有扁平化，09 版的大总统有血有肉，是一个塑造地成功太多的角色。有一点最后想说一下，许多人在剧情后期指责阿尔圣母心坏事，爱德华行事拖沓；但事实上，人善良而弱小，这不是罪，而是<strong>现实</strong>。</p><p>　　PS：03 整部觉得最为最为令人感动的细节：在修斯准将殉职的那一集，黑色底的报幕。节制而真诚。</p><center><img src="/images/Things/钢炼.jpg"/>钢之炼金术师03剧场版</center>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六章:IO系统</title>
      <link href="/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap6_IO/"/>
      <url>/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap6_IO/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li>I/O 性能</li><li>I/O 可靠性</li><li>廉价磁盘冗馀阵列 RAID</li><li>总线</li><li>通道处理机</li><li>I/O 与操作系统</li></ol><a id="more"></a><h2 id="6-1-I-O系统性能与CPU性能"><a href="#6-1-I-O系统性能与CPU性能" class="headerlink" title="6.1 I/O系统性能与CPU性能"></a>6.1 I/O系统性能与CPU性能</h2><ol><li>IO 系统包括 IO 设备与 IO 设备和处理机的连接</li><li>IO 系统是计算机的一个重要组成部分</li><li>IO 系统可分为存储 IO 系统及通信 IO 系统</li><li>系统响应时间：从用户输入命令开始，到得到结果需要的时间。由 IO 系统响应时间和 CPU 处理时间组成</li><li>评价 IO 系统的参数：连接特性/IO 系统容量</li></ol><h2 id="6-2-I-O系统的可靠性、可用性、可信性"><a href="#6-2-I-O系统的可靠性、可用性、可信性" class="headerlink" title="6.2 I/O系统的可靠性、可用性、可信性"></a>6.2 I/O系统的可靠性、可用性、可信性</h2><p><strong>系统可靠性</strong>：系统从某个初始参考点开始一直连续提供服务的能力，用<strong>平均无故障时间 MTTF</strong>来衡量。</p><ul><li>MTTF：Mean Time To Failure</li><li>MTTF 的倒数是系统的<strong>失效率</strong>。</li><li>MTTR：平均修复时间<br>计算系统可靠性的方法：将不同部件的失效率相加求倒。</li></ul><p>提高系统部件可靠性的方法：</p><ul><li>有效构建方法：消除故障隐患</li><li>纠错方法：即使出现故障也能正常工作</li></ul><p><strong>系统的可用性：</strong>系统正常工作的时间在连续两次正常服务间隔时间中所占的比例。</p><script type="math/tex; mode=display">可用性=\frac{MTTF}{MTTF+MTTR}</script><p>平均失效间隔时间 MTBF：MTTF+MTTR</p><p><strong>可信性：</strong>服务的质量。多大程度上可以合理地认为服务是可靠的。这是不可以度量的。</p><h2 id="6-3-磁盘冗馀阵列RAID"><a href="#6-3-磁盘冗馀阵列RAID" class="headerlink" title="6.3 磁盘冗馀阵列RAID"></a>6.3 磁盘冗馀阵列RAID</h2><p><strong>磁盘阵列 DA（Disk Array）</strong>：使用多个磁盘（包括驱动器）的组合来代替一个大容量的磁盘。</p><ul><li>多个磁盘并行工作。</li><li>以条带为单位把数据均匀地分布到多个磁盘上。（交叉存放）</li><li>条带存放可以使多个数据读/写请求<strong>并行</strong>地被处理，从而提高总的 I/O 性能。<ul><li>多个独立请求可以由多个盘并行地处理：减少了 IO 请求的排队时间</li><li>如果一个请求访问了多个块，就可以多个盘一起处理：提高了单个请求的数据传输率</li></ul></li><li>增加磁盘数量会导致磁盘阵列的可靠性下降</li><li>磁盘阵列组成<ul><li>细粒度：<strong>优点：</strong>所有 I/O 请求都能够获得很高的数据传输率；<strong>缺点：</strong>在任何时间，都只有一个逻辑上的 I/O 在处理当中，而且所有的磁盘都会因为为每个请求进行定位而浪费时间。</li><li>粗粒度：多个较小规模的请求可以同时得到处理。对于较大规模的请求又能获得较高的传输率。</li></ul></li><li>设置冗馀需要解决的问题：<ul><li>如何计算冗馀信息：奇偶校验码</li><li>如何将信息分布：将信息存放在几个盘中；将数据均匀分在所有盘中</li></ul></li></ul><h3 id="6-3-1-RAID0"><a href="#6-3-1-RAID0" class="headerlink" title="6.3.1 RAID0"></a>6.3.1 RAID0</h3><center><img src="/images/Single/RAID0.jpg" width="50%" height="50%" />RAID0</center><ol><li>非冗馀阵列</li><li>将数据切分为条带，交叉地进行存放</li></ol><h3 id="6-3-2-RAID1"><a href="#6-3-2-RAID1" class="headerlink" title="6.3.2 RAID1"></a>6.3.2 RAID1</h3><center><img src="/images/Single/RAID1.jpg" width="50%" height="50%" />RAID1</center><ol><li>双备份磁盘：将数据写入镜像磁盘</li><li>特点：<ol><li>能实现快速读取</li><li>写性能由最差的磁盘决定</li><li>可靠性高</li><li>昂贵</li></ol></li></ol><h3 id="6-3-3-RAID2"><a href="#6-3-3-RAID2" class="headerlink" title="6.3.3 RAID2"></a>6.3.3 RAID2</h3><center><img src="/images/Single/RAID2.jpg" width="50%" height="50%" />RAID2</center><ol><li>存储式磁盘阵列，使用汉明码</li><li>特点<ol><li>每个数据盘存放所有数据字的一位（位交叉存放）</li><li>各个数据盘上的相应位计算汉明校验码，编码位被存放在多个校验（ECC）磁盘的对应位上。</li><li>冗馀盘是用来存放汉明码的，其个数为 log2m 级。m：数据盘的个数（也就是数据字的位数）</li><li>并未被广泛应用，目前还没有商业化产品。</li></ol></li></ol><h3 id="6-3-4-RAID3"><a href="#6-3-4-RAID3" class="headerlink" title="6.3.4 RAID3"></a>6.3.4 RAID3</h3><center><img src="/images/Single/RAID3.jpg" width="50%" height="50%" />RAID3</center><ol><li>位交叉奇偶阵列</li><li>特点<ol><li>采用奇偶校验</li><li>写数据时需要写入校验盘</li><li>读数据时可以通过校验盘恢复数据</li><li>采用的带宽比较小</li><li>校验空间开销小</li></ol></li></ol><h3 id="6-3-5-RAID4"><a href="#6-3-5-RAID4" class="headerlink" title="6.3.5 RAID4"></a>6.3.5 RAID4</h3><center><img src="/images/Single/RAID4.jpg" width="50%" height="50%" />RAID4</center><ol><li>块交叉奇偶校验</li><li>采用比较大的条带，可以同时处理多个小规模访问请求</li><li>特点<ol><li>访问只需要访问数据所在的磁盘</li><li>只有在故障时才会读取校验码并进行重建</li><li>对于上图的设定，写数据需要两次磁盘读和两次磁盘写</li></ol></li></ol><h3 id="6-3-6-RAID5"><a href="#6-3-6-RAID5" class="headerlink" title="6.3.6 RAID5"></a>6.3.6 RAID5</h3><center><img src="/images/Single/RAID5.jpg" width="50%" height="50%" />RAID5</center><ol><li>块交叉分布奇偶校验磁盘阵列</li><li>无需冗馀盘，将奇偶校验分布在所有盘上</li></ol><h3 id="6-3-7-其他RAID"><a href="#6-3-7-其他RAID" class="headerlink" title="6.3.7 其他RAID"></a>6.3.7 其他RAID</h3><ol><li>RAID6：P+Q 双校验磁盘阵列：使用两个校验位，检验空间开销是 RAID5 的两倍；可以容忍两个磁盘出错</li><li>RAID10：先进行镜像再进行条带存放</li><li>RAID01：先进行条带存放再进行镜像</li></ol><h2 id="6-4-总线"><a href="#6-4-总线" class="headerlink" title="6.4 总线"></a>6.4 总线</h2><p>优点：成本低、多样性<br>缺点：不同外设分时共享，限制了 I/O 的吞吐率</p><h3 id="6-4-1-总线的设计"><a href="#6-4-1-总线的设计" class="headerlink" title="6.4.1 总线的设计"></a>6.4.1 总线的设计</h3><ol><li>难点<ol><li>总线上信息传输收到物理因素限制：总线的长度、设备的数目、信号的强度</li><li>I/O 既要快又要高吞吐</li></ol></li><li><p>分离事务总线</p><ol><li>又称流水总线、悬挂总线</li><li>多个主设备时，可以通过打包技术提高总带宽：将事务分为请求和应答。再请求和应答之间，总线可以供给其他 I/O 使用</li><li>分离事务总线有较高的带宽，但是数据传输延迟更大<center><img src="/images/Single/总线.jpg" width="50%" height="50%" />分离事务总线</center></li></ol></li><li><p>同步总线：包含一个供总线上所有设备使用的时钟，并且这些设备是基于该时钟按照一个固定的协议来发送地址和数据的。 </p></li><li>异步总线：没有统一的参考时钟，每个设备都有各自的定时方法。采用握手协议 。</li></ol><h3 id="6-4-2-与CPU的连接"><a href="#6-4-2-与CPU的连接" class="headerlink" title="6.4.2 与CPU的连接"></a>6.4.2 与CPU的连接</h3><ol><li>I/O 总线的连接有两种方法：连接到存储器上；连接到 Cache 上</li><li>I/O 总线连接到存储器总线上</li><li>CPU 对 I/O 设备的编址<ol><li>存储器映射 I/O，将存储器地址分给 I/O 设备，使用 load 和 store 进行读写。将一部分存储空间空出用于设备控制</li><li>为 I/O 设备设置单独的 I/O 指令用于访问设备</li></ol></li></ol><h2 id="6-5-通道处理机"><a href="#6-5-通道处理机" class="headerlink" title="6.5 通道处理机"></a>6.5 通道处理机</h2><p><strong>通道处理机（简称通道）</strong>：专门负责整个计算机系统的输入/输出工作。通道处理机只能执行有限的一组输入/输出指令。</p><h3 id="6-5-1-通道的作用"><a href="#6-5-1-通道的作用" class="headerlink" title="6.5.1 通道的作用"></a>6.5.1 通道的作用</h3><ol><li>程序控制、中断和 DMA 方式管理外围设备会引起两个问题：<ol><li>所有外设的输入/输出工作均由 CPU 承担，CPU 的计算工作经常被打断而去处理输入/输出的事务，不能充分发挥 CPU 的计算能力。 </li><li>大型计算机系统的外设虽然很多，但同时工作的机会不是很多。 </li></ol></li><li>一个典型的由 CPU、通道、设备控制器、外设构成的 4 级层次结构的输入/输出系统。</li><li>通道的功能 <ol><li>接收 CPU 发来的 I/O 指令，并根据指令要求选择指定的外设与通道相连接。</li><li>执行通道程序：从主存中逐条取出通道指令，对通道指令进行译码，并根据需要向被选中的设备控制器发出各种操作命令。</li><li>给出外设中要进行读/写操作的数据所在的地址。如磁盘存储器的柱面号、磁头号、扇区号等。 </li><li>给出主存缓冲区的首地址：该缓冲区存放从外设输入的数据或者将要输出到外设中去的数据。</li><li>控制外设与主存缓冲区之间的数据传送的长度：对传送的数据个数进行计数，并判断数据传送是否结束。</li><li>指定传送工作结束时要进行的操作。例如：将外设的中断请求及通道的中断请求送往 CPU 等。</li><li>检查外设的工作状态是否正常，并将该状态信息送往主存指定单元保存。</li><li>在数据传输过程中完成必要的格式变换。例如：把字拆分为字节，或者把字节装配成字等。</li></ol></li><li>通道的主要硬件<ol><li>寄存器：数据缓冲寄存器，主存地址计数器，传输字节数计数器，通道命令字寄存器，通道状态字寄存器</li><li>控制逻辑：分时控制，地址分配，数据传送、装配和拆分等</li></ol></li></ol><h3 id="6-5-2-工作过程"><a href="#6-5-2-工作过程" class="headerlink" title="6.5.2 工作过程"></a>6.5.2 工作过程</h3><ol><li>通道完成一次数据输入/输出的工作过程<ol><li>在用户程序中使用访管指令进入管理程序，由管理程序生成一个通道程序，并启动通道。<ol><li>用户在目标程序中设置一条广义指令，通过调用操作系统的管理程序来实现。</li><li>管理程序根据广义指令提供的参数来编制通道程序。 </li><li>启动输入/输出设备指令是一条主要的输入/输出指令，属于特权指令。</li></ol></li><li>通道处理机执行通道程序，完成指定的数据输入/输出工作。通道处理机执行通道程序与 CPU 执行用户程序是并行的。 </li><li>通道程序结束后向 CPU 发中断请求。</li></ol></li><li>时间关系</li></ol><center><img src="/images/Single/通道时间.jpg " width="50%" height="50%" />通道时间示意</center><h3 id="6-5-3-种类"><a href="#6-5-3-种类" class="headerlink" title="6.5.3 种类"></a>6.5.3 种类</h3><ol><li>字节多路通道<ol><li>为多台低速或中速的外设服务。</li><li>以字节交叉的方式分时轮流地为它们服务。</li><li>字节多路通道可以包含多个子通道，每个子通道连接一台设备控制器。 </li></ol></li><li>选择通道<ol><li>为多台高速外围设备服务。 </li><li>在一段时间内只为一台高速外设独占使用。</li><li>选择通道的硬件：寄存器/格式交换部件/通道控制部件</li></ol></li><li>数组多路通道<ol><li>适用于高速设备。</li><li>每次选择一个高速设备后传送一个数据块，轮流为多台外围设备服务。</li></ol></li></ol><h3 id="6-5-4-重要：流量分析"><a href="#6-5-4-重要：流量分析" class="headerlink" title="6.5.4 重要：流量分析"></a>6.5.4 <strong>重要</strong>：流量分析</h3><ol><li>通道流量：一个通道在数据传送期间，单位时间内能够传送的数据量。所用单位一般为 Bps。  <ul><li>又称为通道吞吐率、通道数据传输率等。</li><li>通道最大流量：一个通道在满负荷工作状态下的流量 。</li><li>参数的定义 <ul><li>$T_S$：设备选择时间。从通道响应设备发出的数据传送请求开始，到通道实际为这台设备传送数据所需要的时间。</li><li>$T_D$：传送一个字节所用的时间。</li><li>p：在一个通道上连接的设备台数，且这些设备同时都在工作。</li><li>n：每台设备传送的字节数，这里假设每台设备传送的字节数都相同。</li><li>k：数组多路通道传输的一个数据块中包含的字节数。在一般情况下，k &lt; n。对于磁盘、磁带等磁表面存储器，通常 k = 512。</li><li>T：通道完成全部数据传送工作所需要的时间。</li></ul></li></ul></li><li>字节多路通道：<ol><li>传送过程：通道每连接一台个外设，只传送一个字节，然后又与另一台设备连接，并传送一个字节。</li><li>为 p 个设备传送 n 个数据需要时间：<script type="math/tex; mode=display">T_{BYTE}=(T_S+T_D)\times p \times n</script></li><li>最大流量：<script type="math/tex; mode=display">f_{max}=\frac{pn}{(T_S+T_D)pn}=\frac{1}{T_S+T_D}</script></li><li>实际流量：连接在这个通道上所有设备的数据传输率之和</li></ol></li><li>选择通道<ol><li>在一段时间内只能单独为一台高速外设服务，当这台设备的数据传送工作全部完成后，通道才能为另一台设备服务。 </li><li>为 p 个设备传送 n 个数据需要时间：<script type="math/tex; mode=display">T_{SELECT}=(\frac{T_S}{n}+T_D)pn</script></li><li>最大流量：<script type="math/tex; mode=display">f_{max}=\frac{1}{\frac{T_S}{n}+T_D}</script></li></ol></li><li>数组多路通道<ol><li>为 p 个设备传送 n 个数据需要时间：<script type="math/tex; mode=display">T_{SELECT}=(\frac{T_S}{k}+T_D)pn</script></li><li>最大流量：<script type="math/tex; mode=display">f_{max}=\frac{1}{\frac{T_S}{k}+T_D}</script></li><li>选择通道和数组多路通道的实际流量就是连接在这个通道上的所有设备中数据流量最大的那一个 。</li><li>各种通道的实际流量应该不大于通道的最大流量</li></ol></li></ol><h2 id="6-6-I-O与操作系统"><a href="#6-6-I-O与操作系统" class="headerlink" title="6.6 I/O与操作系统"></a>6.6 I/O与操作系统</h2><ul><li>在用硬件实现的 I/O 技术中，哪些会实际被采用，是由操作系统来决定的。 </li><li>I/O 操作主要是在外设和存储器之间进行，所以操作系统必须保证这些 I/O 操作的安全性。</li></ul><h3 id="6-6-1-DMA与虚拟存储器"><a href="#6-6-1-DMA与虚拟存储器" class="headerlink" title="6.6.1 DMA与虚拟存储器"></a>6.6.1 DMA与虚拟存储器</h3><p><strong>DMA 是使用虚拟地址还是物理地址？</strong></p><ol><li>使用物理地址进行 DMA 传输，存在以下两个问题：<ul><li>对于超过一页的数据缓冲区，由于缓冲区使用的页面在物理存储器中不一定是连续的，所以传输可能会发生问题。 </li><li>如果 DMA 正在存储器和缓冲区之间传输数据时，操作系统从存储器中移出（或重定位）一些页面，那么，DMA 将会在存储器中错误的物理页面上进行数据传输。 </li></ul></li><li>解决这些问题的方法 <ul><li>使操作系统在 I/O 的传输过程中确保 DMA 设备所访问的页面都位于物理存储器中，这些页面被称为是钉在了主存中。</li><li>“虚拟 DMA”技术：允许 DMA 设备直接使用虚拟地址，并在 DMA 期间由硬件将虚拟地址转换为物理地址。在采用虚拟 DMA 的情况下，如果进程在内存中被移动，操作系统应该能够及时地修改相应的 DMA 地址表。 </li></ul></li></ol><h3 id="6-6-2-I-O和Cache数据一致性"><a href="#6-6-2-I-O和Cache数据一致性" class="headerlink" title="6.6.2 I/O和Cache数据一致性"></a>6.6.2 I/O和Cache数据一致性</h3><ol><li>Cache 会造成两个副本</li><li>把 I/O 连接到存储器上会出现以下情况：<ul><li>CPU 修改了 Cache 的内容后，由于存储器的内容跟不上 Cache 内容的变化，I/O 系统进行输出操作时所看到的数据是旧值。（写直达 Cache 没有这样的问题）</li><li>I/O 系统进行输入操作后，存储器的内容发生了变化，但 CPU 在 Cache 中所看到的内容依然是旧值。 </li></ul></li><li>把 I/O 直接连接到 Cache 上：<ul><li>不会产生由 I/O 导致的数据不一致的问题。 </li><li>所有 I/O 设备和 CPU 都能在 Cache 中看到最新的数据。</li><li>I/O 会跟 CPU 竞争访问 Cache，在进行 I/O 时，会造成 CPU 的停顿。 </li><li>I/O 还可能会破坏 Cache 中 CPU 访问的内容，因为 I/O 操作可能导致一些新数据被加入 Cache，而这些新数据可能在近期内并不会被 CPU 访问。  </li></ul></li><li>解决内容一致性问题的方法（不管 Cache 是采用写直达法还是写回法）<ul><li>软件的方法：设法保证 I/O 缓冲器中的所有各块都不在 Cache 中。<ul><li>把 I/O 缓冲器的页面设置为不可进入 Cache 的，在进行输入操作时，操作系统总是把输入的数据放到该页面上。</li><li>在进行输入操作之前，操作系统先把 Cache 中与 I/O 缓冲器相关的数据“赶出”Cache，即把相应的数据块设置为“无效”状态。   </li></ul></li><li>硬件的方法<ul><li>在进行输入操作时，检查相应的 I/O 地址（I/O 缓冲器中的单元）是否在 Cache 中（即是否有数据副本）。</li><li>如果发现 I/O 地址在 Cache 中有匹配的项，就把相应的 Cache 块设置为“无效”。</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体系结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番茄炒蛋</title>
      <link href="/2020/essay/%E8%8F%9C%E8%B0%B1/%E7%95%AA%E8%8C%84%E7%82%92%E8%9B%8B/"/>
      <url>/2020/essay/%E8%8F%9C%E8%B0%B1/%E7%95%AA%E8%8C%84%E7%82%92%E8%9B%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>虽然这是道家常菜吧，但也不经常做。偶尔有一次效果不错，所以记一下。<br><a id="more"></a><br><strong>口感</strong></p><ul><li>甜味为主的风格</li><li>颜色可以算是鲜艳，绝对不用葱子，导致色调只有红色和黄色。</li></ul><p><strong>材料</strong></p><ul><li>一个鸡蛋</li><li>一个番茄</li><li>少量姜</li></ul><p><strong>步骤</strong></p><ul><li>打蛋放盐，放置一段时间</li><li>番茄滚刀切成大块，撒上白砂糖放置一段时间，尽量将白砂糖涂抹均匀</li><li>放油炒热，多放些油避免粘锅</li><li>倒入鸡蛋，尽量摊开</li><li>迅速倒入番茄，炒</li><li>用铲子把番茄切开，小火炒，让番茄逐渐变软</li><li>待到颜色看起来像样子了就能起锅</li></ul><p><strong>实验失败经历</strong></p><ul><li>按照上述方式，成功完成一次，可喜可贺</li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 食谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语音频谱处理</title>
      <link href="/2020/scholar/course/DSP/%E8%AF%AD%E9%9F%B3%E9%A2%91%E8%B0%B1%E5%88%86%E6%9E%90/"/>
      <url>/2020/scholar/course/DSP/%E8%AF%AD%E9%9F%B3%E9%A2%91%E8%B0%B1%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>叠加原理</li><li>卷积同态系统</li><li>复倒谱和倒谱</li><li>复倒谱的计算</li><li>语音信号的倒谱分析</li><li>计算 MFCC 系数<a id="more"></a>  </li></ul><h2 id="1-广义叠加原理"><a href="#1-广义叠加原理" class="headerlink" title="1. 广义叠加原理"></a>1. 广义叠加原理</h2><p>对于线性系统，使用卷积或者乘法代替线性系统的叠加原理，即：</p><script type="math/tex; mode=display">H[x(n)]=H[x_1(n)*x_2(n)]=H[x_1(n)*x_2(n)]=y_1(n)*y_2(n)=y(n)</script><h2 id="2-卷积同态系统"><a href="#2-卷积同态系统" class="headerlink" title="2. 卷积同态系统"></a>2. 卷积同态系统</h2><p>卷积同态系统由三部分组成：</p><ul><li>特征系统：$D_*[]$</li><li>线性系统：$L[]$</li><li>逆特征系统：$D_*^{-1}[]$</li></ul><p><strong>$D_*[]$</strong><br>输入是若干信号的卷积，输出为若干信号的加法组合。有以下的特性</p><script type="math/tex; mode=display">D_*[x(n)]=D_*[x_1(n)*x_2(n)]=D_*[x_1(n)]+D_*[x_2(n)]=\hat{x}_1(n)+\hat{x}_2(n)=\hat{x}(n)</script><p><strong>$L[]$</strong><br>服从叠加原理：</p><script type="math/tex; mode=display">L[\hat{x}(n)]=L[\hat{x}_1(n)+\hat{x}_2(n)]=L[\hat{x}_1(n)]+L[\hat{x}_2(n)]=\hat{y}_1(n)+\hat{y}_2(n)=\hat{y}(n)</script><p><strong>$D_*^{-1}[]$</strong><br>变换回卷积组合：</p><script type="math/tex; mode=display">D_*^{-1}[\hat{y}(n)]=y(n)</script><p>卷积同态的实现方法。利用 Z 变换，可以将卷积组合变为乘法，利用对数特性，将乘法组合变为加法，用此构成同态系统的特征系统$D_*[]$。其逆同态则是将取对数转化为指数运算。</p><center><img src="/images/Single/逆卷积.jpg" width="50%" height="50%" /></center><p><strong>同态系统的用途</strong></p><ul><li>将二个信号通过卷积（或乘积）合成的信号分开，是一种非线性处理方法。</li><li>对语音信号来说，同态处理的目的是将激励和声道分开，然后再分别进行研究<ul><li>对激励进行研究，可以确定语音片段是清音、浊音及浊音的基音频率等特征</li><li>对声道进行研究，可以确定声道特性及共振峰等特征</li></ul></li></ul><h2 id="3-复倒谱和倒谱"><a href="#3-复倒谱和倒谱" class="headerlink" title="3. 复倒谱和倒谱"></a>3. 复倒谱和倒谱</h2><p>设信号$x(n)$的 Z 变换为$X(z)$，其对数为$\hat{X}(z)=lnX(z)=ln[z[x(n)]]$。<br>那么$\hat{X}(z)$的逆变换为$\hat{x}(n)=z^{-1}[\hat{X}(z)]=z^{-1}[lnz[x(n)]]$</p><p><strong>复对数的多值性问题</strong><br>在复倒谱分析中，Z 变换得到的是复数，所以取对数涉及复对数运算，存在相位多值性问题，称为<strong>相位卷绕</strong>。</p><blockquote><p>例如：对于a为正实数，b为负实数，$ln(ab)=ln(a|b|e^{jk\pi})=ln(a)+ln(|b|)+jk\pi$。</p></blockquote><p>在计算复倒谱时，应保证复对数函数的单值性，满足广义叠加原理，且要选定<strong>收敛域</strong>以保证逆 z 变换的唯一性。</p><p><strong>注意</strong><br>在计算倒谱的情况下，信号经过同态处理的正、逆特征系统后，不能还原自身！因为此时只有幅值信息，丢掉了相位信息。对语音信号分析来说，因为人的听觉系统对频谱幅值敏感，对相位不敏感，所以倒谱分析可以用于语音信号。</p><p>如果对$X(e^{jw})$的绝对值取对数，得</p><script type="math/tex; mode=display">\hat{X}(e^{jw})=ln|X(e^{jw})|</script><p>求出的倒谱频称为<strong>实倒谱</strong>，即</p><script type="math/tex; mode=display">c(n)=\frac{1}{2\pi}\int^{\pi}_{-\pi}ln|X(e^{jw})|e^{jwn}</script><h2 id="4-复倒谱的计算方法"><a href="#4-复倒谱的计算方法" class="headerlink" title="4 复倒谱的计算方法"></a>4 复倒谱的计算方法</h2><p>设信号为$x(n)=x_1(n)*x_2(n)$，<br>则其傅里叶变换：</p><script type="math/tex; mode=display">X(e^{jw})=lnX_1(e^{jw})+lnX_2(e^{jw})</script><p>其幅度为：</p><script type="math/tex; mode=display">ln|X(e^{jw})| =ln|X_1(e^{jw})|+ln|X_2(e^{jw})|</script><p>相位：</p><script type="math/tex; mode=display">\phi(w)=\phi_1(w)+\phi_2(w)</script><p>这被称为相位缠绕。</p><h3 id="4-1-微分法"><a href="#4-1-微分法" class="headerlink" title="4.1 微分法"></a>4.1 微分法</h3><p>信号$X(n)$和倒频谱$\hat{x}(n)$的计算方法：</p><script type="math/tex; mode=display">j\frac{d}{dw}X(e^{jw})=\sum nx(n)e^{-jwn}</script><script type="math/tex; mode=display">j\frac{d}{dw}\hat{X}(e^{jw})=\sum n\hat{x}(n)e^{-jwn}</script><script type="math/tex; mode=display">\hat{X}(e^{jw})=lnX(e^{jw})</script><p>有：</p><script type="math/tex; mode=display">    \begin{aligned}        j\frac{d}{dw}\hat{X}(e^{jw})        &= j\frac{d}{dw}[lnX(e^{jw})]\\        &= \frac{j\frac{d}{dw}[X(e^{jw})]}{X(e^{jw})}\\        &=\sum n\hat{x}(n)e^{-jwn}    \end{aligned}</script><center><img src="/images/Single/int.jpg" width="50%" height="50%" /></center><p>这样就避开了复对数运算。但<strong>缺点</strong>是，$nx(n)$的高频分量较$X(n)$更多，按照原采样频率进行分析回导致频率混叠问题。</p><h3 id="4-2-最小相位信号法"><a href="#4-2-最小相位信号法" class="headerlink" title="4.2 最小相位信号法"></a>4.2 最小相位信号法</h3><p>被处理的信号$x(n)$是<strong>最小相位信号</strong>：Z 变换的全部几点和零点都位于 Z 平面单位元内部的信号，本质上是指具有<strong>最小相位延迟的序列信号</strong>。在实际应用中，许多信号是最小相位信号，或可以看作是最小相位信号。语音信号的模型就是极点都在 z 平面单位圆内的全极点模型，或者极零点都在 z 平面单位圆内的极零点模型。</p><p>设$x(n)$为最小相位信号，则$\hat{x}(n)$为因果稳定序列。</p><script type="math/tex; mode=display">\hat{x}(n)=\hat{x}_e(n)+\hat{x}_o(n)</script><script type="math/tex; mode=display">\hat{x}_e(n)=\frac{1}{2}[\hat{x}(n)+\hat{x}(-n)]</script><p>则有：</p><script type="math/tex; mode=display">\Phi[\hat{x}_e(n)]=\frac{1}{2}[\hat{X}(e^{jw})+\hat{X}(e^{-jw})]=\hat{X}_R(e^{jw})</script><p>该式不包含相位信息。</p><p><strong>注</strong>：原序列的实偶对称序列的傅里叶变换等于原序列的傅里叶变换的实部。</p><script type="math/tex; mode=display">    \begin{aligned}        \hat{X}(e^(jw))        &= \hat{X}_R(e^{jw})+j\hat{X}_I(e^{jw})\\        &= ln|X(e^{jw})|+j{arg[X(e^{jw})]+2k\pi}\\    \end{aligned}</script><p>则$ln|X(e^{jw})| =\Phi[\hat{x}_e(n)]$。<br>又由于：$\hat{x}_e(n)=\frac{1}{2}[\hat{x}(n)+\hat{x}(-n)]$且$\hat{x}(n)$是一个因果序列，可得</p><script type="math/tex; mode=display">    \hat{x}(n)=\left\{    \begin{aligned}    0,~~~n<0 \\    \hat{x}_e(n),~~~n=0\\    2\hat{x}_e(n), ~~~n>0    \end{aligned}    \right.</script><center><img src="/images/min.jpg" width="50%" height="50%" />最小相位法求复倒谱原理</center><h2 id="5-语音信号的倒谱分析"><a href="#5-语音信号的倒谱分析" class="headerlink" title="5. 语音信号的倒谱分析"></a>5. 语音信号的倒谱分析</h2><p>根据语音信号产生的线性模型，语音信号由激励信号与声道冲激响应<strong>卷积</strong>产生的，<strong>解卷积</strong>就是将卷积分量分开，可采用同态解卷积的方法。<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语音信号 -&gt; 同态解卷积分析 -&gt; 分离出激励信号和声道冲激信号相应</span><br></pre></td></tr></table></figure></p><ul><li>对声门激励信号进行分析，以判断浊音、清音以及浊音的基音频率</li><li>对声道冲激响应进行分析，以判断声道特性及共振峰</li></ul><p><strong>5.1 声门激励信号的倒谱</strong><br>声门激励信号（浊音）：$e(n)=\sum_{r=0}^M\alpha_r\delta(n-rN_P)$<br>对其进行Z变换得：</p><script type="math/tex; mode=display">E(z)=\alpha_0\Pi_{r=1}^M[1-\beta_r(z^{N_P})^{-1}]</script><p>* <strong>此处的$\beta 可以通过\alpha 求得$</strong></p><script type="math/tex; mode=display">\hat{E}(z)=ln[E(z)]=ln\alpha_0-\sum_{r=1}^M[-\sum_{k=1}^{\infty}\frac{\beta_r^k}{k}(z^{N_P})^{-k}]</script><p>求 z 反变换获得倒谱：</p><script type="math/tex; mode=display">\hat{e}(n)=loga_0\delta(n)+\sum_{k=1}^{\infty}\beta'_k\delta(n-kN_P)</script><p>一个周期冲激的有限长度序列，其倒谱也是<strong>周期冲激序列</strong>，且周期长度是$N_P$不变，只是信号长度成为无限长，振幅随 k 增加而衰减。当声门激励为浊音时，其倒谱只在$kN_P$诸点上不等于 0，其它均为零，那么第一个非零点和原点的距离就是<strong>基音周期</strong>。</p><p><strong>5.2 声道冲激响应的倒谱</strong><br>用极零点模型描述声道响应，其 Z 变换如下：</p><script type="math/tex; mode=display">X(z)=Az^{-r}\frac{\Pi^{M_i}_{k=1}(1-a_kz^{-1})\Pi_{k=1}^{M_o}(1-b_kz)}{\Pi^{N_i}_{k=1}(1-c_kz^{-1})\Pi_{k=1}^{N_o}(1-d_kz)}</script><p>a, c为单位圆内零极点；反之为单位圆外零极点。$z^{-r}$：序列相对于时间原点的延迟。<br>单位圆内的零极点形成复倒谱的右边；单位圆外的零极点形成复倒谱的左边；在原点的值取决于增益。复倒谱通常是双边的，且是比例因子为1/n的衰减指数之和。<br>$\hat{X}(z)$的复对数为：</p><script type="math/tex; mode=display">\hat{X}(z)=ln(A)+ln(z^{-r})+\sum_{k=1}^{M_i}ln(1-a_kz^{-1})+\sum_{k=1}^{M_o}ln(1-b_kz^{-1})\\-\sum_{k=1}^{N_i}ln(1-c_kz^{-1})-\sum_{k=1}^{N_o}ln(1-d_kz^{-1})</script><p>我们希望上式逆 Z 变换是稳定序列，即绝对可求和，即使<strong>ROC</strong>包括单位圆。$\hat{X}(z)$的 RoC：</p><center><img src="/images/Single/Roc.jpg" width="50%" height="50%" />Roc</center><p>其复倒谱：</p><script type="math/tex; mode=display">    \hat{x}(n)=\left\{    \begin{aligned}    ln[A],~~~n=0 \\    \sum_{k=1}^{N_i}\frac{c_k^n}{n}-\sum_{k=1}^{M_i}\frac{a_k^n}{n},~~~n>0\\    \sum_{k=1}^{M_o}\frac{b_k^{-n}}{n}-\sum_{k=1}^{N_o}\frac{d_k^{-n}}{n}, ~~~n<0    \end{aligned}    \right.</script><h2 id="6-基于听觉特征的MEL频率倒谱系数"><a href="#6-基于听觉特征的MEL频率倒谱系数" class="headerlink" title="6. 基于听觉特征的MEL频率倒谱系数"></a>6. 基于听觉特征的MEL频率倒谱系数</h2><p>一种常用的语音特征：<strong>MFCC</strong> （mel frequency cepstrum coefficient）</p><p>人耳能在嘈杂的环境中分辨各种声音 -&gt; 耳蜗起到重要作用 -&gt;耳蜗相当于滤波器组 -&gt;作用：在对数频率尺度上进行滤波 -&gt;对低频信号敏感。基于上述原理，得到类似与耳蜗的滤波器组：Mel 频率滤波器组。Mel 频率：$f_{mel}=2595\times log(1+f/700)$</p><p><strong>MFCC 计算</strong>:</p><ul><li>分帧 -&gt; 预加重 -&gt; 加汉明窗 -&gt; 短时傅里叶变换 -&gt; 得到频谱；</li><li>求频谱平方，即能量谱，用 M 个 Mel 带通滤波器进行滤波；</li><li>对每个滤波器的输出取对数，得到相应频带的对数功率谱，并进行反离散馀弦变换，得到 L 个 MFCC 系数，一般 L 取 12 ~ 16 个左右。MFCC 系数为：<script type="math/tex; mode=display">C_n=\sum_{k=1}^Mlogx'(k)cos[\pi(l-0.5)n/M],~~~n=1, 2, ..., L</script></li><li>将直接得到的 MFCC 特征作为静态特征，再做一阶和二阶差分，得到相应的动态特征。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致我的第一幅眼镜</title>
      <link href="/2020/essay/%E7%89%A9%E5%BF%97/%E7%9C%BC%E9%95%9C_%E7%89%A9%E5%BF%97%E9%93%AD/"/>
      <url>/2020/essay/%E7%89%A9%E5%BF%97/%E7%9C%BC%E9%95%9C_%E7%89%A9%E5%BF%97%E9%93%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-vKZgKiyZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="401804976" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>虽然勉强还能继续使用这副眼镜，但他已经在修补之后一个月不到的时间之后又裂开了。他可能累了吧。我想这么多年过去了，他的使命差不多可以在这里结束了？<br><a id="more"></a>  </p><center><img src="/images/Things/glasses.jpg" width="50%" height="50%" />我的眼镜</center><p>这幅眼镜是我的第一幅眼镜，外观相当朴素，从初中开始一直到现在大三的时候，中间从未换过。尽管中途因为升度数换过几次镜片，但镜架总没有换过。也不是只有这一副眼镜，但平时大多数时候带的都是这一副，备用的眼镜总觉得这里那里不舒服。本来是全黑的一副眼镜，却因为戴的时间长，眼镜腿什么的已经差不多磨成透明的了。尤其是中梁那里，可能是个人习惯性推镜架吧，那里变得尤其的光滑而透明。之前有同学表示过难以置信：这居然原来是黑色的部分。现在他的镜框折了，镜片总希望从里面逃出来。我想他差不多能休息了吧，遇上这么一个主人。</p><p>想起最早的时候，我总是把他放在眼镜盒里，直到上课前才拿出来，用眼镜布反复擦拭几遍，然后小心地戴上，一到下课便立刻取下来又放回原来的盒子里。但是后面慢慢度数高了，便也只能一直戴着，慢慢地擦拭得也少了，眼镜盒也不翼而飞……后面我知道不应该用眼镜布擦，于是用水冲洗。直到最近我端详它的表面的时候，已经发现了不少细密的纹路覆盖在眼镜片上。我想这对视力可能不太好吧？</p><p>这副眼镜陪我看过了很多的东西——可能我所知道的一切事务中的一半，我的眼镜也知道吧…真的是很长的一段时间…几乎现在是我身边陪伴我的时间最长的东西，特别是对于一个熄灯后才摘下眼镜，一睁眼就带上眼镜的人来说。</p><p>感谢你替我看见的世界。请休息了吧！</p><p>—— 致我的第一幅眼镜</p><p>廙水</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物志铭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX在Hexo中的渲染</title>
      <link href="/2020/tech/LaTeX/%E5%9C%A8Hexo%E4%B8%8B%E7%9A%84%E6%B8%B2%E6%9F%93/"/>
      <url>/2020/tech/LaTeX/%E5%9C%A8Hexo%E4%B8%8B%E7%9A%84%E6%B8%B2%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>该段落处理$\LaTeX$无法顺利在 Hexo 中渲染的问题。以下为上一次尝试且成功的步骤。<br><a id="more"></a>  </p><p>Hexo 默认的渲染引擎为 hexo-renderer-marked，这里将其更换为 hexo-renderer-kramed，该引擎在前者的基础上修复了一些 bug，具体操作：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>修改 marked.js。具体修改方式，用编辑器打开 marked.js（在./node_modules/kramed/lib/rules/inline.js 中）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">escape: /^\\([<span class="string">\\`*&#123;&#125;\[\</span>](<span class="link"></span>)# +\-.!_&gt;])/, //替换掉</span><br><span class="line">escape: /^\\([<span class="string">`*\[\</span>](<span class="link"></span>)# +\-.!_&gt;])/,</span><br></pre></td></tr></table></figure></p><p>同时<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">em: /^<span class="symbol">\b</span>_((?:[^_]|__)+?)_<span class="symbol">\b</span>|^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,  //替换掉</span><br><span class="line">em:/^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,</span><br></pre></td></tr></table></figure><br>这样应该就能成功了。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX 常用语法</title>
      <link href="/2020/tech/LaTeX/%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/tech/LaTeX/%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为最近一段时间有使用 $\LaTeX$ 写公式的需要，所以专门在这里整理一些常用的公式写法，防止后面反复查询。<br><a id="more"></a>  </p><h3 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h3><ul><li><code>\infty</code>: $\infty$</li><li><code>\ge</code>: $\ge$</li><li><code>\le</code>: $\le$</li><li><code>\pm</code>: $\pm$</li><li><code>\int</code>: $\int$</li><li><code>\prod</code>: $\prod$</li><li><code>\arg\mathop {\max}_{\theta}</code>: $\arg\mathop {\max}_{\theta}$</li><li><code>\mathop</code>：将文本转化成可以识别的数学符号</li><li><code>limits</code>：将文本放置在正下方</li></ul><h3 id="常用等式"><a href="#常用等式" class="headerlink" title="常用等式"></a>常用等式</h3><p>连等式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin &#123;aligned&#125;</span><br><span class="line">    A &amp;&#x3D; B+C\\</span><br><span class="line">    &amp;&#x3D;C+D\\</span><br><span class="line">    &amp;&#x3D;D+F</span><br><span class="line">\end &#123;aligned&#125;</span><br></pre></td></tr></table></figure></p><script type="math/tex; mode=display">    \begin {aligned}        A &= B+C\\        &=C+D\\        &=D+F    \end {aligned}</script><hr><p>大括号等式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">X_p (w)&#x3D;\left\&#123;</span><br><span class="line">\begin &#123;aligned&#125;</span><br><span class="line">    \frac &#123;1&#125;&#123;2j&#125;,~~~w&#x3D;\frac &#123;\pi&#125;&#123;2&#125; \\</span><br><span class="line">    -\frac &#123;1&#125;&#123;2j&#125;,~~~w&#x3D;-\frac &#123;\pi&#125;&#123;2&#125; \\</span><br><span class="line">    0, ~~~otherwise</span><br><span class="line">    \end &#123;aligned&#125;</span><br><span class="line">\right.</span><br></pre></td></tr></table></figure></p><script type="math/tex; mode=display">    f (x)=    \begin {cases}        0& \text {x=0}\\        1& \text {x!=0}    \end {cases}</script><p>$$</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的坡县游历</title>
      <link href="/2020/essay/%E6%B8%B8%E8%AE%B0/%E5%9D%A1%E5%8E%BF%E6%B8%B8/"/>
      <url>/2020/essay/%E6%B8%B8%E8%AE%B0/%E5%9D%A1%E5%8E%BF%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在坡县交流了一学期，这里是提交给学校的坡县经验的副本，先做一个小记。可能以后会突发奇想补充一个更自由一点的记叙，如果我还有那个时间的话。如果有什么当时留下的照片什么的也先留在那个版本里吧。</p><a id="more"></a><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>因为 CSC 的缘故，被禁足在了新加坡本地，所以没有机会去马泰游玩，不过在本地的生活也是很惬意的。</p><h3 id="住"><a href="#住" class="headerlink" title="住"></a>住</h3><p>据说 NOC 的同志因为学校 NUS 宿舍装修种种原因不能住在校内，于是我们大部分人都住在离学校有一些距离的 MDIS，需要早上坐大概半小时的车到 NUS 校区。楼下有一个食阁，但是周末几乎不开，幸好附近步行一刻钟处有一个社区的食阁，周末能去吃。除此之外，其他的东西都还算方便，不过刚到寝室的时候，还是不免一阵吐槽，毕竟大家都是抱着体验单人间的生活入住的 hhh。</p><p>新加坡无尽的夏日还是让人头疼的，虽然可以一直穿凉鞋短袖也很爽。不过长袖几乎是必备的东西，因为室内的空调温度相当的低，比如 Science Lib。</p><p>这里和中国的文化差异并没有想象中的那么大。但这确实是个多元的地方，有各种各样的宗教文化、饮食文化并完全不用顾虑歧视种种问题。</p><h3 id="食"><a href="#食" class="headerlink" title="食"></a>食</h3><p>食物开销是除了住宿以外的大头。新加坡的食物很多样，但算不上太好吃，惊艳者甚少。作为学生，最常接触的是食阁，几乎 NUS 校区每个片区都有一个，里面囊括了各个地方的食物，西餐、杂菜饭、海南鸡米饭、叉烧面、日料是几乎每个食阁都有的东西。不过水准价格皆参差不齐。全校最好的是 UTown 的两家，但是略贵一点。一般在校内一餐消费在 4 刀到 10 刀不等。在校外消费的话，普通食阁 5 刀左右，下馆子得 15 刀起步。</p><p>新加坡当地的食物，可以算是十分奇特。<strong>酿豆腐</strong>，一种白水煮豆腐，里面可以加蔬菜、肉制品煮成一团，一些可以加辣酱和叻沙调味，这个东西的价钱是按“件”算的，比如一块豆腐就是 5 毛。<strong>叻沙</strong>，一种调味料？大概是一种椰汁熬出来的辣酱，完全不能被我所接受，但是似乎有不少同学喜欢？这个东西传出的鱼腥味能散布整个商场。最早一次是在新加坡的 Changi Airport 见到这个东西，被它的味道劝退了。<strong>辣螃蟹</strong>，十分昂贵的一种食物，大多是游客来吃的。不过味道很有趣，值得一试。甜辣甜辣的，类似国内一些菜品。此外还有肉骨茶等一些食物，没有尝试就不多说了。</p><p>然后是新加坡的中国菜。新加坡或许能偶尔找到挺正宗的中国菜馆，但大抵会让人失望。这边主要是火锅和港式/广式的茶餐厅，仔细找找能找到不错的。这边几乎每个食阁都有叉烧面和杂菜饭。叉烧面稳稳全食阁最价廉主食，一般是面上放几块叉烧；杂菜饭和复旦的食堂相似，为自选菜。火锅有点贵，香天下和海底捞等都有，还有一些本地的火锅。</p><p>此外，日料、马来菜、印度菜、西餐都很多。坡上似乎有不少不错的日料，我在读期间找到了一家网红鳗鱼饭，吃完满满的满足。还有日语课老师安利的回转寿司之类的，好店需要自己多找找。</p><p>本地有吃完饭和饮料的习惯。所以每个食阁都会有饮品店，卖的一般是 Koppi（马来语的咖啡，还有些类别，比如 Kopi O，Kopi Kosong 等等），还有各种鲜榨果汁，薏米水，还有一个叫 Milo 的饮料，味道和高乐高很像，深受当地人欢迎。令人疑惑的是一瓶可乐卖 1.9 刀，但是在 711 打折的时候，也有 1 刀的，并长期处于打折。</p><h3 id="行"><a href="#行" class="headerlink" title="行"></a>行</h3><p>骑车是不可能骑车的。坡县不愧坡县，一路都是上上下下，在校区内更是不能骑车，因为学院大都建在山包包上。共享单车类似摩拜有，但是非常少，几乎不可用。有共享电动车，但是看起来非常危险，我听到过新加坡同学吐槽这东西有多危险。</p><p>主要出行是靠公交车。公交车需要自己按按钮下车，前方到站是不会在车内通报的，需要自己留意。一趟公交车并不便宜，在 1 刀左右，有起步价和同站换乘优惠。坡县内公交车网络非常密集，几乎可以利用公交车到大部分位置。</p><p>坡县地铁还是挺便利的，不过线路密度不如上海，很多时候还是靠公交车方便。地铁价格和公交车相似。</p><p>步行也是相当友好的。新加坡的道路旁一般建有走廊，走在下面不会被太阳晒也不会被雨淋，很舒适。校内连廊四处都是，楼与楼之前几乎不会有雨淋的风险。</p><p>校内通行主要靠小车.校车有专门的 app，如果选课不幸四处都有的话，坐校车就会是家常便饭了。因为每个学院都是分得比较开，所以不同学院的课一般避不了校车。不过很多 Tut 的选项会有不同的位置可选，所以尽量选自己方便的 Tut 上吧。</p><h3 id="浪"><a href="#浪" class="headerlink" title="浪"></a>浪</h3><p>新加坡好玩的地方不算太多，就那几个，一会就能逛完。不过可以趁着两次 Recess Week（期中和期末的一周复习周，学校强制不能在复习周中安排作业）去周围的国家转转。也可以和同去的小伙伴约在东海岸烧烤，同时坡县有诸多可以徒步的地方。此外新加坡的音乐会虽然不太多，但是票价便宜容易买到。就算是只提前一周也能买到低价的 5~8 排的黄金座位。</p><p>此外这里的建筑相当有特色，各种奇形怪状，并带有夸张色块的建筑随处可见。而且植被非常之好，很多楼顶或者楼内都攀爬着绿色植被。就算是在 NUS 里面也是充满了绿色植被，甚至学校中央是一片有野猴子和野鸡出没的小山包，无愧花园城市之名。</p><p>如果是秋季来可以赶上圣淘沙万圣节的鬼屋活动和国庆烟花，都是可以去凑热闹的不错的选择。</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="关于选课"><a href="#关于选课" class="headerlink" title="关于选课"></a>关于选课</h3><p>选课上限 5 门。最开始可能自己申请的课都会被踢掉，但是不用担心，后续的申请很宽松，想要的课一般都能拿到。虽然上限只有 5 门课，但是并不轻松。以日语课为例，一周有 2h 的 lecture 和两次各 2h 的 tutorial，以及对应的课程作业，预计一周的工作量接近 8~10h。</p><h3 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h3><p>专业课分为偏应用的和偏理论的。理论课程会有很多的例子，一般一个公式就会跟着大量的例子去说明（不过很多时候说明挺累赘的，如果懂了就可以自己看着走。）实践课程会有很多 lab 和 pj，不过这些项目描述都很成型，基本没有歧义，按着老师的要求做就能做出不错的东西，当然还可以在此基础上继续发挥。期末考试不算太难，平时认真应该就不会翻车。</p><h3 id="语言课"><a href="#语言课" class="headerlink" title="语言课"></a>语言课</h3><p>NUS 的语言课真的超良心。以日语课为例，课程由一周一个 lecture 和两个 tutorial 组成。Lecture 是老师讲解知识点，tutorial 是由助教老师带领同学互相对话，调整发声和学习句子的使用等等。Tutorial 人数一个班十个人左右，因为不断换着换着 partner，所以氛围超有爱。到课程后半段之后就大家邀请老师一起愉快聚餐 Utown，中间还有两次蹭到了高贵的 Yale 学院的伙食，大家吃饭时聊天的话题也和国内完全不一样。</p><h3 id="自习"><a href="#自习" class="headerlink" title="自习"></a>自习</h3><p>自习一般不愁找不到地方。在 CS 楼附近是 Central Lib，虽然我在的期间在维护，但还是很大了，插座也很多。Lib 里面自带午休室和小躺椅。然后是 Science 附近的 Science Lib。这个 Lib 并不好找，需要专门寻觅一下，在某栋楼的四楼。该 Lib 人不多，异常地冷，插座不多，有的时候会找不到空的插座。其次是 Utown 的各个 Commons，PC Commons 和 Mac Commons 都是好去处，安静，并且有配好的台式机能用。问题是座位很少，周末一般找不到（除非去很早）。所有 Lib 都是周六开放半天，周日不开，平时也关的很早，可能是建议大家不要只是学习吧？并且 Central Lib 和 Commons 都是打印文件便利的地方。因为我在实验室板搬砖，所以也常常在实验室里的小工位干活。</p><h2 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h2><h3 id="进组"><a href="#进组" class="headerlink" title="进组"></a>进组</h3><p>到了 NUS 后不久，还没开学之前，我就听学长的建议开始在 CS 学院里找合适的 Prof，希望加到 Prof 的实验室做一些事情。于是大胆地写了一封邮件附带一个完全没有经历的 CV。万幸的是，我发的第一个 Prof 就回复了我，让我自己在组里找一个自己喜欢的项目加进去。于是找来找去联系了以为中国的学长，几封邮件来往，相谈甚欢，于是就进组啦。整个学期都在和另一位 master 一起做 NLP 的事情。</p><h3 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h3><p>尽管很顺利地进组了，但还是有诸多的问题。其一是国外的交流环境和国内很不一样，很多东西都是不断地请教学长菜慢慢摸清楚；其二是组会里面大家讨论的问题用的语速比上 lecture 的 Prof 快了不止一点，真的常常听不懂。</p><p>最大的问题其实是时间平衡和心态调整。泡实验室真的很耗时间，一般我作业做完了的周末或者课少的工作日都是泡在实验室调代码看数据，自己的时间确实很少了。中途没有去太多地方玩，也没能去马泰一圈。甚至到了期中季也只能请到几天的假，我期末季刚结束的那个周末就再次回到岗位了。并且就算是花了这么多时间，也不一定会有成效，经常在实验室泡了一天心态真的挺崩的。我还记得有一次和 master 一起调代码到了凌晨五点，是真的辛苦。不过每一次看到有一点点进步都会是由衷的喜悦。</p><h3 id="体验-amp-收获"><a href="#体验-amp-收获" class="headerlink" title="体验&amp;收获"></a>体验&amp;收获</h3><p>尽管前面说得这么辛苦，但还是觉得实验室值得一去。而且交流期间进组很容易的，一般给老师说一下，他们都不会拒绝。但是做多少事情，大多就是靠自觉。Prof 很亲和，会邀请你在组会上提出问题，偶尔也会问你几个问题。每次组会整个组会一起去附近的食阁聚餐，吃饭完后 Prof 会请客一人一杯饮料。</p><p>也深刻体会到了科研生活的艰辛和不易，也算是完成了一个科研周期吧。总之收获颇丰，代码能力、越读论文的能力、思辨能力都提升了不少。如果不像把这个学期用在四处游山玩水上，泡在实验室会是不错的选择。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>做一个简单的总结吧。这是一个交流的好去处。不太大的文化差异、轻松的氛围、各式各样值得体验的新鲜事物、难得的实验室搬砖经历都让我在现在敲打这些文字时怀念这个美丽的城市。要说我唯一希望有所变动的地方，是那里永不结束的夏季。</p><p>廙水</p><p>2020-04-27</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五章:存储系统</title>
      <link href="/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap5_storage/"/>
      <url>/2020/scholar/course/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Chap5_storage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>存储系统的大纲。主要内容是 Cache 的特性及优化。</p><a id="more"></a><h2 id="5-1-存储系统基础"><a href="#5-1-存储系统基础" class="headerlink" title="5.1 存储系统基础"></a>5.1 存储系统基础</h2><ol><li>存储系统的层次结构<ol><li>要求：容量大、速度快、价格低</li><li>但是这三个要求相互矛盾</li><li>解决办法：采用多种存储器技术，构成多级存储层次  <ol><li>利用程序的局部性原理：时间局部性&amp;空间局部性</li></ol></li><li>存储系统要达到的目标：整个存储系统的速度接近于最快的访问速度，而容量和单位价格接近于最大的存储器</li></ol></li><li>性能参数<ol><li>考虑两层存储层次<br>| $M_1$ | $S_1$（容量） | $T_1$（访问时间） | $C_1$（每单位价格） |<br>| ——- | ——————- | ————————- | —————————- |<br>| $M_2$ | $S_2$         | $T_2$             | $C_2$               |</li><li>整个存储系统的容量即为第二级存储器的容量，即$S=S_2$。</li><li>每单位价格$ C=\frac{C_1S_1+C_2S_2}{S_1+S_2} $。</li><li>命中率<ol><li>$ H=\frac{N_1}{N_1+N_2} $</li><li>$ N_1 $：访问$ M_1 $的次数</li></ol></li><li>平均访问时间$ T_A $<ol><li>$ T_A=HT_1+(1-H)(T_1+T_M)=T_1+(1-H)T_M $</li><li>不命中开销：$ T_M=T_2+T_B $。从向$M_2$发送访问请求到把整个数据块调入$M_1$所需的时间。</li><li>传送信息块的时间：$ T_B $。</li></ol></li></ol></li><li>三级存储结构<ol><li>三级存储系统<ol><li>Cache</li><li>主存储器</li><li>磁盘存储器</li></ol></li><li>“Cache-主存”层次和“主存-辅存”层次<ol><li>前一个层次弥补速度不足，由硬件实现</li><li>后一个层次弥补容量的不足，主要由软件实现</li></ol></li></ol></li></ol><h2 id="5-2-Cache基础"><a href="#5-2-Cache基础" class="headerlink" title="5.2 Cache基础"></a>5.2 Cache基础</h2><ol><li>基本构造和原理<ol><li>存储空间分割和地址计算</li><li>Cache 和主存<ol><li>Cache 是按照块进行管理的。其被分割为大小相同的块。</li><li>主存块地址：用于查找该块在 Cache 中的位置。</li><li>块内位移：用于确定数据在该块的位置。</li><li>地址串 = 块地址|块内位移</li></ol></li><li><img src="/images/Chap5-storage/cpuToCache.jpg" alt=""></li></ol></li><li>映像规则<ol><li>全相联<ol><li>空间利用率最高、冲突概率最小、实现最复杂</li></ol></li><li>直接映像：每一块只能放在 Cache 的一个位置<ol><li>空间利用率低、冲突概率高、实现简单</li></ol></li><li>组相联映像：分组<ol><li>低位被称为索引（对应组相联的组数/直接映像的块大小）</li><li>相联度 n</li></ol></li></ol></li><li>查找算法<ol><li>确定 Cache 中有需要的块</li><li>通过查找目录实现<ol><li>目录表：<br><img src="/images/Chap5-storage/menu.jpg" alt=""></li><li>并行查找：<ol><li>相联存储器：根据查到的组内块地址，从 Cache 中读出一个发送给 CPU</li><li>单体多姿存储器+比较器</li></ol></li></ol></li></ol></li><li>容量：$Cache=2^{index}\times 相联度\times 块大小$</li><li>过程<ol><li>写缓冲器：如果在进行写入操作时，写缓冲器不满，则可以把数据及完整地址交给写缓冲器。</li><li>读不命中：向 CPU 发送暂停信号，从下一级存储器调入数据块</li></ol></li><li>替换算法<ol><li>当新调入一块，而 Cache 又已被占满时，替换哪一块？</li><li>主要替换算法：随机法；FIFO；LRU</li><li>LRU 的实现：<ol><li>堆栈法：用一个堆栈来记录组相联 Cache 的同一组中各块被访问的先后次序。<ol><li>这个方法需要为每一个相联组准备一个小堆栈。</li><li>该方法速度低成本高</li></ol></li><li>比较对法<ol><li>让块两两组合，每一个比较对用一个除法器的状态表示所相关的两个块最近一次被访问的远近次序。</li><li>需要的硬件<ol><li>与门，数量等同块数目</li><li>触发器，和两两组合的比较对的数目相同 $=n(n-1) $</li></ol></li><li>当组内块数较多时，可以使用多级状态位技术减少所需的硬件量。</li></ol></li></ol></li><li>写策略<ol><li>写必须再确认命中之后才可以进行</li><li>写操作可能导致 Cache 和主存内容不一致</li><li>两种写策略：写直达法和写回法</li><li>两种策略的比较：写回法地速度快，使用的存储器的带宽较低；写直达法易于实现、一致性好</li><li>写直达法中，CPU 必须停顿，这个称为“CPU 写停顿”。（可以采用写缓冲器进行优化）</li><li>写操作的调块：写时取，先把所写旦苑所在的块调入 Cache；绕写法，直接写入下一级存储而不调块</li></ol></li><li>性能分析<ol><li>不命中率：与硬件速度无关</li><li>平均访存时间：平均访存时间 = 命中时间 + 不命中率 × 不命中开销</li><li>程序执行时间：CPU 时间 = ( CPU 执行时间 + 存储器停顿周期数 ) × 时钟周期时间<ol><li>存储器停顿周期数：“读”的次数 × 读不命中率 × 读不命中开销＋“写”的次数 × 写不命中率 × 写不命中开销</li><li>存储器停顿周期数＝访存次数 × 不命中率 × 不命中开销</li></ol></li><li>$CPI_{execution}$越低，固定周期数的 Cache 的不命中开销的相对影响就越大；在计算 CPI 时，不命中开销的单位是时钟周期数。因此，即使两台计算机的存储层次完全相同，时钟频率较高的 CPU 的不命中开销较大，其 CPI 中存储器停顿这部分也就较大。因此<strong>Cache 对于低 CPI、高时钟频率的 CPU 来说更加重要</strong>。</li></ol></li><li>改进 Cache 的性能<ol><li>平均访存时间 = 命中时间 + 不命中率 × 不命中开销</li><li>从三个方面改进性能：降低不命中率；减少不命中开销；减少 Cache 命中时间</li></ol></li></ol></li></ol><h2 id="5-3-降低Cache不命中率"><a href="#5-3-降低Cache不命中率" class="headerlink" title="5.3 降低Cache不命中率"></a>5.3 降低Cache不命中率</h2><p>提高 Cache 性能的方法是降低不命中率。本节介绍 8 种降低不命中率的方法。需要降低不命中率的方法都会增加命中时间或者不命中开销。因此，使用时需要综合考虑。</p><ol><li>三种类型的不命中<ol><li>强制不命中：第一次访问一个块，其不在 Cache 中。这种不命中称为冷启动不命中或访问不命中。</li><li>容量不命中：执行程序所需要的所有块不能同时调入 Cache，在程序运行时需要被重复调用。</li><li>冲突不命中：太多块映射到同一组，被重新访问的情况。</li><li>相联度越高，冲突不命中就越少；强制不命中和容量不命中与相联度无关；强制性不命中与 Cache 容量大小无关</li></ol></li><li>增加块的大小<ol><li>增加块的大小：增加了空间局部性，减少了强制不命中；同时减少了 Cache 中块的数目，导致冲突不命中上升；会增加不命中开销</li><li>当第二个作用超过第一个作用时，不命中率会上升</li></ol></li><li>增加 Cache 容量：该方法会增加成本，并增加命中时间</li><li>提高相联度<ol><li>8 路相连和全相联一样有效，故超过 8 的方案实际意义不大</li><li>2：1 经验规则：容量为 N 的直接映像 Cache 的不命中率和容量为 N/2 的两路相联的 Cache 的不命中率相似</li></ol></li><li>伪相联 Cache<ol><li>又称为列相联。获得多路相联的低不命中率，又能保持直接映像的命中速度。<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 先按直接相联的方式进行访问，如果命中则返回</span><br><span class="line">   <span class="number">2.</span> 如果不命中，则会检查另一个块上是否匹配</span><br><span class="line">      <span class="number">3.</span> 如果命中，则发生伪命中</span><br><span class="line">      <span class="number">4.</span> 如果不命中，则访问下一级存储器</span><br></pre></td></tr></table></figure></li><li>如果许多时候，命中发生在伪命中，则速度会变慢。一种简单的方法是，发生伪命中时交换两个块的位置。</li><li>这个方法会使 CPU 流水线设计复杂化，因此一般使用在离处理器较远的 Cache 上。</li></ol></li><li>硬件预取<ol><li>指令和数据都可以在处理器提出访问请求之前预取，可以将其放在 Cache 中或者放在访问速度较快的外部缓冲其中。</li><li>指令预取：一般由 Cache 之外的硬件完成。在一次不命中时，取出相邻的两块指令数据。被请求指令返回时放入 Cache，而预取的指令则放入高速缓冲器。下一次 Cache 访问不命中时，则可能可以通过访问高速缓存器获得信息。</li><li>预取建立在空闲带宽上。如果它影响了对于正常不命中的处理，则有可能会降低性能。可以利用编译器减少不必要的预取。</li></ol></li><li>编译器控制的预取<ol><li>它不是通过硬件预取，而是由编译器在程序中降入预取指令来实现的，这些指令在数据被用到之前，就将它们取到寄存器中去。</li><li>分为：寄存器预取；Cache 预取。</li><li>也可分为：故障性预取，如果出现虚地址故障或者违反保护权限，则会异常；非故障性预取，如果出现故障，则会放弃预取变为空操作</li><li>预取不会改变指令和数值之间的逻辑关系。</li><li>编译器预取的目的是要在执行指令和读取数据能重叠进行。循环是预取优化的对象。每一次预取需要消耗一次指令的开销。</li></ol></li><li>编译优化<ol><li>对于软件进行优化降低不命中率。这个方法的特点是不需要对硬件做出改动。</li><li>程序代码和数据重组：<ol><li>将程序中的过程重新排序，减少冲突不命中；将基本块对齐</li><li>如果编译器知道分支指令很可能转移，则可以<ol><li>将转移目标处的基本块和紧跟着该分支指令的基本块进行对调</li><li>把该分支指令换为操作语义相反的分支指令</li></ol></li><li>同时也可以对数据进行变换，例如调整顺序以改善空间局部性</li><li>编译优化技术包括数组合并、内外循环交换。数组合并是将本来相互独立的多个数组合并为一个复合数组；循环融合是把独立的循环融合为单个的循环</li></ol></li><li>内外循环交换：程序中包含的嵌套循环，并不是按照存储器中存储的顺序进行访问，这时需要交换嵌套关系。</li><li>分块：提高时间局部性来减少不命中。在一次循环中既有对行的访问，也有对列的访问</li></ol></li><li>牺牲 Cache：在 Cache 和下一级存储器的数据通路上增设全相联的小 Cache。这个 Cache 存储因为冲突被替换出去的块，当不命中发生时，在访问下一级存储器之前，先检查牺牲 Cache</li></ol><h2 id="5-4-降低Cache不命中开销"><a href="#5-4-降低Cache不命中开销" class="headerlink" title="5.4 降低Cache不命中开销"></a>5.4 降低Cache不命中开销</h2><p>随着技术的发展，Cache 不命中开销随时间不断增加。</p><ol><li>采用两级 Cache<ol><li>本技术不会印象 CPU</li><li>令第一级 Cache 和 CPU 的时钟周期匹配；第二级 Cache 足够大，能够捕捉大部分到达主存的访问</li><li>平均访问时间公式：<br>$平均访存时间 = 命中时间<em>{L1}+不命中率</em>{L1} \times 不命中开销<em>{L1}$<br>$不命中开销</em>{L1} = 命中时间<em>{L2}+不命中率</em>{L2}\times 不命中开销<em>{L2}$<br>即，访存时间为$平均访存时间 = 命中时间</em>{L1}+不命中率<em>{L1}\times(命中时间</em>{L2}+不命中率<em>{L2} \times 不命中开销</em>{L2})$</li><li>$局部不命中率=该级 Cache 的不命中次数/到达该级的访存次数$；$全局不命中率=该级 Cache 不命中次数/CPU 发出的访存次数$</li><li>对于第二级 Cache，其命中次数小于第一级 Cache，所以其重点放在减少不命中次数上，导致了更大的容量、更高的相联度和更大的块大小；第二级 Cache 不会影响 CPU 的时钟频率，因此设计有更大的考虑空间。</li></ol></li><li>读不命中优先<ol><li>对于写直达，每一次访问需要对主存进行写入。为了提高性能，设置一个写缓冲器，但是这个操作会导致储存访问的复杂化，因为所读单元的最新值可能正在写入</li><li>最简单方法是推迟对读不命中的处理，直至写缓冲器清空。而这个增加了读不命中的开销。</li><li>另一种策略是，检查写缓冲器，如果没有冲突则继续访问</li><li>对于写回 Cache 法，也可以利用写缓冲器。读不命中将替换一个修改过的储存块时，将被替换的块临时复制到一个缓冲器中，从存储器调块，再写入存储器</li></ol></li><li>写缓冲合并：对于写缓冲器。在写缓冲器不为空的情况下，需要将这一次写入地址和写缓冲器中地址进行比较，寻找匹配项：如果有地址匹配而对应的位置是空闲的，则将要写入的数据和该项<strong>合并</strong>。</li><li>请求字处理技术<br>本方法不用增加硬件。从存储器向 CPU 调入一块时，往往只有一个字是立刻需要的。请求字处理技术，就是着眼于这个特性，在 CPU 的请求的字到达后，CPU 不需要等待整个块调入，就将 CPU 重启并继续执行。有两种策略：<ol><li>尽早重启动：一旦请求字到达，就立刻发送给 CPU，CPU 重启继续执行</li><li>请求字优先：调块时先传递 CPU 需要的请求字，让 CPU 继续执行。<br>这个方法有效需要块相对大才能生效；以及下一个指令没有访问同一个块。</li></ol></li><li>非阻塞 Cache 技术<br>Cache 在不命中时仍允许 CPU 进行其他的命中访问，能处理部分的访问，减少了实际不命中开销。</li></ol><h2 id="5-5-减少命中时间"><a href="#5-5-减少命中时间" class="headerlink" title="5.5 减少命中时间"></a>5.5 减少命中时间</h2><p>直接印象时钟频率的高低。</p><ol><li>容量小、结构简单的 Cache：硬件越简单，速度越快；应让 Cache 足够小，以便可以和 CPU 放在同一个芯片上。</li><li>虚拟 Cache<br>采用虚拟存储器的计算机中，每一次访存都必须进行虚实转换，将 CPU 发出的虚地址转换为物理地址，这个一般是由存储部件 MMU 完成的。<br><strong>物理 Cache</strong>：使用物理地址访问的传统 Cache。其标识存储器中存储的是物理地址，地址检测使用的也是物理地址。CPU 需要访问时，先给出一个虚拟地址，由 MMU 转换为主存物理地址，再使用这个物理地址访问 Cache。<strong>缺点</strong>：地址转换和访问 Cache 是串行进行的，访问速度很慢。<br><strong>虚拟 Cache</strong>：可以直接用虚拟地址进行访问的 Cache，存储器中存储的是虚拟地址，检测的也是虚拟地址。当 CPU 访问存储器时，虚拟地址同时送给 MMU 和 Cache，Cache 找出相应的指令。如果 Cache 不命中，则需要 MMU 读出物理地址进行访问。虚拟 Cache 的优点是命中时不需要地址转换；并且不命中时也是并行的，速度更快。<br>但<strong>并不是</strong>所有的计算机都是用虚拟 Cache。其在进行切换时，需要清空 Cache，因为新进程的虚拟地址可能和原进程使用的地址相同。解决这个的方法可以是增加一个 PID，用于标识进程。在 PID 被重用的时候，仍然需要清空 Cache。<br>虚拟 Cache 没有流行的另一个原因。操作系统可能对一个物理地址有多种虚拟地址访问，这可能会导致虚拟 Cache 存在两个副本。</li><li>虚拟索引-物理标识方法<br>优点：兼得虚拟 Cache 和物理 Cache 的好处。<br>局限性：直接映像 Cache 的容量不能超过页面的大小。$Cache 容量\le 页大小\times 相联度$<br>直接用虚地址内的页内位移作为访问 Cache 的索引，但标识是物理索引。CPU 在发出访存请求后，在进行虚实转换的同时，可以进行标识的读取。在完成地址转换以后再比较物理地址和标识。其局限性是为了实现大容量 Cache，又能使索引数比较少，可以采用提高相联度的方法。</li><li>Cache 访问流水化：不能减少命中时间，但能增加带宽</li><li>追踪 Cache：存放 CPU 执行的动态指令序列</li></ol><h2 id="5-6-并行主存系统"><a href="#5-6-并行主存系统" class="headerlink" title="5.6 并行主存系统"></a>5.6 并行主存系统</h2><p>主存的性能主要用<strong>延迟</strong>和<strong>带宽</strong>衡量。第二级 Cache 很大，对主存带宽有一定要求。并行主存系统就是<strong>一个访问周期内能并行访问多个存储字的存储器</strong>，其能有效提高存储器的带宽。<br>对于一个单字宽普通存储器，其字长与 CPU 字长相同，每一次只能访问一个存储字。设其访问周期是$T_M$，字长为$W$，其带宽为：</p><script type="math/tex; mode=display">B_M=\frac{W}{T_M}</script><p>在相同器件条件下，为提高主存带宽，可以采用并行存储器结构：单体多字存储器和多体交叉存储器</p><ol><li>单体多字存储器。<ol><li>对于一个单体 m 字存储器，该存储器可以在每个存储周期读出 m 个 CPU 字，将其带宽提升为原来的 m 倍。但是由于程序执行访问的数据具有一定的随机性，所以实际带宽比最大带宽小。</li><li>优点是实现简单，确定是效率不高：<ol><li>如果提出的指令含有分支指令，且分支成功，则有一部分指令是无效的</li><li>当前指令所需要的多个操作数不一定在一个长存储字中</li><li>必须凑齐 m 个数才一起写入存储器。如果只写个别的字，则需要把相应的长存储字取出，放到数据寄存器中，再修改一个字放回存储器</li><li>如果独写数据在一个长存储字内时，读写操作无法在一个存储周期内完成</li></ol></li></ol></li><li>多体交叉存储器<ol><li>多体存储器由多个单体存储器构成，每一个体有自己的地址寄存器等电路。</li><li>设有 m 个体，每个体有 n 个存储单元。对于计算机使用者来说，存储器是按照顺序线性编址的，如何在二维矩阵和线性地址之间建立对应关系，就是多体存储器编址问题。</li><li>有两种编址方法：高位交叉编址和低位交叉编址。低位交叉编址才能解决访问冲突问题。高位交叉编址能方便地扩展常规存储器的容量<ol><li>高位交叉编址<ol><li>对存储单元矩阵按列优先方式进行编址，即先给第 0 列的各单元按从上到下的顺序依次赋予地址，然后按第一列赋予地址。对于同一个体的高$log_2m$位都是相同的，这就是体号。</li><li>对于第 i 行第 j 列，其地址为$A=j\times n+i$</li></ol></li><li>低位交叉编址<ol><li>先给第 0 行编码，然后从左到右赋予地址</li><li>同一个体的低$log_2m$位是相同的，这是体号</li><li>需要分时启动 m 个存储器。如果每个存储体的访问周期是$T_M$，则各个存储体的启动间隔是$t=T_M/m$。</li><li>采用低位交叉访问能大幅度提高存储器的带宽。由于访问冲突，实际加速比小于 m</li><li>$B=\frac{1-(1-\lambda)^m}{\lambda}$，$\lambda$为转移指令成功的概率。当$\lambda=1$时，并行多体交叉的实际带宽同单体单字并没有区别。由于数据的随机性，单纯依靠增大 m 来提高并行的带宽是有限的。对于标量运算，一般取$m\le8$</li></ol></li></ol></li></ol></li><li>避免存储体冲突<ol><li>体冲突：两个访问要求访问同一个存储体。</li><li>解决这个问题的方法是采用许多体去减少体冲突的次数。体冲突问题可以通过硬件解决也可以通过软件解决。</li><li>软件方法：循环优化法/拓展数组大小，使之不是 2 的幂次</li><li>硬件方法：使体数为素数。体内地址为$地址<del>mod</del>存储体中字数$</li></ol></li></ol><h2 id="5-7-虚拟存储器"><a href="#5-7-虚拟存储器" class="headerlink" title="5.7 虚拟存储器"></a>5.7 虚拟存储器</h2><ol><li>基本概念<br><strong>“主存-辅存”进一步发展的结果。</strong>由小主存储器和大的辅助存储器组成，在管理下像一个单一的、可以直接访问的大容量主存存储器。程序员可以使用地址码对整个程序进行编址，不需要考虑实际主存空间的大小。<br>虚拟存储器可以分为<strong>页式</strong>和<strong>段式</strong>。页式存储器把空间划分为<strong>大小相同</strong>的块，称为页面；段式把空间划分为<strong>可变长</strong>的块，称为段。此二者各有优劣。许多计算机采用段页式，每段被分为若干个页面。</li><li>快速地址转换技术<br>页表放在主存中，每一次访存会引起两次访问，第一次是访问页表，以获得数据的物理地址；第二次是访问数据。这个效率是不可用的，一般采用翻译后备（TLB）解决这个问题。<br><strong>TLB</strong>是一个专用高速缓存器，用于存放近期经常使用的页表项。TLB 是页表部分内容的一个副本。只有在 TLB 不命中时才会进入主存页表查询。TLB 中的项由两部分组成：标识和数据。标识放的是虚地址的一部分，而数据部分存放的是物理页帧号、有效位、使用位等。操作系统需要保证 TLB 中没有该页表项的副本。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体系结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冰上行</title>
      <link href="/2020/essay/%E6%B8%B8%E8%AE%B0/%E5%86%B0%E4%B8%8A%E8%A1%8C/"/>
      <url>/2020/essay/%E6%B8%B8%E8%AE%B0/%E5%86%B0%E4%B8%8A%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-OFIlQWCM" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1210185" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>　　我原以为冰是某种坚硬而强大的东西，可是在它遇到温暖的时候，却逃掉了。</p><p>　　这是在冰城的第六天了。这一小段时间，放在我在上海的生活，根本不值一提，它会显得平庸单调而乏味；但在这里，却像是从宇宙诞生到终于坍缩那样漫长而混乱。如果现在我试图从任何一个角度去逼近在这几日里的自己所处的某一个瞬间，都会觉得匪夷所思，像是积累了很多年的顽疾在这一刻突然张牙舞爪，像是目睹了一个明知是自己编织的伟大梦境的崩坏。</p><a id="more"></a><p>　　坐在哈工大的一个藏在角落里的咖啡厅，我决定把这几日的事情记下来。我要记下来的或许不是什么重要或者意义深刻的事情，而是仅仅是一些我没有记在随身小日记上的别的事情，甚至只是那些琐碎平白的语言的补充。尽管我这样费力地铺垫这几日中发生事件是如何地危险可怕、或者平凡无趣，但终究它是一场普通的旅程：这段旅程不论对于我还是别的什么人，都是如此。</p><p>　　早上，我居然很早就起来了，比我平时起床的时间早了不知道多久，我不想躺在床上。我想站起来。外面依旧没有下雪，但是雪满满覆盖着每一个屋顶。我抬起我的手机想看些什么，却意识到我拿起的这部手机没有连接网络，连接着网络的那台手机上没有我想看的东西。想起这几日尚未填写的日记，再一阵肚子小痛，便拿着我没有连着网络的那部小手机小心翼翼地进了厕所。</p><p>　　我从房间门出来，看见隔壁正睡得舒适的三弟。他侧向有太阳射着的一面，他的被子皱成一团，很好地盖住了上半身，两只腿却从被子下支了出来，几缕稀疏的头发很乱地叠在头上。我不打算吵醒他——在他醒了之后便要工作了，还是让他多睡会吧。于是悄悄地，我进入了厕所开始补上前几天的日记。</p><p>　　补完日记的我再一次躺在了床上。很安静的空间，很自我的空间。我盯着天花板上的灯发呆，想着这不是我昨天盯着的灯。我再一次瞥了一眼外面那一片拥有着雪顶的屋子，于是我终于决定还是起来了。想起昨天承诺的今天做出回复，于是便掀起电脑开始阅读昨天仅仅是草草读过的一部分文本。这个房间的设计很是成问题，从我所正坐着的的沙发的位置，沿着时钟一点的方向看去便正好能看到主卧的样子，便是三弟安详的睡容。他换了一个姿势，面向了背光的一侧，头枕在弯曲的右手臂弯上，轻微地蜷缩着，继续着他的睡眠。我很高兴刚才没有不小心吵醒他。但我又在沙发上想着如果我移到他的房间，立刻用某种粗鲁的办法就这样把他把吵醒，或许对于我来说会成一种趣味。但终于我还是没有动，请他再睡一些时间吧。任由这几日的折腾，他虽然嘴上不说，我想也总是疲惫的。</p><h2 id="第五日"><a href="#第五日" class="headerlink" title="第五日"></a>第五日</h2><p>　　疲惫这种东西可能是险恶的世界没藏好自己的全部而露出来的不易察觉的尾巴。不论是前进或是后退，或者停在原地，合着各种五颜六色的情绪一同出现的是恐怖的疲惫。这是我在咖啡厅的想法。此刻我已经结束了上午的滑雪而回到了哈工大，坐在哈工大的某个咖啡厅了，等着一群我认为不会再出现在我的世界中的人，三弟现在的室友们。</p><p>　　点了一杯热可可，然后开始百无聊赖地看着 COC 模组，虽然心里想着，这终于是没有机会的，但还是慢慢地用手机那种小得可怜的屏幕查看这种费劲复杂的文本。在我翻来覆去地看了很多遍之后，终于放弃了。我想趴在自己的手臂上，就在这咖啡厅里睡上一个不管什么用的觉，因为我觉得累。但是又同时觉得不好意思，便一只手当作枕头，侧着脸倒在那桌子上，像个醉汉。我想到底是因为我总是让别人看见一个虚假的自己而感到抱歉，还是因为我总是尝试扮演出来的一个积极有为的青年而感到费劲。我在这样的地方呆了很长一段时间，我并不清楚确切地过了多久，感到时间正在以诡异的速度流逝。尽管我早已预料到某些事情已经不会如同计划那样向前展开了，我还是坐在那个地方，等着那个被告知这个结局的时候。</p><p>　　终于，我听到似乎有叫我名字的人。然后三弟走了进来。他问我其他两个人呢，我只能说还没来。尽管我想着他们已经不会再来了。请告诉他们如果不特别想来今天就先算了吧，我也累了。但是我是因为什么事情而感到疲惫的呢。终于下了这个决策，我们就朝着住宿的地方走去了。</p><p>　　现在虽标着零下 20 摄氏度这样吓人的标签，冰城屋外的夜晚却出奇地不那么冷。两个人便这样走在哈工大的校园里，看着四周不断改变着光彩的冰雕。校园里已经没有太多人，四处行动的是各式各样结成伙的三五人或者成双成对的小情侣，大多数人是不会在这样的晚上还到处走的。我想把刚才那段我想的关于疲惫的话说出来，或许我正在想着这么一个打算的时候，我的嘴就已经开始行动了。我可能若有若无地说了几句。三弟可能是误以为我是因为滑雪而感到累，而我或许矢口否认了几句什么滑雪使人累这种事情，滑雪这样的东西是不会这么伤人的。我想他终于还是不理解我到底想说什么吧。可能我自己也不知道自己想说些什么，以及是不是要让立在我身边的三弟知道这样一些荒唐的想法，于是仓促地岔到了别的话题。经过一番费力地挣扎，我终于又回到那疲惫中去了。</p><p>　　虽然维持这样的状态已经足以可以使我感到愉快，但却心底里明白，这样的时光就如同浮游一般，在刚浮上水面的时候，就预示着它的生命快要消失了。我想我的旅程也快要结束了，但是另一场更大的旅程才刚要开始。从一个旅程跳到另一个旅程，就像是下了一趟火车然后赶上另一辆，终于丧失了所有熟识的人，再一次到一个不知所云的目的地去。我和三弟抱怨说，或许我喜欢的旅程正是那种在一个小湖边，住在一个木房子里，什么也不干，就在里面呆着，这样的生活吧。他说，梭罗就是这样的。我想，我没有梭罗那种底气吧，更没有梭罗那样的气节，我只是一个中国众多普通人中的某一个罢了，也是千千万万个为今晚的月亮感到疲惫而受伤的人中的某一个罢了。</p><p>　　今天这月亮就很圆，虽然小，但是仔细看看，可以看到月亮上的灰蓝色的阴影和乳白色的外皮，架在城市高楼顶上那种泛着红光的灯之间。我说，这月亮很圆。是，哈尔滨云很少。三弟这样回答。</p><h2 id="第四日"><a href="#第四日" class="headerlink" title="第四日"></a>第四日</h2><p>　　我早早地出发前去一个叫做关东古巷的地方。到了才发现，这是一个和关东或者和古巷都无甚关系的地方，一个纯粹的商业街，却打着 AAA 级景区的称号，这实在是费劲。我希望在这里吃一顿午饭，却终于没有找到合适的东西。便到了全中国都可能有的地方去寻觅我想要的东西。进了一家东北菜的餐厅，随意地点了两份菜，却发现东北的菜的分量果然是名不虚传，我不小心点了两个人都吃不完的份。此时手机提示我我收到了些什么消息，我简单地扫了一眼，又出奇地立刻回复了几句，就把它撂在了一边了。</p><p>　　然后便出发去今天的另一个目的地，中国木雕馆。我是不知道中国木雕馆分为木雕馆和金丝楠木馆的，于是我稀里糊涂地走进了金丝楠木馆。我刚进展厅，便看见一个青褐色的小柜子。柜子大概有一米五高，分为上下两个部分，上半部分是竖着的一些密致分布着的等距的长方体木条，围满了上半部分的三边，而留出了面向我的这一边。下半部分是两扇对开的木门，也是呈青褐色，这青褐色上浅浅地游离着一些金色的波浪般的纹路。整个柜子呈现出轻微的上窄下宽。</p><p>　　就在我端详着这一个精巧的柜子时，一个年轻的女性便走到我旁边开始做简单地介绍。现在木雕馆很空，除了我这样游手好闲的零零星星的几个游客，便没有别的人了。她开始很热情地和我聊天，介绍各种各样的木料的来历、构造、设计等等，还讲了些什么清代家具和明代家具的不同什么的。为了解释这个柜子的木门设计之巧妙，她特意无视了“请勿触摸”的标志，将木门拉开，然后等它自动合上。这确实是我从未见过的精巧的设计。</p><p>　　我尽可能做出自己很感兴趣的样子，赞赏了明代家具设计的典雅大气，适当地问了不少的问题，却没想到这位更加热情，开始讲述更多的事情。到最后终于不再讲解和木雕相关的事情，而是讲到了自家鱼缸里养的叫银龙的两条鱼。在这样的一个多小时后，她似乎不小心因为什么我不清楚的缘由当我是一个从事艺术相关工作或者事业的人，然后以这个为假定说出了：想必你也是搞这方面相关的（木雕或者绘画，我也不甚清楚她所说的相关为何物）……然而她正要再往下接着说更多的话时，我最后还是忍不住在这里稍稍地打断了一下她道，我是学计算机的。</p><h2 id="第五日-1"><a href="#第五日-1" class="headerlink" title="第五日"></a>第五日</h2><p>　　坐在从亚布力滑雪场往哈尔滨的高铁上。我们退掉了之前计划的下午五点返程的票，改成了车程一个小时的下午两点出发的动车，代价便是从坐票变成了站票。于是四个人站在狭小的动车车门附近过道那里。一路上聊一些稀奇古怪的东西，讲一些稀奇古怪的故事。我不知道自己为什么要讲某些事情，或者对某些听到的事情保持兴趣。我想你是学文科相关的吧，三弟的某一个室友终于还是问了。是，三弟帮腔到。不是，我是学计算机的。幸好只有一个小时，不需要再继续消耗那么多的精力去构想一些有趣的、可以使这里闷热拥挤的空气不至于沉默的事情。就在我以为还有一段时间才会到站的时候，我们到站了。一路上，我没有机会看见窗外的景色，我的视线里的，是三弟的脸，三弟的一个室友的脸，和另一个室友正弯着腰趴在某一个座椅上睡觉的身影。</p><p>　　我暗自想到，他们的关系真的很好，可以肆无忌惮地开一些奇怪的玩笑，什么顽劣的、过分的玩笑都可以。我想起我自己在大学的室友们，就像是不太认识的一些人，连酒肉之交可能都不太称得上。每个人做自己的事情，有自己的奇怪笑点。我不理解他们有时突然在深夜里爆发的大笑是什么意思，就是那种一会咯咯咯一会哈哈哈的大笑，也没有那种精力去一一询问原由，我知道就算我知道了那么一两个答案，也只会陷入更深的不解之中。最初我在来到这个新的寝室的时候，我还会装模做样的询问一两句，后来便算了吧，他们或许对我是不是关心这样的事情感到无所谓，正如同我对关不关心这样的事情也无所谓一样。我不知道他们的大笑的意味，是想激起那些不知道他们为何而笑的人的注意力，或者仅仅是想大笑而已，这两种原因对我而言都是莫名奇妙的。</p><p>　　我也想发自内心地笑的，但是我找不到机会，更找不到原因。我怎么能期望找到那种可以真正令人愉快的事情。我明明清楚，愉快本身本是与不愉快相对的东西。只有在不愉快的存在下，愉快才显得弥足可贵；而比不愉快更不愉快的时候，愉快才真正地呈现了愉快本来的含义。如果随便一个什么人，一日日地都充满了愉快的话，我只能认为他是分不清愉快和不愉快的人了。像是把黑与白混作一滩一样，搞不清楚自己是否真的愉快，生活在一个自认为美妙的灰色的世界里，并称这种灰色为每日的愉快。但这样，当我们终于分辨出愉快和不愉快是什么东西的时候，愉快本身便不会那么愉快了，因为我们总是在愉快之中的时候意识到这样的被称为愉快的场景终将很快地逝去，否则这样的生活会变成某种日常而不再被人所珍视，而愉快会沦至单调无聊这样的意义，从而变成另一种不愉快。</p><p>　　所以我想：愉快本身性质是消极的。处在愉快之中，或者朝向愉快，或者背离愉快的时候，都是令人难受的，这比处在不愉快这样的环境里更让人难受，像是证明了愉快这种东西的无力。或者说或许愉快是在不愉快的大洋中扔进去的一颗石头，它所激起的每一个波澜都在敲打人逐渐麻木迟钝的神经，用这种微不足道的冲击唤起人对于不愉快的每一份回忆。所以可能对我而言，真的笑或者假的笑，都和哭没有多大的区别吧，只是嘴角的弧度不太一样罢了。</p><p>　　于是这一趟列车就是这么个东西，它是到达愉快和远离愉快的一个分界线，是我旅程的中点，也是下一趟旅程的预告。就在这么一种中间的点，神经不由得紧绷着，承受着一种庞大的、飘渺的感受，承受着这种不怀好意的涟漪。</p><h2 id="第四日-1"><a href="#第四日-1" class="headerlink" title="第四日"></a>第四日</h2><p>　　我走进了一家名为果戈里书店的地方，这是冰城这里著名的书店。看着里面充满了俄罗斯风情的装修，五颜六色的玻璃面板，和橙黄色的灯光，相较于外面的银白色，这里显得相当温暖而舒适。经过一个两层的小楼梯，一个规模不大的书店进入了我的眼帘。这个小书店被一个五六阶高的小楼梯划分为了两部分。前面一个较低的平台，里面摆着两排挺矮的书架，以及一两张装饰繁复的椅子。顺着这个平台正前方的楼梯而上，便到了第二块平台，这个平台沿着第一个平台的四周延伸，形成了一个不完整的高起的回廊。回廊两边都是书架，但是就这样一眼看去，就可以清楚这里没有多少书的。再回头看一眼，看见刚来的楼梯其实可以再往上，但是已经打上了 VIP 的标签。看来我所可以涉猎的知识，便在我面前的两块平台之内了。</p><p>　　我不是漫无目的地进入一个书店，我希望在里面找到一本名为《罪与罚》的书，一是我想到自己一直没有机会再把这本书看一遍，自己当时读这一本书的时候便是感到云里雾里的；二是我想到今年三弟的生日因为自己身在新加坡，也还没有送他什么书，我考虑着《罪与罚》是不是一个合适的选择。于是以这一本书为目标，我开始在这不大的更像是咖啡厅的书店里寻找它。我本来想着，这家名为果戈里的书店，应该或多或少有托尔斯泰、果戈里或者陀思妥耶夫斯基的书吧？可是我一本也没有找到，我希望找的《罪与罚》便自然落了空。我想轻微地谴责一下这家名为果戈里书店的书店，这让我觉得如果我要想瞻仰这些书的真容，非要什么拥有 VIP 名号的大人物不可。当然是我无端地谴责，毕竟就算是对于 VIP 这样的大人物而言，也不一定会有这些书的存在。</p><p>　　于是我两手空空地从书店出来，透过路旁的街牌，发现自己在一个名为果戈里大街的地方。然而这里为什么叫果戈里大街呢？这条道上什么也没有特别的，和我见过的每一座城市的样貌一摸一样。我或许想在这里搜寻一些和果戈里相关的东西，或者和东北相关的东西，但我最后却走进了一家日本的拉面店。一进门听到不太标准的日式欢迎光临，就在那一个瞬间，我想到如果我不知道什么样的欢迎光临是标准的，我或许就不会在意什么，也不会因为这一点小小的差异而搅了兴致，正如去那果戈里书店一样。我在果戈里大街上游走着时，想着可能三弟的考试快结束了，还是等着他一起吃晚饭吧，但终于在这样的考虑中四处溜达了一个小时以后放弃了，最终进入了那一家拉面店。拉面馆最先迎接我的，是糊了我一眼镜的雾气。</p><h2 id="第三日"><a href="#第三日" class="headerlink" title="第三日"></a>第三日</h2><p>　　中央大街是真的名不虚传。里面充斥着各种各样的俄罗斯风格的建筑，特别是那些各种深浅的绿色房屋，在耐克、以及 H&amp;M 这些店的标志下显得更为雅致而别具一格。一条熙熙攘攘的大街，在我到的时候，天已经差不多黑下来了。街两旁的行道树上挂着黄色的灯，将两边的房屋连接了起来，在夜幕下显得温馨。但这温馨是假的，寒风轰击着我的全身，让我感到我当时在雪山之中都尚未感受到的寒冷。路两旁放着许许多多的冰雕，这些冰雕自然比哈工大里面放着的显得更加精致复杂，但也终究是会在不久之后就化掉的艺术，而第二次被造出的时候，这些冰雕也就不是这些冰雕了，只是那些存在过的冰雕的复制品。并这些冰雕耐人寻味多的是那些被成为折衷主义或者巴洛克风格的房子。</p><p>　　我频频地掏出手机想要抓住那些印在我眼睛里的那些五彩斑斓的令我赞不绝口的建筑，直到自己的手失去了手的感觉也没有停下来。然后再一次抓住我注意力的是两个食物，一个是烤红肠、另一个是冰棍。虽然这名为马迭尔冰棍的、售价 15 元每根的冰棍我早有耳闻，也知道这是必然会在之后尝试的东西，但是这寒风劝阻了我立在那数十人的后面为一根冰棍排队的冲动。我只是站在那卖冰棍的地方之外，远远地望了一眼，假装自己有所迟疑地停留了一小会，然后继续前进了。</p><p>　　然后是红肠。我想起在这学期在新加坡的日语课上，老师在最后一节课上问寒假的安排时，我说，我要去哈尔滨。同学们说，那个地方的冬天很冷吧。但我说，那里有很多好吃的。他们问有什么呀。我说，一种叫红肠的东西。现在这个东西真正地出现在了我的眼前，10 元每根。但是在我正走近它想要买下一根来实现之前的回答的时候，我再一次莫名其妙地犹豫了。认为这不过是旅游景点常见的套路罢了，像这样的东西，别的地方也是有的，只是以不同的名字，不同的身份，出现在各个摊贩的名录上，并标着各种正宗云云的名号。于是我抬起的手被我放回了温暖的口袋里。就这样在冰城最出名的城市建筑群里呆了一段时间之后，我决定去寻找我的晚饭，以及拜访圣索菲亚大教堂。</p><h2 id="第四日-2"><a href="#第四日-2" class="headerlink" title="第四日"></a>第四日</h2><p>　　我看着呈上来的拉面中飘着的鸣门卷，它飞起的热气又一次糊了我的眼镜。在到了这里之后不知道第几次抱怨眼镜是多么不方便的同时，慢慢的消耗了这一碗拉面。就在这一碗碳水化合物被我全部吃下去的时候，我看见一条新的信息。三弟考完了，他说他好了，开始问吃晚饭的事情。这样的事情也是有的。这样巧合而令人啼笑皆非的事情也是有的。</p><p>　　我想，这个时候，我应该怎么办呢。如果是我的话，如果是我自己考完了的话，我会想招呼上几个酒肉朋友，或者比酒肉朋友稍好那么一些的零星的几个朋友，在一个可能比平时吃饭的地方略微好上那么一点却又不至于让我承受不起的餐厅吃上一顿，作为惯例式的别过。然而这样的惯例并不使人愉快，它既不是愉快的一部分，也不是不愉快的一部分，而是惯性的一部分，无关乎情感，仅仅是一种惯例。自然这样的饭局甚至会显得比愉快的饭局更为自得，就像是平时随便吃的一顿饭一样。虽然它有着某种仪式上的标签，却终究没有某种仪式的感受。</p><p>　　我想，这样的惯例或者仪式对于每个人来说，应该也是必要的吧，对三弟这样社交圈里如鱼得水的典范来说，应该会更为重要吧。于是我给出了这样的提议：请不用管我吧，叫上自己大学还好的朋友一起吃一顿吧，就当是别过了，后面再想抽出时间就很难了。然而最后他还是没有接受这个提议，或许会觉得难为情吧。确实或许会吧，像是将一个木雕馆里那种老房子拆下的板材制成的柜子摆在充满了明亮并带有玻璃现代风格的展示厅里那样不能称为和谐的场面，我也会在不能够搭上话的氛围里被击溃。毕竟历史和正在发生的已经是两码子事了，历史发生的一切都是某种执念留下的幻觉，或真或假，伴随着主观的某些微不足道的想法而变形。于是便觉得他做出这样的决定不可不谓明智吧。</p><p>　　于是我最后也接受了三弟的决断，抱着再吃一顿夜宵的想法前往刚刚得知的约定的地点。就在推开门的那一瞬间，寒风从外面扑进来问候我，但是刚刚拉面店所赋予我的热的感觉还没有消散，我就在这样的寒风中突然想起来刚入肚的拉面，同时觉得温暖。</p><p>　　我需要四十分钟到那里，我这样回复了三弟。</p><h2 id="第六日"><a href="#第六日" class="headerlink" title="第六日"></a>第六日</h2><p>　　在吃完午饭后告别了三弟，便第二次朝着中央大街前进。这一次，我是奔着之前被自己放弃的马迭尔冰棍而前往的。这一次我从中央大街的腰部的某一个支道上进入了主道，随便选了一个方向，然后笃信着我所寻找着的马迭尔冰棍就在前方。当我再一次看向那些我曾经赞不绝口的建筑以及房屋，却总觉得缺了那么些味道，我想是这或许不够寒冷的缘故，也可能是现在还没有进入夜晚的缘故，还是说因为我知道我将离去而遇见了一些别的感受。我说不清楚。这些即使在白日中也点亮着的霓虹灯招牌，间杂在这些富有着历史感的建筑间闪闪发光。我这一次无心再一个接一个地端详那些冰雕了，我只想找到那个驱使我再一次来到这里的马迭尔冰棍。</p><p>　　我这样盲目的往前前进着，但是却发现我已经走到了中央大街的尽头，便终于意识到自己在十字路口选择了一个没有马迭尔冰棍的方向。这让我感到懊恼，于是我转头开始往回走。然后我立刻发现了一个我上一次便看见但是却没有进去仔细观察一番的建筑，中央书店。没有在果戈里书店找到的《罪与罚》，这里应该会有的吧，我这样想着，进入了书店。这个书店和果戈里书店完全不一样，没有果戈里那种高雅温馨的氛围，里面密密麻麻的是走动着人群；也没有像果戈里书店那样坐在地上看书的群众，也没有停在走廊上拍照的人群。这个书店天花板很高，整个宽阔的房间也几乎没有什么装饰，几列一进门就能看见的书架，和左右向上一直延升到了天花板的书柜。这意味着这里有许许多多的书。我想着我计划里的书或许终于有着落了。于是我埋头进去，寻找我想要的书。</p><p>　　不久，我在那里找到了我正在寻找的书。书很厚，封皮很薄，不像是近段时间常见的把经典或者不经典的书都统一用又硬又厚的封皮包起来那样的做法，而只是在书上包了一层简单的封面就放在书架上了。它甚至连腰封都没有。很中我意。封面和封底都是是完完全全的猩红色，从前到后都是大片的猩红色。正面用端正的某种楷体的变体竖着写着黑色的“罪与罚”三个汉字，以及横着写的 crime &amp; punishment 几个英语字母。悬在这一系列字上方的，是一把被手握着的黑色的斧头。在剩下的空处标着陀思妥耶夫斯基和译者曾思艺的大名。很中我意。</p><h2 id="第五日-2"><a href="#第五日-2" class="headerlink" title="第五日"></a>第五日</h2><p>　　闹钟在五点半准时地把我叫了起来，今天得立刻就离开床铺，我拉开了自己房间的门，示意三弟自己已经醒了，然后穿上衣服出了自己的卧室。透过那扇就在我的卧室旁边的门，我知道三弟也已经起来了。他正坐在自己的床上弯着腰发呆，上衣尚还没有穿上，腰上和肚子上的少些赘肉略微地鼓了起来。而被子被推在一旁，形成了一个突起的泡沫。三弟还是像高中那样每每起床之后就要盯着某个怪异的方向，神志不清地发会不明所以的呆，同时也是比高中的时候胖了一些。</p><p>　　想罢这些我就移步去了卫生间洗漱去了。我再一次出来的时候，三弟已经穿好了衣服开始给室友打电话叫他们起床了。待到我们两人都准备妥当的时候，便出了门。预约的师傅搞错了我们上车的地方，不过总算是顺利坐上了车。本以为车上不会有别的乘客，没想到这一次还是受到了冰城出租车乱象的捣乱，车上坐着另一位去哈尔滨火车站的乘客。不巧的是，另外两名并未来得及准备妥当，而那个没在我们预期之内的乘客的火车在我们的火车之前，着急着去赶自己的车。我们并不占理，就只能先舍下两位室友友人，继续乘着这辆车前往火车站。</p><p>　　然而就在我们到达火车站之时，却发现火车的出发时间比我们原以为的早了二十分钟。而三弟的室友们便没了这个赶上这班车的机会，他们可能得买新的票了。</p><p>　　安稳地坐在了火车上之后，就开始处理那两位室友的行程，好在目前尚有别的车可以到达目标。就在三弟处理着这些我非常不擅长对付的事情的时候，我开始观察车厢之外的情况。外面是一大片被枯树弄得支离破碎的雪原，在这些枯树的间隙里，有着几片不大不小的类似田垄的东西。我之所以可以知道那些是田垄，是因为在那洁白的雪地之中留着规则的被犁过的平行的痕迹。在这些田垄之上，极有规律地堆着些要么圆柱形的、要么三角锥形的谷堆。有的阳光会穿过枯树照在雪地上，使雪地看起来被什么东西踩过一样。远处的山，迷迷蒙蒙，说不清楚是被雾罩着还是什么，呈现出一种很深很暗的藏青色，就像是只调了一点水的花青色。时不时我们会路过一些屋顶上堆满着雪的屋子，却没有见到几个在雪地里行走的人，只看得见地上偶尔稀稀疏疏的脚印。就在我观察着这些平日难得见到的北国风光时，三弟那边的事情也处理结束了。</p><h2 id="第一日"><a href="#第一日" class="headerlink" title="第一日"></a>第一日</h2><p>　　在不知原因地三次延误了航班之后，终于在比原计划晚了三个小时的时候，我到达了冰城。在我假想出的寒冷的空气的威逼下，我准备好了手套、围巾以及两层袜子，却发现外面远没有想象的寒冷。赶上了从机场到火车站的大巴之后，便注意到了坐在一旁的一对父子。虽说是注意，但不是我的眼睛看见了他们，而是我的耳朵抓住了他们交谈的声音。儿子坐在了我左边的座位上，而父亲则是站在或者蹲在儿子的旁边。父亲之所以这样是为了和儿子说话这一点我很清楚，但我也不愿起身离开我的座位而给父亲一个方便，因为车已经开始移动了。</p><p>　　从这对父子零零星星的对话中我大概了解到，这个儿子在广州某地读书，年龄大概在十余岁，声音尚未变得富有男性的特点。这一次是从读书的地点回到哈尔滨旁的某各小城市里过年。父子会在哈尔滨住上一晚上，然后第二天就赶回家。令我感到奇怪的是儿子读书的内容。我只大概听到儿子这一年的课业是背诵《论语》；下一年的课业是背诵《孟子》，再之后是背诵《易经》和《黄帝内经》。</p><p>　　你要记下老师讲的所有的东西，父亲这样说道，它们以后都很有用。爸爸我没有什么学问，我不懂什么《论语》，但是知道这些东西很有用，你把这些东西给爸爸记牢了，永远都不要忘记。儿子支支吾吾地回答，他不觉得有什么用，自己在生病的时候，老师给扎针也没有治好。于是父亲又重复了一遍上面的话。接下来父亲开始挨着挨着询问课业的事情、生活的事情。最后说，爸爸下次再带你回一次家，再下一次你就该自己回来了。你也大了，该自己走了，这个不难。旁边的乘客也帮腔到，对的，这个不难，都是这么过来的。儿子先是小声地回答自己不行，后来才慢慢地问着父亲自己能不能有一支手机，这样就可以自己回来了。后面父亲又反反复复地交待了不少的事情。</p><p>　　我一边有心无心地偷听着这一对父子的对话，一边看向窗外。窗外没有什么景色，在黑夜里面，无非就是在高速道旁往后滑坠的立着的树，这些树都没有叶子，光秃秃的，这些光秃秃的树使人感到平静。你早点休息吧，我这边应该不会有什么问题了，我编辑了这么一条信息发给了三弟，然后再一次把视线转回了窗外。</p><p>　　直到下车的时候，我瞥到了这一对父子。虽然看不清楚他们穿了些什么衣服，但确实地看见他们一起下了车，朝着我不会再遇见他们的方向前进。没事，你再适应适应吧，三弟这样回复到。原来他还没有睡啊。</p><h2 id="第七日"><a href="#第七日" class="headerlink" title="第七日"></a>第七日</h2><p>　　我终于踏上了回去的路途。然而就在这回去的一天的夜里我一点也没有睡着。房间里墙上钟的声音在不停地刻板地踢踢踏踏，时不时也传来冰箱的些许噪声，房间之外的马路上尚有不少的汽车正在道路上行驶着，出租车“有人的”黄色标牌在夜色里拉成一条长线。三弟今晚回到自己的寝室收东西去了，这个二室一厅一卫一厨的屋子里现在就躺了我这么一个人。</p><p>　　我不知自己出于什么样的目的，没有和三弟订下一起返回成都的飞机，而是古怪地晚了那么两个小时。在这一天之前的晚上，三弟劝我还是自己走吧，不用起那么早了，可以多睡一会。我拒绝了这个提议。于是便还是决定一起去机场。然而我正住着的并不是什么繁华的地段，没有特别多的住户，尝试多次以后，我也没能预约到合适的出租。那走去地铁站吧。我想，凡人的偏执乃是危险的东西，而这一个决心是我已经下好了的。于是我就在这样踢踢踏踏的声音里，看着时间从 2020 年 1 月 11 日的 11 点一点一点划到了 2020 年 1 月 12 日的 5 点。我起身去洗漱，零零碎碎地吃一些东西，再检点了一遍有没有忘记了的东西，顺便检查了一下三弟的房间有没有留下什么他忘记的东西。在仔细地确认这些无误以后，我开始坐在客厅的小沙发上发呆。</p><p>　　这样，我在这寒冷的地方的旅途就竟然就要结束了。我终究没有吃马迭尔冰棍或者是红肠，更不要说别的什么的东西。但是我又没有固守没有人的城池这样的想法，或许这就是时候离开了吧。我心里暗想到，三年后的这一个时刻，我可能会再一次坐在现在我所在的房间里，思考一些相似的问题。想到这个，我不免觉得奇怪，原来我还要回到这里来呀，对，三年之后，我会再到这里来，可是那个时候我或者这里的人们都是什么样了呢？</p><p>　　就这样坐在黑暗里，我终于下定了决心出门。把要是小心翼翼地放在了桌子上，再环顾了一下这个不大的空间。一个双开门的冰箱，一个只能坐下两人的小桌子，坐下两人的小沙发，一台大电视，一个小巧的厨房以及浴室，几面墙上都挂着的小画。于是我再这样望了一眼，出门将门关上。</p><p>　　我是在将来真的会回到这里来，还是会到一个别的什么地方去呢？</p><h2 id="第二日"><a href="#第二日" class="headerlink" title="第二日"></a>第二日</h2><p>　　在时隔上一次见面将近一年这样的时刻，我站在哈工大校门的广场那里竖着的巨大的校庆的冰雕的旁边，看见了耳朵被冻得略微泛红的三弟。这个时候正是哈工大的学生从寝室或者图书馆出来寻觅午饭的时候，在滑溜溜的地板上，小心翼翼地走着许多带着羽绒帽子并把手揣在兜里的人。在我左前方立着一个高大的冰雕，冰雕的下面刻着哈工大的校徽，以及 2020 的纪年的数字，在我的右边是一个用冰砌成的国旗的围栏。我向三弟打了一个简单的招呼然后问我们现在去哪里。</p><p>　　很快，我们抵达了哈工大的食堂。哈工大的食堂是一个怪异的物种。从外面看过去完全不像是在营业的样子，作为一个闯入的外来人，我或许有可能永远都不知道在那垂着的重重的帘布一样的黑色空间之后，藏着一个卖粥与饺子的地方。</p><p>　　于是在这里，热气第一次扑向了我的眼镜。三弟提议吃饺子之后，接着问我要多少，我说二两。他露出了怪异的表情，眼睛瞪得很圆以表示难以置信，然后再一次确定了我的答案，端给了我一份二两的饺子。盘子里的饺子大多不太完整，也不太大。这些饺子不像是平时吃到的饺子那样中间鼓起，而更是呈现出一个扁平的状态。说是二两的饺子，估计一下也就是十个左右的数量。这样我就知道为什么三弟奇怪地看着我了，原来二两的饺子是如此分量微小之物。</p><p>　　于是后来我又去补了一杯粥。本来我是想要一杯豆浆的，然而这里中午没有豆浆。我自作主张地给三弟也要了一碗，尽管他之前说过自己不要豆浆了。这粥是不太甜的那种，不是我喜欢的味道。在若有若无地聊着天的时候，我终于决定去加糖。然而加糖这种事情是不可以一步到位的，在折腾了来回几趟之后，我才终于仰起头，将碗里的黑粥一饮而尽。</p><p>　　待到我放下碗，才第一次认真的注视着三弟的面貌。毕竟也是有将近一年没见了，虽然说不清楚具体哪些东西发生了变化，我却感觉到一些不一样的地方。我指的不一样，自然不是指他的头发如何地变换了形式，或是眼睛如何地望向不一样的方向，而是一些别的东西，一些我的视线抓不到却可以感受到的东西。他可能也趁着在这个时候注视着我吧，我想。</p><h2 id="第五日-3"><a href="#第五日-3" class="headerlink" title="第五日"></a>第五日</h2><p>　　走进门，把随身的东西都撂在一边，然后走进自己的房间把围巾和外套都丢在了床上，折回了客厅，然后摊在了沙发上。疲惫的影响力，真的是不容小视。我就这样茫然地架在沙发上，三弟却看起来很精神。我确实是短时间内没有力气再说一些新的话，于是就任由我的身体稀里糊涂地倒在沙发上。然后我开始很仔细地，试图尽力地消耗着剩余的所有力气那般，盯着头顶的灯。灯是三层蓝色的荷花叶子一样的图案的组合。每一层之间都很好地错落地分部，不至于拥挤。每一朵花瓣都是向外舒展的、完美的、圆滑的弧线。它从那里发出柔和的光，我接触不到它，它离我太远了。三弟坐在一侧开始试图找些有趣的东西来看，我在旁边继续倒着。</p><p>　　我想，这一趟旅程就这样快要结束了吧。就像一顿火锅已经下完了所有的肉一样，后面的期待也如同捞起来的一块块肉一样，终于寡淡了。也并不完全是这样一个事情。在刚才从咖啡馆回到住宿的路上，三弟和我说他在和老板交接任务的时候，知道了明日自己需要加个班，完成一个仪器的调试。我听着三弟这样一段话，心想自己去冰雪大世界以及二访中央大街的计划就这样被取消了一大半。</p><p>　　我看着自己呼出的水汽在空气中凝结成一片飘摇的白雾，在我伸手抓到那段白雾以前，它们就没影了。如果不是哈工大这片路灯的照耀，这片白雾也就不会出现在我的视线里了。一路上依旧没有什么行人，许多店铺也早早地关了门。我想这些店铺就算开着，也不会有很多人去了，这里已经放假了。我就在这样想着的时候，越发觉得身上正承载着的疲惫的真实与复杂。</p><h2 id="第四日-3"><a href="#第四日-3" class="headerlink" title="第四日"></a>第四日</h2><p>　　毕竟是晚高峰，放在哪里，晚上七点应当都是晚高峰。就晚上来看，忽略掉路旁的冰以及行人穿着的厚衣服，这里的晚上和上海的晚上或者成都的晚上都没有特别的差异。路两旁排了一列闪亮着的灯，灯前排了一列匆促行走在人，匆促的人前排了一列公交车站，公交车站前排了一列等车的人，人前面排了一列排队的公交车。就是很朴素的夜晚的景观，放在中国哪座城市里都是的那种晚上的景观。纵使是冰城，也不可能四处都是冰雕，总会有些不那么哈尔滨的时候的。</p><p>　　终于经历了一路走走停停，我到了目的地。就在我快要到达的时候，手机上的新消息告诉我三弟也到了。时间正好。走进约定的烤肉店再转到二楼，就在进门不远的地方，我见到了三弟。之后就是观赏菜谱的时间。虽然我总是不愿意担当起点菜的重任，但总有些事情不能顺心如意。三弟就是这样，每次在我看着菜谱的时候，他总是要让我也点一些什么东西，不论我怎么推脱掉这份差事。于是我只能打开菜谱，逐页地翻着。这确实是相当厚的菜谱，我很久没有看见这么厚的菜谱了。里面的菜也很有意思，比如一个叫大串的东西。就在我计划随意点两串的时候，我被三弟制止了。于是我想起了中午在东北菜馆的尴尬境地，终于还是缩减了点的东西。然后将菜谱让给了三弟。这些事情还是交给他吧。</p><p>　　这家店不知为何，据说今天的人特别的多，也就使我们上菜的速度很慢。一道菜往往等不到下一道的到来便早早地投了地府，我本以为肚子里占着碗拉面和章鱼丸子便不会吃什么东西，但还是老老实实地吃下了一顿饭的分量。不过三弟定然是没有吃饱的。我们又追加了一份什么榴莲烤饼，但它终于没有被端到我们的桌子上。粗心的服务员忘记了我们的加餐，于是我们坐在桌子上聊了很长一段时间的天——上一次并没有来得及聊到这么多的东西，但所谓聊天，也就是些琐碎的话题，没有什么中心，也没有什么重要的话题。我大概描述了一下我在新加坡的生活，三弟大概描述了一下他在哈工大的生活。</p><p>　　与这顿被服务员忘掉榴莲烤饼的美中不足的晚饭不同的是，三弟的生活听起来很幸福。</p><h2 id="第一日-1"><a href="#第一日-1" class="headerlink" title="第一日"></a>第一日</h2><p>　　终于，我离住宿的地方近了。我刚到冰城的时候，这里就下起了雪。我在雪里等着出租车，旅途遇到一群推销着住宿的人。仓促地拦了一辆车，不太顾砍价的，我逃离了这个地方。还好这里离住宿的地点不太远。一路上师傅开始与我交谈，和我聊着哈尔滨的各种事情。他似乎没有看出我是外地人，先是用本地的话和我攀谈起来，发现我没有完全听懂的时候，他便开始试图说一些更类似普通话的语言。他问我是来做什么的，我说我是来看亲人的。这句是我出于自我保护而说的一句谎话，后来想想却的确如此。我若不是来看亲人的，又是来看谁的呢。</p><p>　　我被司机放在了小区的正大门前，按照之前房东的说法，我顺利进了这个小区。小区很是安静，在这个稍微偏一点的地方显得很舒适。四周实在是安静，地面上由于正下着雪，已经满满地铺了一层。树上挂着黄色的灯，也是这里唯一的光源。这里唯一不和谐的是我这个就算在雪里也隆隆作响的箱子的声音。</p><p>　　我的前面是一条洁白的长路，在黄色的光的照耀下也呈现出些许黄色。我忍不住回头看我走来的路，在我来的那一边，它本也应如同我前方的道路一样整洁，现在却烙上了一串凌乱的脚印以及不连贯的纠缠着的两条长线。拖着箱子、破坏着着安静与整齐的我，在这个时候很清楚地知道：我不属于这里，我只是造访这里，拜访一位亲人，然后再从这里离开。</p><p>　　我之所以在这里停住，恐怕不是由于掌管生命的神这样对我说：请停留在这里。私以为，我之所以停留在这里，是因为我决定如此，而不是其它什么花里胡哨的原因。这件事情的发生既不是我的计划，也不是像我的某个人所构造的计划，它根本就称不上什么计划。尽管我在甚至离开上海前往新加坡以前就如此打定了我要来一趟哈尔滨的主意，甚至是在前年的夏天，我就做出了这样的打算。但它仍然算不上是一个计划，这趟旅程毫无理性的成分，既不考虑支出，也不考虑时间。只有“到这里”是重要的，这是计划的一部分；但是计划也没有别的部分了。被问起我为什么来这里，我谎称自己是因为自己想感受一下寒冷，或者是自己是对东正教教堂颇有兴趣。但我清楚地知道这是敷衍别人以及自己的理由，我知道理由就只有一个，而且正是为了达成这个理由，仅有“到这里”才是重要的，也是必要的。</p><p> 　　这里寄寓着我的一部分生命，我必须到这里，将这一块回忆填上。</p><h2 id="第四日-4"><a href="#第四日-4" class="headerlink" title="第四日"></a>第四日</h2><p>……</p><h2 id="第五日-4"><a href="#第五日-4" class="headerlink" title="第五日"></a>第五日</h2><p>　　站在雪板上，我感受到了最大程度的恶意。我没有任何移动的可能，我所能做的就是坐在哪里，或者任着向下的冲动终于把我一直拽下去。我停不下来，也改不了方向。我所驶向的地方既不出于我的意志，也不违抗我的意志，它独立于我的意志。决定我方向的，终究就是我在踏上这个路途上那一瞬间受到的力。除此之外，再无他物。</p><p>　　我总以为，在不断挣扎的时候，我能够通过某些途径改变自己行进的方向，然后到达我所期望到达的地点；但终于发现这是个徒劳。于是我就停在了我意识到了这一点的那里，感到挫败。我想，如果将这个倾斜的雪道变得水平，那么我所面临的另一个困境便变成了：我只能留在原地，而不是像现在那样向下滑去。或许那个时候，维持移动的唯一便是惯性本身，它既不是无形时刻存在的重力法则，也不是我渺小的意愿。这个雪板就会载着我各式各样的胡思乱想，没道理地一直往前，直到这个巨大的船只撞上了什么东西，终于再也不能移动。</p><p>　　就像这样，我要么在雪上仓皇地四处乱撞，要么就倒在雪地里。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>　　这篇罗嗦的，也没记下很多东西的后记是在第五日受到清华某友人的启发后打算写下的。本来是计划完成一份详尽一些的、3w 字左右的文本，但终于在离开了冰城以后完全丧失了继续完成它的氛围和意念，就如同我在离开那个城市时所担心的那样。所以终于大部分内容都停留在了停留在哈工大小咖啡馆的内容，只是后面草草再补了一些东西。</p><p>　　这篇文本也并应该包含太多的深意，甚至有很多相当重要且关健的事件出于各种考虑以及个人的懒惰终于没有添加进来。简单来说，这或许是因为离开了那里而被迫腰斩的一篇小文章。或许是到了后面越发觉得自己的笔之沉重，终于不能再将原本定下此题的勇气重现出来。</p><p>　　更多是对当时一些思绪的整理，就没有更多的东西了，且当作胡乱作文的结果吧。</p><p>2020-1-11，作于冰城哈尔滨</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公开信-给YT的第二封回信</title>
      <link href="/2019/essay/%E4%BF%A1%E4%BB%B6/%E5%85%AC%E5%BC%80%E4%BF%A1_%E7%BB%99Yuting%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%B0%81%E5%9B%9E%E4%BF%A1/"/>
      <url>/2019/essay/%E4%BF%A1%E4%BB%B6/%E5%85%AC%E5%BC%80%E4%BF%A1_%E7%BB%99Yuting%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%B0%81%E5%9B%9E%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-lhZPoJyV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="438562829" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>YT，</p><p>　　想起来这一封信也是，好像好几次打算开始，都没能完成，真的是非常抱歉了。想着上一封回信被我从上海带到广州，又从广州带回上海，再从上海带到新加坡，若不是一个契机，恐怕又要被我从这里带回去了。时间太久，恐怕之间好些事情已经有变化了吧。在这一次的追加之前，是在我 11 月动笔之前遗留的信的内容。这之后的事情，就留在这部分之后吧。</p><p>7-29 日书：</p><p>　　很抱歉已是拖沓了如此之久了。一段时间以来，我常常想起，或许我应该提起笔来写这一封信，如同每日起床时我想起我的琴，但每当太阳落下的时候，这种感觉就丧失殆尽。以至于当我意识到，过了这么久了，我居然都快要离开中国的时候，我还没有真正开始写这么一封信，就感到一阵无奈。倒不是为事情本身无奈，而是为我自己无奈。</p><p>　　这一个学期发生了不算多、但也不算少的事情。除却学业自接近半期开始初露爪牙这些事情，还有出国一条线时显时隐。个人的心境在这长期中，似乎受了些扰动。或许这是无法提笔的根本原因吧。但这些扰动的原因或者影响，我都是说不清楚的。</p><p>　　首先是对上一封信件文风的回应吧。说一个人的文字有些许味道，是很高很高的赞扬了；或许我的信的风格是变化的，是不稳固的，所以我并不知道自己的风格是什么，所以更没有什么有心之举了。或许我的部分语言结构受日本文学翻译那一脉，或者日本文学那一脉影响很深吧。在高一那段时间，可以说是疯狂地看各种书。当时，除了忙社团和班级活动一堆事情，也就只想看书。那段时期看的书，最多的就是日本文学了。并不是说自己对日本文学有多么深厚的喜爱，而是那种温馨与悲凉交错的感觉，让人觉得真实而深刻。</p><p>　　YT 的文风就和我迥乎不同了，有一种细致明媚的感觉。仅就一系列常见的语气词，用法及效果差别都很大。因为拖欠了如此之久的回信，又时不时想着要回，所以这封信我也是看了好几遍了。而每一次的阅读体验都是相对一致的，虽说内容或各种变化，却有一种稳定含蓄的积极情绪。虽说我写了很多信了，但是真正的回信这却是第一份，这封回信还是出乎意料地长。巧的是，就在这不久后，我接到了另一位同学的回信，不过这是另一个诡秘事情了。</p><p>　　听 YT 谈面包，我想到或许自己更喜欢做一个厨师胜过做一个研究者。或许因为下厨只是因为兴趣，而且也不经常，所以可能对美食的制作有一种自然的好感吧。仔细想想，为了一道小菜围着锅炉转一两个小时还是有点累的。所以干脆做个品尝者好了，见识到没见过的食材和做法永远都是令人激动的事情，虽说常常标新立异的菜并不合人胃口。说起面包，我倒是一直认为越丑的面包味道越好，那种形状奇绝，浑身疙瘩的面包估计就是我的最爱了。</p><p>　　回信中 YT 也对后悔有了一个表述，于是我更清楚地意识到，我确实离这种感情太遥远了。于是说起我的好朋友的事，如果以“如果……就好了”这样的评判去评价当时的那一次选择，我是不后悔的。我有一个非常值得怀念的高中生活，我的朋友也和我一起度过了很多事情。但这不是我不后悔的理由，这不后悔并没有什么理由。这些事情只是恰如其分地发生了，然后事情总会继续往下发展的。至于那个或许“有意味”的团建就是如此，我只是在零零落落的瞬间中意识到了道路的分叉。分叉不是被哪一次偶然构建在那里的，而是一直都在那里的。所谓联结，或许不是执着于道路的方向是否一致，而只是一种联结罢了，一个名字或者一种理念。至于为什么会有一些惋惜之类的情绪呢？犹如一块巧克力，咬下这一块的人都会意识到，这一块巧克力的一部分丧失了，一种味道在被获取的时候丧失了另一部分味道。当巧克力的一部分味道被知晓的同时，其他千千万万种味道就丧失了。惋惜或许就是如此吧。</p><p>　　不过说来也巧，YT 居然有极为类似的经历，只是发展方向截然不同。YT 在信里面有很多的推测与猜想，这确实是一件有意思的事情，只是我不太擅长做出这些假设。</p><p>　　还是很羡慕 YT，不论顺或者不顺，生命中都有如此多有意思而重要的人。我听了很多人的故事，其中不乏有如小说般出人意料、走向戏剧化的故事。但最后还是更喜欢恬静美好的故事，YT 的故事就已经很是恬静美好了。我或许向往一个恬静美好的生活吧，但是自己的生活又是恬静得过分，可以算波澜不惊了。安稳着安稳着，又想来些猛烈的东西，然而这样的东西又使人感到恐惧。所以就在这样安稳，而向往着波澜的生活中避免着波澜，继续着安稳。</p><p>　　说到这些事，说来也怪，我碰到的感情事项不算多，但都是以诡秘而单调的模式出现的。想来也是无聊的些许生活琐事，真要谈起怕是枯燥之至，若想要听，我再抽时间谈谈吧。总之就是如此。说到这里，可以大概谈谈之前有提到的“朋友”的事了。对我而言，友情是一个非常广阔的概念，但是却仅仅适用于一小波人。无疑，我对“朋友”是看得很重的。这里当然指的金兰之交以上的朋友；无论在谁的眼里，这样的朋友恐怕屈指可数吧。我也说不清楚一个朋友在我的生活中会扮演怎样的角色，有时我觉得他们是我的一部分，有时我又觉得，他们或许远离我会更好。这倒也并不是一种飘忽不定。对很多东西我都是变化无常，但是朋友却不是。我说不清楚这是一种尊重还是什么，更多来说，与朋友的相处就如呼吸一般正常，如同张开自己的嘴，或者挥动自己的手臂。有如自己思想的延升，感受到了一些自己感受不到的快乐与痛，然后有了一种一同体验的感觉，便是如此。</p><p>　　以上便是之前的内容了，上一次差不多也快到了结束的位置。我再看了一遍，大概小改动了一两处吧，别的便是如旧了。其中的几点，可能现在 YT 会有不一样的感受吧。特别是我给出的“积极”、“明媚”、“恬静美好”这样的描述。不过还是希望生活大部分时间都会如此。那么我先大概讲一下我这边的情况吧。正如我在前一部分描述的如此，尽管某些细节发生了很大的改动，生活还是如同往日一样前进。更离谱的是，由于这里常年夏天的气候，连天气的转变都不明显。每一日的区别便更加地小。</p><p>　　或许你会对这边我做的科研有一点兴趣吧。这边做的工作是自然语言处理的一个小分支工作。研究的是句子间的联系。简而言之的话，语言学家基本认为大部分句子间的联系可以分为四大类：下文是上文的展开或收束、下文与上文形成反差或对比、上文与下文构成因果关系、上下文间具有时序关系。这些关系大概有句子间具有关联词和不具有关联词两类。句子间没有关键词的这一类的判断非常困难，这就是我这边的工作了。本来以为九月份可以结题，因为已经做了一段时间了。后来发现最初的设想不够有效，于是只能转变方法。后面又尝试了一两种新的想法，还是差一点。最后的思路大概在一个半月前提出，然后在一段时间的工作之后认为这个方法有效，但是距离本任务的最佳成绩有非常细微的差距。在这个情况下挣扎了很长时间，知道上一周周末终于有了突破性进展。想起来在这段时间里，好长一段时期就是有空就到实验室看样例分析句子结构，也是很辛苦了。科研这边的情况大概就是这样了。</p><p>　　然后是日语的事情。我也没想到居然自己会修日语这一门课。这确实是一门挺有意思的语言，也学到了不少东西。今天这刚考完口语，看着日语老师在我离开后在房间里面收东西。我想，这门语言在以后会以如何的形式存在在我的生活里。大概就是那一瞬间的事情，我大概意识到我的交流生活就快结束了。然后熟悉的感觉便再一次到来了。就是那种说不太清楚的难受的感觉，像是现在某些东西往往如此的平淡，总因为种种原因而在生活里消失了。在日后回忆起的时候，一种模棱两可的气息就会涌起来。像是怀疑起自己经历过的岁月是自己的还是像自己的某个人的，像是自己暂时保管着这样一份回忆，觉得这个事情居然真的发生过那样，感受到恐惧。这种恐惧或许是我生活中最执拗的情感了。发现自己不小心扯到这里来了。</p><p>　　那接着这个问题谈吧。YT 看起来是最近遇到了一些“琐碎”但是却难以消解的压抑情绪吧？既然现在不是很清楚 YT 指的是什么，那先谈谈我的吧。我之前应该也说过，自己并不是一个十分积极的人。我之前怀疑过自己有没有抑郁，我想用复旦的心理测试那里试一试，但是它的网络频繁崩溃，后来也不了了之了。我想自己如果还有那么几个真心的朋友，情况或许就不会太遭。我现在没有太怀疑这个问题，可能是我已经忘了吧，也可能是我觉得不重要吧。</p><p>　　啊啊…这后面一段我反复改了好多次，但终于没有找到很合适的东西写下来。抱歉…这一部分我可能不太能直接接下去。我想我在说下去会更多地把一个悲观的世界观展现出来，这个话题我这边先就此打住吧。可能每个人有着自己的痛苦与解脱的方式吧。说起上一次推荐的《荒原狼》，尽管很可能是误读，但我觉得最惊异还是那种态度。那种意识到人生无从寻找价值却仍然创造一种价值的态度。这样的表达不是很合理，但我想，大概就是这样了。</p><p>　　那么，我这边的情况就是这样了。很难说是一个积极的回应，不过还是希望 YT 能够把压抑或者难受吐露一些出来。说不定我只是不擅长处理我这边的。再者，不论怎么说，我都慢慢开始意识到这个时代内在的一种无奈。我感到不是说选择怎样变多，或者说生活如何充满物质、人的生活如何的空虚，而是那种使生活延展下去的动力显得越来越模糊。（一种偏激且极为悲观的看法吧）所以容我先胡乱猜测，也许某些东西，我们所有人都需要找到解决得方法。</p><p>　　回到这个话题早开始的起因吧。电影的话我真的不太能推荐出来，毕竟自己看得十分有限。小说的话，如果《荒原狼》现在还没有来得及读的话，我会再推荐一次。可能再推荐的话，我可能会给卡夫卡的《审判》吧，如果从不同于法律的角度考虑，说不定可以发现新的东西。按照之前，我还是附上推荐的音乐。这一次，在这个状态下，我可能推荐的其一是《马勒第九交响曲》。至于原因，我很难说清楚。它的张力在不同人的面前定会有不一样的感触。其二是过于有名的巴赫的《恰空舞曲》（BWV1004-5），理由同上。不过也有可能这两组都听过了吧……</p><p>　　那么，这一次先如此了。再一次为自己的不守时感到抱歉，以及希望使用电邮不会显得过于随意。最后，希望在你回信的时候，你会感到更快乐一些。</p><p>　　廙水</p><p>　　顺颂清安</p><p>作于 2019 年 11 月 12 日。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给LZ回信</title>
      <link href="/2019/essay/%E4%BF%A1%E4%BB%B6/%E7%BB%99Luzhi%E7%9A%84%E5%9B%9E%E4%BF%A1/"/>
      <url>/2019/essay/%E4%BF%A1%E4%BB%B6/%E7%BB%99Luzhi%E7%9A%84%E5%9B%9E%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Sorry, password needed.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="db1d9cb1fc9d9f93591b8e70963e65f5375c795d9be771598b7d2cb5134eb560"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公开信-给YT的回信</title>
      <link href="/2019/essay/%E4%BF%A1%E4%BB%B6/%E5%85%AC%E5%BC%80%E4%BF%A1_%E7%BB%99Yuting%E7%9A%84%E5%9B%9E%E4%BF%A1/"/>
      <url>/2019/essay/%E4%BF%A1%E4%BB%B6/%E5%85%AC%E5%BC%80%E4%BF%A1_%E7%BB%99Yuting%E7%9A%84%E5%9B%9E%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-NiSOydIG" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1422978054" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>YT，</p><p>　　至于怎么称呼，居然想了好一阵子。希望这样叫不会显得尴尬？算起来，好久不见了。上一封信遗失了真是遗憾，推荐书和音乐这些只能期待有可能出现的这封信的回信了。剪纸也就没有办法了。事情是因为残缺才富有诗意的嘛，不过这也是我喜欢信这种交流方式的原因。如果是邮递的信，这种意味也就更重了一些吧。那种发出去就可能杳无音讯的东西，真是蛮有意思的，这也是信的命运吧。</p><p>　　其他的事情暂时先撂着，我尝试一下回答那三个问题吧。初次看到三个问题，以为第一个是最难的，但仔细想想是最后那一个，也不存在什么隐私之类的事啦。那我就尝试从这个最难的问题开始解决吧。</p><p>　　之所以说这个问题比较难，是觉得几个形容词两个形容词离我蛮遥远的。我查了一下“懊恼”的定义：“因委屈或愧悔而心里不自在。”给的例句是“即使被别人误解，他也并不懊恼”。遗憾的意思我倒是知道。但是这个最字就很难了。说我是一个沉闷的人倒是可以，但是这两种感情似乎离我很是遥远。怎么说呢，感觉，如果什么事情发生了，我也难得激起这样子的想法。委屈我是很难感到的，似乎也没碰到什么让我委屈的事，或者说我心大吧？至于愧悔，这个事情就更少见了。我很少后悔什么事情。至于后悔就是觉得当初应该做什么而不应该做什么之类云云，可能一瞬间会有这样的想法，但是很快就消失掉了。正如小径分岔的花园，一条道路在某个地方分叉，便构成了一个新的世界。我选择了其中一个，也就这样成为了自身；另一条道路上的怕不是我吧。所以这样子的心态让我不太产生后悔这种情绪；同时我也接受缺陷之类不完满的因素。所以遗憾的心情若要产生便更是困难了。倘若用时下流行的话来说的话，差不多就是“佛系”了吧。但是又很奇怪的，我自以为自己是一个看起来大大落落，但是还算敏感的人，不应该没有这些细微稠密的情感才是。但在仔细的思索之后，我觉得没有什么。</p><p>　　但这样子也未免会让现在的读者感到索然无味。所以说一个可能和这种心情有关系的事情吧，然而我也早就释怀了。即使曾经有过可能类似的感情，现在或也早已不在了。</p><p>　　是初中和高中时候的事。我小学六年级和中学时代都是在一个成都的私立学校里度过的，这个学校在当地挺有名的，也有很高的直升率。所以从小学一直到高中都在这个学校就读并不是什么奇怪的事。于是在这个阶段里我有很多七八年的朋友或者同学，但是在直升的过程中也会存在之前的好友分到同一个学校两个班的情况。虽然叫很多情况来说已经再好不过了，但总是叫人遗憾。于是你或许大概知道我要说什么样的故事了，但是为了避免感到无聊，请先打消自己的猜想吧。</p><p>　　其实上面的背景并没有描述完。这里再补充一些东西。我中学时代在的学校一直都有精品班这种东西，即使小学也是。我当时是小学五年级稀里糊涂地通过笔试（这是另一个诡异的事了）进入这个学校，然后进入了初中部的两个精品班中的一个。时间很快到初三了，这个时候也是决定直升的时候了。然而高中很特殊的是，他的两个精品班是两个等级，分为更优秀的和一般优秀的。既然这样说了，这个故事就更平常不过了。</p><p>　　下面可以开始正是讲这个事情了。当然是说关于我和我的好朋友的事。下面以 L 君代替他的名字吧。我们是从小学六年级开始做同学的，初中也是一个班。怎么说呢。我是那种不太外向的人，平时也喜欢孤零零的做事情（直到现在也是）。加上初中学校实行的是住宿制，然而我是走读的。所以从哪个角度都是和同学关系更疏远一点的那种，于是很容易想见我并没有太多的交心的朋友。L 君是其中的一位。前面的事情就不多说了，总之我一直感到很幸运能有 L 君这样子的朋友。非要说的话，其实已经结拜兄弟了……总之这之前的事情琐琐碎碎，就跳过吧。</p><p>　　虽然我初中很划水（我一直属于很划水的那种），但还是勉强又可以进入更好的精品班的资格。遗憾的是 L 君没有。然后，当时我说服了我的父母，我的班主任和年级组长，选择放弃进入最好的那个班的资格进入后面那个。每一个年级一共有一百来个人直升，这么多年来也没有人这样子干过。我很难说是不是因为 L 君的缘故，但是坦白来说，极大程度是因为这个。对于我这样的人，能找到一个朋友是很难的。所以这一番努力之后，也就能继续和 L 君做同学了。后来高中快要开学了，然后军训、开学。拉拉杂杂一堆。当我走到我的新教室的时候，我的初中同学及高中同学告诉我，因为我选择退出最优班，以及两三个直升的同学违背直升协议去了期中，于是通过最后在直升期间内的先导课的结业考试中的三个优秀同学升入其中。他告诉我那场考试我是考的最好的，但是我自己选择退出了，所以并没有通知我。然后我就知道了，L 君进入了最优班。这个时候，我正好看到了他，确认了这个事情。他大概给我解释了为什么没和我说这个事，然后抱歉地笑了笑。</p><p>　　事情就是这么诡异，可能其他人看来这巧合也过分了点。所以自然而然的这里会产生这个故事中应当会出现的后悔的倾向，也是我讲这个故事的原因。在那很久之后，我都觉得很难受。倒不是因为他去了另一个班，而是我在这一个班。我为他能去哪一个班而感到高兴，他可以有更多优秀的同学、获得学校更多的帮助，是真心的高兴。同时觉得自己如果当时什么也不做就好了，这样还能继续是同学。于是这样，在高一上的时间内，因为不在一个班，寝室也不在一层楼，平时难得见到面，也就上操之类的能打个照面。于是当我在为高一艺术节写班级节目的话剧剧本的时候，不免觉得遗憾。这种心情真是难以描述、更难以消解。这种心情持续了一个学期，他是知道的，但也没有说什么。</p><p>　　然后到下半学期的时候，我们高中有一个类似于团队建设的大型活动，有一个下午是户外活动。那个时候是夏天，最后是那个翻墙的活动。就是一些人作为支柱把另一些人托上高墙然后再上墙之类的。我想你也玩过。当时我们分到了一个组里面，但也没有说什么，就是坐在一起看其他人四处跑啊跳啊。然后我们就在那坐了很大一阵子。后来爬墙开始了……最后我找到 L 君的时候，白体恤上就全是泥巴脚印子了。然后紧接着的校运动会，L 君是学生会的人，自然要负责纪律啊什么东西。然后我在学校里瞎溜达，去了趟小卖部买了瓶水给他。</p><p>　　后来我大概就知道了。这件事情没有什么好遗憾的，我想。或许正是因为当时我选择下降，才会有上升的机会。我想这样子也就够了。我是一个阴沉的人，平时就喜欢翻翻杂书，周末也不会有什么交际，思想也总是混乱消极的很；然而 L 君是一个完全不一样的人，很积极、主动，在同学间也很受欢迎。我想，这样也就够了。他是一个很有意思的人，我觉得，这个机会给他比握在手里更好一点。当然，这也是瞎想，可能不论我是不是做了那个决定，他都会上升一级。但是并没有什么遗憾的，我有着一个朋友，突然自己觉得非常难受的时候可以倾诉，可以站在那里一言不发的听着自己的抱怨，或者听我平时的漫无边际的空话，我觉得已经很好了。这样看来，我稍稍远一点，他会有机会结交更多的人、认识更多的朋友、看见更多的世界。后来我甚至有点庆幸发生了这样子的事情，虽然我并没有觉得自己发挥了什么作用。但是看见他后来过得很好，我也就释怀了。</p><p>　　再后来，高一下分文理，于是又有了一次调整班级的机会。当时我的成绩出奇的好，于是没什么疑问的可以到 L 君的班级。我的班主任希望我过去，他觉得我可能在那边可能会有更好地发挥。我后来还是放弃了，呆在了原来的班级，我觉得这样就可以了。后来又陆陆续续发生了不少有意思的事情，但是整个故事差不多交代清楚了。至于我中间的心情变化，是很难用形容词之类的描述的。如果希望更真切地知道我当时的想法的话，或许可以在这些句子的构造，以及叙事的节奏里略知一二吧。所以我的懊恼就是这样，无来由的生出又消失，最后甚至这样子很完满。所以所谓这种感情，我怕我是真难得体会一次了。我自以为这一个问题我是回答了。</p><p>　　然后我试一下回答第二个吧。这个答案就相对随意了，因为我的答案自身就是随意的。这里重述一下前提是不考虑生计问题，也就是也足量但不保证丰裕的资金，我是这样理解的。如果让我选的话，如果假设我有那么一点点文学或者音乐的才能的话，我想做一个流浪歌手在各地走走。就是到处走走，先把中国走一遍，走累了就在就近的城市歇一歇，看看当地的博物馆、非遗什么的，就一间小旅馆里面写写歌，作作诗，最好的话是有个能力写一个长篇小说。然后思考一些无关紧要的琐碎问题，学习我感兴趣的科目和知识。如果在一个地方呆的厌烦了，就继续走。中国走完了就沿着中东的方向往西走，去一趟埃及，然后往上走去欧洲。把欧洲差不多都走一圈，走累的就找个民俗呆着，继续写诗写小说，学习以及游览。北欧这些地方我要多呆一会，看看北极光什么的。然后继续到处走。</p><p>　　如果能活得久一些，就走完了全球还能勉强回到中国，我差不多也就累了，就去云南贵州四川交界的那个泸沽湖里呆着看日出日落，写写旅行记录以及回忆录，把自己所见所闻都写下来。偶尔去其他城市拜会拜会老朋友。然后等待那个时刻的到来就可以了。</p><p>　　这样看来这个答案是够自私了，我没有提到自己的父母、妻儿家庭、朋友和社会事业什么的。我想平时回家看看，在家里带一些时日就可以了。家庭的话我并不想考虑，这并不是我理想生活的一部分，我是个浪荡的人，并不想连累其他的人过上这种漂泊的生活，并且我是一个习惯自由的人——看起来很是一个没责任心的人说的话了。以及朋友，或许我有提到，既然是旅行，到一个地方就拜访当地的朋友。当然并不会又很多。社会事业？这是一个很难的问题了。它本就与漂泊的方式格格不入。如果存在那么个清闲一点的工作，比如一年都某个高校里呆个三四个月讲讲课，然后其他时候就自由地到处走走、学习自己想学的东西，这样最好不过了，不过难得有这样的机会吧。如果以什么责任心或者别的来指责我，我也是会心虚的。因为在这种生活里，责任心没有什么容身之地，我也觉得苦恼。</p><p>　　这样，我觉得我的第二个问题也回答了，虽然觉得可能自己回答的不是你想听的内容？但是我尽力表达了自己的意思。倘若为这个选择遗憾的话，我也觉得遗憾，但人生就是一个稍纵即逝的东西。有形的事物终将凋亡。</p><p>　　然后我来回答一下第一个问题吧。猎人、农夫、铁匠、木匠、神职人员、外科医生、天体物理学家、小说家、桥梁工程师、幼儿园老师。这个是没有采用先后的，如果要排个先后的话，估计是农夫和猎人占首，神职人员和天体物理学家，然后是幼儿园教师和小说家，其余的话看着办吧。总之既然有十个席位，那谁先谁后就不重要了。至于原因，相当主观了。不过既然是个问题，也许可以对人的性格分个类吧？或者判断一个人的决策能力？我还是大致说一下自己的原因吧：农夫和猎人，满足或是需要，并且这两个的新环境生存能力很强，适合开荒；然后是神职人员使留下的人保有生存的希望，科学家尽量留存人类世界遗留的智慧；幼儿园老师和小说家担当教育的职责。其余的就是保证可以有屋子住，可以有好的工具使用，可以排除简单的病痛。这样就足够了。至于其他没有上榜的人，原因不一一赘述了。至此我认为这三个问题算是解决掉了。至于你是否满意，我就并不清楚了，我尽量保持真诚就可以了。</p><p>　　然后猜想着你的上一封信是有书籍推荐之类的东西。我试着也推荐一些吧，可惜最近读的书是真不多，而且很多还不令人感到满意。可能之后都会这样了，毕竟也越来越忙了。这里我还是推荐一点吧。《荒原狼》，虽然感觉你很可能读过，我还是列在了这里，对它有一种特殊的感情。也许是代入感？如果没有读过的话，请试一下吧，应当是不会失望的。音乐的话，我并不是太敢使用这种形式推荐出去。说实话，我平时惯于听的音乐都不太开朗，阴郁的小调占了大部分。欢腾的曲子也莫过于贝九了。所以我试着在这里不推荐古典乐，先推荐一个《归乡》吧。本来是火影的一个配乐，高梨康治谱曲，不太好描述，可能听了就知道了？本来不是个看动漫的人，但是火影是个例外。很难说明原因，都看了多少遍了。总觉得有一些特殊的情愫吧。虽然我没听什么歌，还是推荐一点点吧？David Bowie 的<em>Five Years</em>， Ashram 的 For My Sun 以及 Tamino 的 Habibi。这样子，你估计就知道我平时听音乐的风格了吧？</p><p>　　然后，说起这个，现在也可以反问你我这里回答的第一个（懊恼）和第二个问题（没有生存压力）啦。我也有那么一些兴趣吧。至于第三个，你肯定正经地想过了，所以我得换一个。所以，既然我这里讲了一些关于我的朋友的事，请你也稍微说一说你的朋友吧？如果可以的话？</p><p>　　最后的遗憾是不知道你的上一封信里写了一些什么。我是挺想知道的，这样子我的回信里也可以有一些评述。可惜遗失掉了。现在希望的是这一封就不要遗失吧？最后愿笃志，找到自己的那本书。这次，就这样吧。</p><p>　　顺颂清安</p><p>　　廙水</p><p>作于 2019 年 3 月 3 日。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给三弟的信</title>
      <link href="/2019/essay/%E4%BF%A1%E4%BB%B6/%E7%BB%99%E4%B8%89%E5%BC%9F%E7%9A%84%E5%8E%BB%E4%BF%A1/"/>
      <url>/2019/essay/%E4%BF%A1%E4%BB%B6/%E7%BB%99%E4%B8%89%E5%BC%9F%E7%9A%84%E5%8E%BB%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Sorry, password needed.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="72fff1012231b5871b6b561f6493b5824eadb42119e5cc17f318f25ad12eb99e"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>落日记</title>
      <link href="/2019/essay/%E6%89%8B%E8%AE%B0/%E8%90%BD%E6%97%A5%E8%AE%B0/"/>
      <url>/2019/essay/%E6%89%8B%E8%AE%B0/%E8%90%BD%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-FvoTGVrA" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="17685905" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>应邀写的一篇稀里糊涂的日记，权当是好玩吧。写作的时间已经不可追溯了，大概是在大一下开学的时候。粗粗地记录了一下报道的事情。</p><a id="more"></a><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>&#160; &#160; &#160; &#160;太阳本来升的高高的，但是上海根本看不见。地上带有一些雨的印子。“明天是要下雨。”WU 君看着地上约 10 厘米的蚯蚓这么说。他们热乎的谈着篮球，什么三分啦，全明星啦。“这个投篮大赛是真的没意思”。F 君及 H 君聊得很是投机。我刚刚想的那一段是什么曲子里的来着？第几乐章？“有人可以从中线投到篮筐的吗？”“在空中连续投三个栏是什么意思”。表述不对。过了正大体育馆的门，然后是 WU 君寝室的门，然后是 C 君寝室的岔口。每周必有的罗森晚宴。哈，和 WU 君及 C 君都谈过的 2 的根号二次方的故事。“去年的特别好看……”，谁？然而名字我已经记不到了。然后是 H 君的寝室门口。“你们拐一下吧，能多聊一会。”“那能从中场投到篮框是真的厉害。”H 君已经离开了讨论。“是，NBA 的运动员和我们不是一个等级的。”“你系统是多少级的。”出寝室的时候 F 君如此问。　</p><p>　　“哎？你这么早到啦？”“还好吧。”出去吃早餐的时候刚刚碰见 F 君。“W 先生仍未出现……”然后去把教材买了。昨天溜达的太久，从这里到光华楼，再回来。于是我忘了。一定记着，不然教材会没有的。然而知识的门紧闭着是在早餐之后被发觉的。昨天我疑心食堂换了师傅，我该和 C 君说一下，毕竟是有趣的事。C 君还没到，C 君报到怎么办？不，等我先检验一下。于是和昨天的内容一样。蛋饼同昨日一般软，肉包却已是很久以前的味道。也许师傅换了一半，也许改良了一下，也许时日已长。其实应当买生煎的，好久没吃过了。生煎那里没有豆浆，不，不要排两次队。Lament, lethal…vital?不，不对。Nomadic, romantic。到我了。昨天师傅说点包子请指明种类。“肉包。”L 君提到的日记的事情，我应该用什么东西记一下？不然就忘完了嘛。馅泛黑色，酱油依然多，是上学期的 genre。看着豆浆盖里的泡泡。我也许拿了一批豆浆的最后一杯，豆浆也许是最少的。我昨天应当把第十章看完，然而还有一本书。对，我的书该还了。先还了再借出来。嗯！是恰空，我收藏过没有：没有，演奏者：不明。那上面写着巴赫。但是《韦洛克》不需要了。等会记着去买教材。对，是要记下来，我昨天什么没买齐来着。手机掏出来。洗发露……我没和 F 君说我昨天借用了一下，但是应该干了。和燕麦片。走吧，看看教材。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>&#160; &#160; &#160; &#160;今天应当是没有太阳了，“你报道去吗？”“不是的，买教材，你去不去买教材？”“你等我一会。”“一会是多久？”“十分钟。”“好。”手上有个扳手，刚刚做什么去了来着？不会借个扳手这么久的。那回去吧。合着节奏的敲击声的声音，为什么阿尔蒂夫尼的回礼是放屁显得费解。“扳手比锤子好用。”“不会吧？”“他还可以把弯的钉子扳正。”“好吧。”他的床板现在看起来结实了。等等，我要还书。让我先把书放进包里。我缺哪几本书？模电是紫色的。“你们什么班的？”“找模电。”我正找不到来着。那里，果然紫的。还有一本 C++的书。外面没有了，里面有几本，绝版了。绝版了为什么还当教材，有老师喜欢。果然有两本，红色的。我想起了《C++ primer》。一共 100.8.“好，支付宝在哪里？”哦，看见了，两毛钱。支付在哪里？哦，看见了，另一个码。“有红包可以领”老板说着，“72”。为什么便宜一点？对，他模电的辅导书没拿。帮他拿一本，多少钱来着？50.不是五折。“支付宝到账一佰……”。　　</p><p>　　“元宵节快乐哈，回去就给你打钱，[笑脸]。”“你这个寒假都听了些什么？”“有一首恰空特别好，维塔利的。”“喔喔，我知道，我听了一个寒假的平均律。”我看着手里的手机屏幕亮了又灭，F 君应该是开始睡午觉了，我该不该提醒一下？不了，Z 君挺高兴的样子。我们愉快地谈起赋格，我突然想起刚看完的第十章。“我给你看一个有趣的东西。”我搜索着《尤利西斯的注释》，并不在书架上，在书包里。啊，我忘记还书了，算了，明天去。我把书拎出来给 Z 君看，Z 君兴味盎然。于是平均率的声音从 Z 君的手机里传出来。于是 Strauss.R 的曲子从我的手机里传出来。于是莫钢的声音从 Z 君的手机里传出来。于是勋伯格月光下的比埃罗从我的手机里传出来。于是萨蒂某我不知道的曲子从 Z 君的手机里传出来。于是萨拉萨蒂的流浪者之歌从我的手机里传出来。“揉弦和颤音有什么区别？是手用的不一样吗？”我不知道，我可以查查。“帮我把琴拿过来吧，我正好在练揉弦。”我两天多没练琴了。上学期甚至更长。“那我先回去了。”“好”。F 君呼吸的声音涌进之后的沉默。我把琴放了回去。　　</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>&#160; &#160; &#160; &#160;“你去报道了吗？08:07”“没，在超市买东西，要帮忙带东西吗”“带两瓶矿泉水吧”“那你马上回来再去报道？”“是”“报道不是还早吗”“OK 那我等你一块吧”“嗯”。“GPA Tool 为什么已经下不了了 18:33”WU 君。等会，等会再回复，直接发给他。我的日记才开头。“[分享]各 DBG 简评 18:19”LY 君。等会，等会再回复他，他怕不是掉进了这个坑。“您的快递已签收。”　　</p><p>　　他好像开始研究多人游戏的打法了。我真的想看会书，去报到以前的那一章的最后几道题没有做出来。“我这个月要吃土了。”“我已经把我的女朋友拉进坑了。”不行，三缺一。“我现在正在给我初中的同学安利。”我这个月要吃土了……　　</p><p>　　“我系统是 7.0.0 的，三星系统升级一向比较保守，你应该是 8.0.0 的。”“我看下。”蓝厂的 apex，真的可怕。“你知不知道知乎被下架了？”拿进来外卖的 F 君如此问。“不知道。”“据说是讨论任期的事情。”“真是可怕……”耳机重新戴上。是莫扎特的小步舞曲？不是，是三重奏。“你知不知道 MWC2018 大会上 vivo 的 APEX？845，真正全面屏，连前置摄像头都没有，甚至有 HIFI 芯片……”于是我们走到了食堂。其实我想吃全家的。出门时我如是想，但毕竟时间还长。走到了难以抉择的三岔路口。“中午吃什么？”“我随便。”于是我迈上了右转的道路。“二楼吧。”于是我收敛了我的腿，迈上了上升的阶梯。阳光普照炒饭，我一直想吃来着。“阳光普照炒饭。”8 元。“我以为是黄金蛋炒饭…你看过《中华小当家》没有？”“你看过《神厨小福贵》没有。”于是迈上童年之路。路上有着游戏王的事，预言的事，反转的事，大反派的事。然后…“你看过《死神》？”“对啊，六年级开始看的，烂尾时伤心好久。”于是迈上讨论《死神》的小径，童年里的讨论者开始向寝室方向进发。　　</p><p>　　洗发露。于是开始向着学校外不远的超市移动。但是我的储值卡昨天就用完了。酸奶没有我要的口味，只能提着原味回寝室。我还是去学校里的超市吧，也许便宜一点。不，我已经走了一段距离了。骑车吗？不，那种东西会滑出来，而且车是湿的。燕麦片只有那种很大包的，那只能拿一瓶洗发露了。然后我的手机响了。　　</p><p>　　为何变成奥斯卡金曲些了。不行，我休息一下。　　</p><p>　　好了，现在是肖斯塔科维奇了。　　</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>&#160; &#160; &#160; &#160;为什么这个表情老是打不开，昨天是这样，前天是这样，这样都好久了。我是挺想给对面发一个滑稽的，不知道为什么这么突然喜欢上这个老游戏。啊？这个肖斯塔里面有人在唱歌？这么如痴如醉地买了这么多扩充包。网上说是 dpi 的问题，也有说是隐藏底栏的问题，我都试试吧。于是手机进入了反复调整重启的状态。太阳从来没出现过，但是天就开始黑了，该吃饭了。我的手机屏幕一会亮一会黑，不行，这个底栏太大了。重启。GALAXY S8。嗯，这个合适了，那个菜我没见过。“今天有汤圆。”对，我刚刚看见了。对，今天是元宵节。“我这儿元宵十五上物理课”一个不辨男女的头像。L 君。不要急啊，正在写啊。“汤圆在那边。”“不，就吃饭。”我想试试那个新菜。像是土豆。“我要那个土豆。”果然是甜的，也确实是土豆。里面的肉有股快餐店的味道？食堂或许真的来了新的师傅。那边有个同学的头发挺长的，眼睛都看不见了。我以前也这样，我以后也这样。再过几个月？　　</p><p>　　门口碰见了阿姨在浇水。“阿姨好。”“哎，你好，有你的快递。”浇的什么？蒜？“阿姨这是蒜吗？”“是，蒜发芽了就…你吃汤圆没有？”“没，我们那边不吃汤圆的。”我现在是在干什么来着。阿姨整理着一些快递的包裹。嗯，我是来领快递，我都忘了的。“你把那个表填了。”为什么要填这么多，原来不是只签字的么。也许还在放假的阶段。我抱着我的箱子继续向上攀登。</p><p>　　“是盖个章就可以走了吗？”H 君问辅导员先生。“是呀，盖个章，签个字就能走了。”“早知道我让个同学帮我办了，我能多睡几天懒觉。那延迟报道怎么办？”辅导员旁边站的是哪位？是他的女朋友？他女朋友长什么样的，我记不得了。上学期指导形势与政治来着。不，我不知道，不知道就不要乱说。那我们可以回去了。“话说我们组上学期讨论要聚餐的，趁没开学聚聚啊。”“晚上约了高中同学。”大家都忙啊，然而热闹是他们的，我……“你了解笔记本电脑吗？”“不，不清楚，在攒钱买，估计大二换。”我突然感到有人拍我，“嗨，新年快乐！”是 H 君。“嗨，好久不见。”“上海真是冷，来了就盖个章，早知道多睡几天。”“早来两天也挺……”“学校也真是的，如果晚开学两天，我妈绝对会多留我两天的，我等会问一下怎么延迟报道。”上海和成都温度没什么差别。哪里都一样。我想起了哈尔滨的三弟。愿安好吧。养生，现在也有 0 摄氏度了，没这么冷了。　　</p><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>&#160; &#160; &#160; &#160;这教材居然是哈工大的，果然……那那本程序语言呢？看起来特别厉害。原来是斯坦福的老教材。上学期那个教材是真的不像话，这本也许会比较有趣，网上评价还蛮好的。“去吃饭吗？”“我把床收好就去。”于是我开始计算偏导数。翻到昨天那一处。“x 与 y 的地位是平等的。”我记得我折了一下。对，是这里了。　　</p><p>　　“我找到了，不知道你有没有兴趣，我这里刚好有《死神》的一个游戏，PSP 移植的，刚好我还有模拟器，你要我考给你。”我应当继续看我 Python 的课，第五节看了一半了。“好，你给我嘛。”我饶有兴趣地看他玩了一小会，我的手机提醒来了。对，是看那个课的时间了。“你先玩着，我去看看书。”等等。微信。我们班有了个新同学？难道是今天……？不，不重要。耳机带上没多久，敲键盘的声音听不见了。对，他还在自己的座位上，但是应该是没玩了。一节课仍没看完，有敲门的声音。W 君到啦？不，里面探出 Z 君的头。“你烫头发了。”Z 君与 F 君攀谈起来。过了一会，他进了我的寝室。“你在干什么？你剪头发啦？”午饭那个同学头发确实挺长的。我把包挪出来给 Z 君一个位子。书包里有什么？</p><p>　　我不知道。这么多问题自问自答有什么好的。“汇了 2000 元哈，元宵节快乐[微笑]。”我不知道，元宵节应该是个团圆的日子吧。我在昨天看见了月亮，成都是不可能看见月亮的。但是上海的月亮异常的清晰，它是那么的圆，那么的白，像绕成环的抽纸，像漂白的太阳在污水里燃烧。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bonjour</title>
      <link href="/2019/essay/Bonjour/"/>
      <url>/2019/essay/Bonjour/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-KlstllNa" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="465469873" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>这是 Joseph 的博客。也许你在其他地方几乎听不见他的声音。但是这里可能会留存一些，我是说可能。当然，很感谢你可以找到这个地方。</p><a id="more"></a><p>但是有几个麻烦的问题需要解决。</p><h2 id="Joseph为什么写博客？"><a href="#Joseph为什么写博客？" class="headerlink" title="Joseph为什么写博客？"></a>Joseph为什么写博客？</h2><p>正如前面提到的，也许在大多数情况下，这个博客的主人都会保持沉默。或许有一些特殊的理由，但他自己也不知道。或许是他希望可以和别人分享一些小小的东西，当这些东西在心里产生了巨大的重量，以致于他需要排泄出来。</p><p>或者他只是简单地希望一小部分人——很小的一部分人知道这个鬼鬼祟祟的人在想一些什么，或者干一些什么。当然，这样解释并不是很合理，大部分人阅读信息的目的也许并不是为了了解其他人，而是为了更好地理解自己。所以下一个问题是：</p><h2 id="Joseph的博客写给谁？"><a href="#Joseph的博客写给谁？" class="headerlink" title="Joseph的博客写给谁？"></a>Joseph的博客写给谁？</h2><p>这个问题同样是难以回答的。因为大部分人应该都意识不到这个网址的存在（或者说故意给这样一个网站设定了被访问的门槛），Joseph 自己也不知道这个冲动将要维持多久。同时他不知道可能会有兴趣看这些杂七杂八的人在哪里。但是无论是谁，一定是 Joseph 的朋友们吧，不论他们曾否蒙面。</p><p>但是很大意义上，这个博客是 Joseph 写给自己的。现代人缺乏一种自我沟通的方式，也变得健忘。也许他只是打算用这种方式让一些片段的思维可以保留的更远一点而已，让以后的自己可以知道他原来在这个星期天的下午在思考一些什么样的东西，读了一些什么样的书，给出了什么样的评价，学习了一些什么样的技术。如此就可以了。</p><p>当然，我欢迎我的其他朋友。很高兴我们可以在这里碰面，并且一些人或许愿意多停留一会，多来几次听这个稀里糊涂的人的絮絮叨叨。我很感谢你们。但是你们可以在这里找到一些什么呢？</p><h2 id="Joseph在这里写一些什么？"><a href="#Joseph在这里写一些什么？" class="headerlink" title="Joseph在这里写一些什么？"></a>Joseph在这里写一些什么？</h2><p>他原本的初衷是想做一些永久的，私人的笔记。然而这个野心迅速就扩大了。也许这里将变成一个半公开的思维的储存地。会有很多混乱的言语进入其中。但很有可能的，这里面是一些关于文字、音乐、思考、科技的东西，但是除此之外可能会夹杂一些随意的笔记，那种散漫的，毫无目的的简短文字。我知道你懂我的意思。当然，初衷：一些学习的笔记。后面这些东西渐渐反了过来，变成记录自己琐碎日常和臃肿思考的地域；所以当你觉得他的文字无聊的时候，这是很正常的。</p><h2 id="如何联系Joseph？如果你想聊几句？"><a href="#如何联系Joseph？如果你想聊几句？" class="headerlink" title="如何联系Joseph？如果你想聊几句？"></a>如何联系Joseph？如果你想聊几句？</h2><p>“嗯，他并不想让他的读者们在文章下面拉拉杂杂的讨论自己拉拉杂杂的文字，所以？邮件联系他吧。他也许会很快回复你，也许不会。这个几率可能和那一天出太阳没有相关。总之他一定会回复的。如果有一些有意思的话题，他希望更深入的探讨，他也许会写一封公开信，当然在征得同意之后。”这是Joseph之前的想法，但是这个发生了一些变化。在仔细地考虑之后，Joseph还是决定打开了评论的开关（尽管没有人会在下面留言吧）。这样联络的方式或许简单了很多，或许一点变化也没有，但大概变化就是如此了。然而自21年5月份开启这个功能后，他什么也没有收到过。</p><p>总之就是如此了，我很感谢你们的到来。让我觉得这里有那么一点点的人情味。再次感谢。祝好。</p><h2 id="P-S-如果你是第一次来到这里"><a href="#P-S-如果你是第一次来到这里" class="headerlink" title="P.S. 如果你是第一次来到这里"></a>P.S. 如果你是第一次来到这里</h2><p><strong>关于字体</strong></p><p>本来 Joseph 打算将 Blog 的字体统一为自己常常使用浏览器时设定的字体，但似乎对于字体的客制化没有非常好的方案。使用将字体挂在网络上的方法，每一次刷新需要从网站上拉取字体文件导致访问体验骤降。这在 Joseph 看来是不能忍受的延迟（这关乎美感），于是最后还是砍掉了使用特殊的字体。</p><p>现在的字体设定将会使用查看网页的设备自己的字体库，如果在设备中恰巧拥有同样的字体，它会以正确的方式呈现。如果你们有兴趣的话，可以主动在自己的设备上安装相同的字体。这是通往这个字体 [源样明体] 的<a href="https://github.com/ButTaiwan/genyo-font" target="_blank" rel="noopener">Link</a>。你们可以通过点击这个<a href="https://josep-h.gitee.io/images/GenYoMinTW-Medium.ttf" target="_blank" rel="noopener">Link</a>进行主动下载安装。（这个流程在 Windows 系统下非常容易。）以下是这个字体的效果：</p><center><img src="/images/font_example.jpg" width="80%" height="80%" /></center>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
